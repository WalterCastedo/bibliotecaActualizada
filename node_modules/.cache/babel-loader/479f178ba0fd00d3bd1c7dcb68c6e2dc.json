{"ast":null,"code":"import { computed } from \"vue\";\n\nconst useCarousel = (props, currentSlide) => {\n  const goTo = index => {\n    currentSlide.value = index;\n  };\n\n  const prev = () => {\n    if (props.infinite) {\n      if (currentSlide.value <= 0) {\n        currentSlide.value = props.items.length - 1;\n        return;\n      }\n    }\n\n    currentSlide.value -= 1;\n  };\n\n  const next = () => {\n    if (props.infinite) {\n      if (currentSlide.value >= props.items.length - 1) {\n        currentSlide.value = 0;\n        return;\n      }\n    }\n\n    currentSlide.value += 1;\n  };\n\n  const doShowPrevButton = computed(() => currentSlide.value > 0 || props.infinite);\n  const doShowNextButton = computed(() => currentSlide.value < props.items.length - 1 || props.infinite);\n  return {\n    doShowPrevButton,\n    doShowNextButton,\n    goTo,\n    prev,\n    next\n  };\n};\n\nexport { useCarousel as u };","map":{"version":3,"mappings":";;AAEa,oBAAc,CAACA,KAAD,EAGxBC,YAHwB,KAGM;EACzB,aAAQC,KAAD,IAAmB;IAAED,aAAaE,KAAb,GAAqBD,KAArB;EAAqB,CAAjD;;EACN,MAAME,OAAO,MAAM;IACjB,IAAIJ,MAAMK,QAAV,EAAoB;MACd,iBAAaF,KAAb,IAAsB,CAAtB,EAAyB;QACdF,qBAAQD,MAAMM,KAAN,CAAYC,MAAZ,GAAqB,CAA7B;QACb;MACF;IACF;;IAEAN,aAAaE,KAAb,IAAsB,CAAtB;EAAsB,CARxB;;EAUA,MAAMK,OAAO,MAAM;IACjB,IAAIR,MAAMK,QAAV,EAAoB;MAClB,IAAIJ,aAAaE,KAAb,IAAsBH,MAAMM,KAAN,CAAYC,MAAZ,GAAqB,CAA/C,EAAkD;QAChDN,aAAaE,KAAb,GAAqB,CAArB;QACA;MACF;IACF;;IAEAF,aAAaE,KAAb,IAAsB,CAAtB;EAAsB,CARxB;;EAWA,MAAMM,mBAAmBC,SAAS,MAAMT,aAAaE,KAAb,GAAqB,CAArB,IAA0BH,MAAMK,QAA/C,CAAzB;EACM,yBAAmBK,SAAS,MAAMT,aAAaE,KAAb,GAAqBH,MAAMM,KAAN,CAAYC,MAAZ,GAAqB,CAA1C,IAA+CP,MAAMK,QAApE,CAAnB;EAEC;IACLI,gBADK;IAELE,gBAFK;IAGLC,IAHK;IAILR,IAJK;IAKLI;EALK;AAOT,CApCa","names":["props","currentSlide","index","value","prev","infinite","items","length","next","doShowPrevButton","computed","doShowNextButton","goTo"],"sources":["../../../../../../src/components/va-carousel/hooks/useCarousel.ts"],"sourcesContent":["import { computed, Ref } from 'vue'\n\nexport const useCarousel = (props: {\n  items: any[],\n  infinite: boolean\n}, currentSlide: Ref<number>) => {\n  const goTo = (index: number) => { currentSlide.value = index }\n  const prev = () => {\n    if (props.infinite) {\n      if (currentSlide.value <= 0) {\n        currentSlide.value = props.items.length - 1\n        return\n      }\n    }\n\n    currentSlide.value -= 1\n  }\n  const next = () => {\n    if (props.infinite) {\n      if (currentSlide.value >= props.items.length - 1) {\n        currentSlide.value = 0\n        return\n      }\n    }\n\n    currentSlide.value += 1\n  }\n\n  const doShowPrevButton = computed(() => currentSlide.value > 0 || props.infinite)\n  const doShowNextButton = computed(() => currentSlide.value < props.items.length - 1 || props.infinite)\n\n  return {\n    doShowPrevButton,\n    doShowNextButton,\n    goTo,\n    prev,\n    next,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}