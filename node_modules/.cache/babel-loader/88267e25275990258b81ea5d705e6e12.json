{"ast":null,"code":"import { h, Fragment } from \"vue\";\nimport { u as useComponentPresetProp } from \"../../composables/useComponentPreset.js\";\n\nvar VaTimeline_vue_vue_type_style_index_0_lang = /* @__PURE__ */(() => \":root{--va-timeline-display: flex;--va-timeline-flex-wrap: nowrap;--va-timeline-vertical-flex-direction: column;--va-timeline-vertical-padding-left: .25rem;--va-timeline-vertical-padding-right: .25rem}.va-timeline{display:var(--va-timeline-display);flex-wrap:var(--va-timeline-flex-wrap);font-family:var(--va-font-family)}.va-timeline--vertical{flex-direction:var(--va-timeline-vertical-flex-direction);padding-left:var(--va-timeline-vertical-padding-left);padding-right:var(--va-timeline-vertical-padding-right)}.va-timeline--align-top .va-timeline-item__before,.va-timeline--align-top .va-timeline-item__after{flex:0}.va-timeline .va-timeline-item{flex:1}.va-timeline .va-timeline-item--vertical .va-timeline-separator--vertical .va-timeline-separator__line:first-child{flex:0 0 1rem}.va-timeline .va-timeline-item--vertical.va-timeline-item--is-first .va-timeline-separator--vertical .va-timeline-separator__line:first-child{flex-basis:2rem}.va-timeline .va-timeline-item--vertical.va-timeline-item--is-first .va-timeline-item__after,.va-timeline .va-timeline-item--vertical.va-timeline-item--is-first .va-timeline-item__before{padding-top:2rem}.va-timeline .va-timeline-item--vertical.va-timeline-item--vertical.va-timeline-item--is-last .va-timeline-item__after,.va-timeline .va-timeline-item--vertical.va-timeline-item--vertical.va-timeline-item--is-last .va-timeline-item__before{padding-bottom:2rem}\\n\")();\n\nconst getPropsData = slot => slot == null ? void 0 : slot.props;\n\nconst getIsActive = slot => {\n  var _a;\n\n  return !!((_a = slot == null ? void 0 : slot.props) == null ? void 0 : _a.active) || false;\n};\n\nconst isVueFragment = slot => slot.type === Fragment;\n\nconst isEmptyArray = arr => arr && arr.length === 0;\n\nfunction getSlots(slots) {\n  var _a;\n\n  const defaultSlots = (_a = slots.default) == null ? void 0 : _a.call(slots);\n\n  if (!defaultSlots || isEmptyArray(defaultSlots)) {\n    return [];\n  }\n\n  if (isVueFragment(defaultSlots[0])) {\n    return defaultSlots[0].children;\n  }\n\n  return defaultSlots;\n}\n\nconst processSlots = context => {\n  const slots = getSlots(context.slots);\n  slots.forEach((slot, index) => {\n    if (!getPropsData(slot)) {\n      slot.props = {};\n    }\n\n    const propsData = getPropsData(slot);\n    propsData.vertical = context.props.vertical;\n\n    if (context.props.centered) {\n      propsData.inverted = !!(index % 2);\n    }\n\n    if (index === 0) {\n      propsData.isFirst = true;\n    }\n\n    if (index === slots.length - 1) {\n      propsData.isLast = true;\n    }\n\n    const currentSlotActive = propsData.active;\n\n    if (!currentSlotActive) {\n      return;\n    }\n\n    if (index === 0) {\n      propsData.activePrevious = currentSlotActive;\n    }\n\n    if (index === slots.length - 1) {\n      propsData.activeNext = currentSlotActive;\n    }\n\n    const previousSlotActive = getIsActive(slots[index - 1]);\n\n    if (previousSlotActive) {\n      propsData.activePrevious = true;\n    }\n\n    const nextSlotActive = getIsActive(slots[index + 1]);\n\n    if (nextSlotActive) {\n      propsData.activeNext = true;\n    }\n  });\n  return slots;\n};\n\nconst COMPONENT_NAME = \"va-timeline\";\nconst _sfc_main = {\n  name: COMPONENT_NAME,\n  props: { ...useComponentPresetProp,\n    vertical: {\n      type: Boolean\n    },\n    centered: {\n      type: Boolean\n    },\n    alignTop: {\n      type: Boolean\n    }\n  },\n\n  setup(props, {\n    slots\n  }) {\n    return () => h(\"div\", {\n      class: {\n        [COMPONENT_NAME]: true,\n        [`${COMPONENT_NAME}--vertical`]: props.vertical,\n        [`${COMPONENT_NAME}--align-top`]: props.alignTop\n      }\n    }, processSlots({\n      props,\n      slots\n    }));\n  }\n\n};\nexport { _sfc_main as _ };\nimport './VaTimeline.css';","map":{"version":3,"mappings":";;;;;AAIA,MAAMA,eAAgBC,IAAD,IAAUA,6BAAMC,KAArC;;AAEA,MAAMC,cAAeF,IAAD,IAAU;;;EAAA,QAAC,EAAC,mCAAMC,KAAN,wBAAaE,MAAd,CAAD,IAAyB,KAAzB;AAAyB,CAAvD;;AAMA,MAAMC,gBAAiBJ,IAAD,IAAUA,KAAKK,IAAL,KAAcC,QAA9C;;AAEA,MAAMC,eAAgBC,GAAD,IAASA,OAAOA,IAAIC,MAAJ,KAAe,CAApD;;AAGA,kBAAmBC,KAAnB,EAA0B;;;EACxB,MAAMC,eAAe,YAAMC,OAAN,mCAArB;;EAEA,IAAI,CAACD,YAAD,IAAiBJ,aAAaI,YAAb,CAArB,EAAiD;IAAE,OAAO,EAAP;EAAU;;EAC7D,IAAIP,cAAcO,aAAa,CAAb,CAAd,CAAJ,EAAoC;IAAE,OAAOA,aAAa,CAAb,EAAgBE,QAAvB;EAAgC;;EAEtE,OAAOF,YAAP;AACF;;AAEA,MAAMG,eAAgBC,OAAD,IAAa;EAChC,MAAML,QAAQM,SAASD,QAAQL,KAAjB,CAAd;EAEAA,MAAMO,OAAN,CAAc,CAACjB,IAAD,EAAOkB,KAAP,KAAiB;IAC7B,IAAI,CAACnB,aAAaC,IAAb,CAAL,EAAyB;MACvBA,KAAKC,KAAL,GAAa,EAAb;IACF;;IAEA,MAAMkB,YAAYpB,aAAaC,IAAb,CAAlB;IAGAmB,UAAUC,QAAV,GAAqBL,QAAQd,KAAR,CAAcmB,QAAnC;;IAEA,IAAIL,QAAQd,KAAR,CAAcoB,QAAlB,EAA4B;MAE1BF,UAAUG,QAAV,GAAqB,CAAC,EAAEJ,QAAQ,CAAV,CAAtB;IACF;;IAEA,IAAIA,UAAU,CAAd,EAAiB;MACfC,UAAUI,OAAV,GAAoB,IAApB;IACF;;IACA,IAAIL,UAAUR,MAAMD,MAAN,GAAe,CAA7B,EAAgC;MAC9BU,UAAUK,MAAV,GAAmB,IAAnB;IACF;;IAEA,MAAMC,oBAAoBN,UAAUhB,MAApC;;IAGA,IAAI,CAACsB,iBAAL,EAAwB;MACtB;IACF;;IAEA,IAAIP,UAAU,CAAd,EAAiB;MACfC,UAAUO,cAAV,GAA2BD,iBAA3B;IACF;;IAEA,IAAIP,UAAUR,MAAMD,MAAN,GAAe,CAA7B,EAAgC;MAC9BU,UAAUQ,UAAV,GAAuBF,iBAAvB;IACF;;IAEA,MAAMG,qBAAqB1B,YAAYQ,MAAMQ,QAAQ,CAAd,CAAZ,CAA3B;;IACA,IAAIU,kBAAJ,EAAwB;MACtBT,UAAUO,cAAV,GAA2B,IAA3B;IACF;;IAEA,MAAMG,iBAAiB3B,YAAYQ,MAAMQ,QAAQ,CAAd,CAAZ,CAAvB;;IACA,IAAIW,cAAJ,EAAoB;MAClBV,UAAUQ,UAAV,GAAuB,IAAvB;IACF;EACD,CA9CD;EAgDA,OAAOjB,KAAP;AACF,CApDA;;AAsDA,MAAMoB,iBAAiB,aAAvB;AAEK,kBAAU;EACbC,MAAMD,cADO;EAEb7B,OAAO,EACL,GAAG+B,sBADE;IAELZ,UAAU;MAAEf,MAAM4B;IAAR,CAFL;IAGLZ,UAAU;MAAEhB,MAAM4B;IAAR,CAHL;IAILC,UAAU;MAAE7B,MAAM4B;IAAR;EAJL,CAFM;;EAQbE,MAAOlC,KAAP,EAAc;IAAES;EAAF,CAAd,EAAyB;IACvB,OAAO,MAAM0B,EACX,KADW,EAEX;MACEC,OAAO;QACL,CAACP,cAAD,GAAkB,IADb;QAEL,CAAC,GAAGA,0BAAJ,GAAiC7B,MAAMmB,QAFlC;QAGL,CAAC,GAAGU,2BAAJ,GAAkC7B,MAAMiC;MAHnC;IADT,CAFW,EASXpB,aAAa;MAAEb,KAAF;MAASS;IAAT,CAAb,CATW,CAAb;EAWD;;AApBY,CAAV","names":["getPropsData","slot","props","getIsActive","active","isVueFragment","type","Fragment","isEmptyArray","arr","length","slots","defaultSlots","default","children","processSlots","context","getSlots","forEach","index","propsData","vertical","centered","inverted","isFirst","isLast","currentSlotActive","activePrevious","activeNext","previousSlotActive","nextSlotActive","COMPONENT_NAME","name","useComponentPresetProp","Boolean","alignTop","setup","h","class"],"sources":["../../../../../src/components/va-timeline/VaTimeline.vue"],"sourcesContent":["<script>\nimport { h, Fragment } from 'vue'\nimport { useComponentPresetProp } from '../../composables/useComponentPreset.ts'\n\nconst getPropsData = (slot) => slot?.props\n\nconst getIsActive = (slot) => !!slot?.props?.active || false\n\n/**\n* Slot can be Vue Fragment generated by v-for.\n* If slot `type` property is Vue Fragment Symbol return true\n*/\nconst isVueFragment = (slot) => slot.type === Fragment\n\nconst isEmptyArray = (arr) => arr && arr.length === 0\n\n/* Returns correct slots without v-for vue fragment */\nfunction getSlots (slots) {\n  const defaultSlots = slots.default?.()\n\n  if (!defaultSlots || isEmptyArray(defaultSlots)) { return [] }\n  if (isVueFragment(defaultSlots[0])) { return defaultSlots[0].children }\n\n  return defaultSlots\n}\n\nconst processSlots = (context) => {\n  const slots = getSlots(context.slots)\n\n  slots.forEach((slot, index) => {\n    if (!getPropsData(slot)) {\n      slot.props = {}\n    }\n\n    const propsData = getPropsData(slot)\n\n    // Pass down vertical prop.\n    propsData.vertical = context.props.vertical\n\n    if (context.props.centered) {\n      // Every second slot will be inverted\n      propsData.inverted = !!(index % 2)\n    }\n\n    if (index === 0) {\n      propsData.isFirst = true\n    }\n    if (index === slots.length - 1) {\n      propsData.isLast = true\n    }\n\n    const currentSlotActive = propsData.active\n\n    // For inactive slot props are default\n    if (!currentSlotActive) {\n      return\n    }\n\n    if (index === 0) {\n      propsData.activePrevious = currentSlotActive\n    }\n\n    if (index === slots.length - 1) {\n      propsData.activeNext = currentSlotActive\n    }\n\n    const previousSlotActive = getIsActive(slots[index - 1])\n    if (previousSlotActive) {\n      propsData.activePrevious = true\n    }\n\n    const nextSlotActive = getIsActive(slots[index + 1])\n    if (nextSlotActive) {\n      propsData.activeNext = true\n    }\n  })\n\n  return slots\n}\n\nconst COMPONENT_NAME = 'va-timeline'\n\nexport default {\n  name: COMPONENT_NAME,\n  props: {\n    ...useComponentPresetProp,\n    vertical: { type: Boolean },\n    centered: { type: Boolean },\n    alignTop: { type: Boolean },\n  },\n  setup (props, { slots }) {\n    return () => h(\n      'div',\n      {\n        class: {\n          [COMPONENT_NAME]: true,\n          [`${COMPONENT_NAME}--vertical`]: props.vertical,\n          [`${COMPONENT_NAME}--align-top`]: props.alignTop,\n        },\n      },\n      processSlots({ props, slots }),\n    )\n  },\n}\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-timeline {\n  display: var(--va-timeline-display);\n  flex-wrap: var(--va-timeline-flex-wrap);\n  font-family: var(--va-font-family);\n\n  &--vertical {\n    flex-direction: var(--va-timeline-vertical-flex-direction);\n    padding-left: var(--va-timeline-vertical-padding-left);\n    padding-right: var(--va-timeline-vertical-padding-right);\n  }\n\n  &--align-top {\n    .va-timeline-item__before,\n    .va-timeline-item__after {\n      flex: 0;\n    }\n  }\n\n  .va-timeline-item {\n    flex: 1;\n  }\n\n  .va-timeline-item--vertical {\n    .va-timeline-separator--vertical .va-timeline-separator__line {\n      &:first-child {\n        flex: 0 0 1rem;\n      }\n    }\n\n    &.va-timeline-item--is-first {\n      .va-timeline-separator--vertical .va-timeline-separator__line {\n        &:first-child {\n          flex-basis: 2rem;\n        }\n      }\n\n      .va-timeline-item__after,\n      .va-timeline-item__before {\n        padding-top: 2rem;\n      }\n    }\n\n    &.va-timeline-item--vertical.va-timeline-item--is-last {\n      .va-timeline-item__after,\n      .va-timeline-item__before {\n        padding-bottom: 2rem;\n      }\n    }\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}