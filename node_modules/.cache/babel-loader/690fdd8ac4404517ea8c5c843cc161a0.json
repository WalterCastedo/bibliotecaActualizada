{"ast":null,"code":"import { watch } from \"vue\";\nimport { w as warn } from \"../../../utils/console.js\";\n\nfunction useCounterPropsValidation(props) {\n  const validateCounterProps = () => {\n    const val = Number(props.modelValue);\n\n    if (Number.isNaN(val)) {\n      return;\n    }\n\n    if (props.min && props.max && props.min > props.max) {\n      warn(`The maximum value (${props.max}) can not be less than the minimum value (${props.min}).`);\n    }\n\n    if (props.min && val < props.min) {\n      warn(`The value of the counter (${val}) can not be less than the minimum value (${props.min}).`);\n    }\n\n    if (props.max && val > props.max) {\n      warn(`The value of the counter (${val}) can not be greater than the maximum value (${props.max}).`);\n    }\n\n    if (props.min && props.max && props.step > props.max - props.min) {\n      warn(`The value of the step (${props.step}) can not be greater than the difference (${props.max - props.min}) between maximum value (${props.max}) and minimum value (${props.min}).`);\n    }\n  };\n\n  watch([() => props.step, () => props.min, () => props.max], validateCounterProps, {\n    immediate: true\n  });\n}\n\nexport { useCounterPropsValidation as u };","map":{"version":3,"mappings":";;;AAWA,mCAAmDA,KAAnD,EAA0F;EACxF,MAAMC,uBAAuB,MAAM;IAC3B,YAAMC,OAAOF,MAAMG,UAAb,CAAN;;IAEF,WAAOC,KAAP,CAAaC,GAAb,GAAmB;MAErB;IACF;;IAEA,IAAIL,MAAMM,GAAN,IAAaN,MAAMO,GAAnB,IAA0BP,MAAMM,GAAN,GAAYN,MAAMO,GAAhD,EAAqD;MACnDC,KAAK,sBAAsBR,MAAMO,gDAAgDP,MAAMM,OAAvF;IACF;;IAEA,IAAIN,MAAMM,GAAN,IAAaD,MAAML,MAAMM,GAA7B,EAAkC;MAC3BE,kCAA6BH,gDAAgDL,MAAMM,OAAnF;IACP;;IAEA,IAAIN,MAAMO,GAAN,IAAaF,MAAML,MAAMO,GAA7B,EAAkC;MAC3BC,kCAA6BH,mDAAmDL,MAAMO,OAAtF;IACP;;IAEI,UAAMD,GAAN,IAAaN,MAAMO,GAAnB,IAA0BP,MAAMS,IAAN,GAAcT,MAAMO,GAAN,GAAYP,MAAMM,GAA1D,EAAgE;MAC7DE,+BAA0BR,MAAMS,iDAAiDT,MAAMO,GAAN,GAAYP,MAAMM,+BAA+BN,MAAMO,2BAA2BP,MAAMM,OAAzK;IACP;EAAA,CAtBF;;EA0BEI,OACE,MAAMV,MAAMS,IADd,EAEE,MAAMT,MAAMM,GAFd,EAGE,MAAMN,MAAMO,GAHd,GAKAN,oBALA,EAMA;IAAEU,WAAW;EAAb,CANA;AAQJ","names":["props","validateCounterProps","Number","modelValue","isNaN","val","min","max","warn","step","watch","immediate"],"sources":["../../../../../../src/components/va-counter/hooks/useCounterPropsValidation.ts"],"sourcesContent":["import { watch } from 'vue'\n\nimport { warn } from '../../../utils/console'\n\ninterface useCounterPropsValidationProps {\n  modelValue: string | number,\n  min: number | undefined,\n  max: number | undefined,\n  step: number,\n}\n\nexport default function useCounterPropsValidation (props: useCounterPropsValidationProps) {\n  const validateCounterProps = () => {\n    const val = Number(props.modelValue)\n\n    if (Number.isNaN(val)) {\n      warn('The value is not a number or cannot be reduced to a number.')\n      return\n    }\n\n    if (props.min && props.max && props.min > props.max) {\n      warn(`The maximum value (${props.max}) can not be less than the minimum value (${props.min}).`)\n    }\n\n    if (props.min && val < props.min) {\n      warn(`The value of the counter (${val}) can not be less than the minimum value (${props.min}).`)\n    }\n\n    if (props.max && val > props.max) {\n      warn(`The value of the counter (${val}) can not be greater than the maximum value (${props.max}).`)\n    }\n\n    if (props.min && props.max && props.step > (props.max - props.min)) {\n      warn(`The value of the step (${props.step}) can not be greater than the difference (${props.max - props.min}) between maximum value (${props.max}) and minimum value (${props.min}).`)\n    }\n  }\n\n  watch(\n    [\n      () => props.step,\n      () => props.min,\n      () => props.max,\n    ],\n    validateCounterProps,\n    { immediate: true },\n  )\n}\n"]},"metadata":{},"sourceType":"module"}