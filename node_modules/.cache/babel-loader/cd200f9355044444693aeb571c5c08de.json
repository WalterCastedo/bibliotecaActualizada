{"ast":null,"code":"import { defineComponent, computed, useCssVars, openBlock, createElementBlock, mergeProps, withKeys, toHandlers, createElementVNode, normalizeStyle } from \"vue\";\nimport { u as useColors } from \"../../composables/useColors.js\";\nimport { u as useComponentPresetProp } from \"../../composables/useComponentPreset.js\";\nimport { u as useKeyboardOnlyFocus } from \"../../composables/useKeyboardOnlyFocus.js\";\nimport { u as useStatefulEmits, a as useStatefulProps, b as useStateful } from \"../../composables/useStateful.js\";\nimport { _ as _export_sfc } from \"../../../plugin-vue_export-helper.js\";\n\nvar VaColorIndicator_vue_vue_type_style_index_0_lang = /* @__PURE__ */(() => \".va-color-indicator{display:inline-flex;justify-content:center;align-items:center;cursor:pointer;border-radius:var(--83ba3c2e);text-align:center;background-color:var(--va-background-element);border:.125rem solid var(--va-background-border);box-sizing:content-box}.va-color-indicator__core{border-radius:var(--83ba3c2e);height:1rem;width:1rem}.va-color-indicator--selected{background-color:var(--va-primary);border-color:var(--va-primary)}.va-color-indicator--on-keyboard-focus{outline:2px solid var(--va-focus)!important;border-radius:var(--83ba3c2e)}\\n\")();\n\nconst __default__ = defineComponent({\n  name: \"VaColorIndicator\",\n  emits: useStatefulEmits,\n  props: { ...useStatefulProps,\n    ...useComponentPresetProp,\n    modelValue: {\n      type: Boolean,\n      default: null\n    },\n    color: {\n      type: String,\n      default: \"\"\n    },\n    square: {\n      type: Boolean,\n      default: false\n    },\n    size: {\n      type: String,\n      default: \"1rem\"\n    }\n  },\n\n  setup(props, {\n    emit\n  }) {\n    const {\n      valueComputed\n    } = useStateful(props, emit);\n    const {\n      getColor\n    } = useColors();\n    const {\n      hasKeyboardFocus,\n      keyboardFocusListeners\n    } = useKeyboardOnlyFocus();\n    const colorComputed = computed(() => getColor(props.color));\n    const borderRadiusComputed = computed(() => props.square ? \"0px\" : \"50%\");\n    const computedStyle = computed(() => ({\n      backgroundColor: colorComputed.value,\n      height: props.size,\n      width: props.size\n    }));\n    const computedClass = computed(() => ({\n      \"va-color-indicator--selected\": valueComputed.value,\n      \"va-color-indicator--on-keyboard-focus\": hasKeyboardFocus.value\n    }));\n\n    const toggleModelValue = () => {\n      valueComputed.value = !valueComputed.value;\n    };\n\n    return {\n      valueComputed,\n      computedStyle,\n      computedClass,\n      borderRadiusComputed,\n      keyboardFocusListeners,\n      toggleModelValue\n    };\n  }\n\n});\n\nconst __injectCSSVars__ = () => {\n  useCssVars(_ctx => ({\n    \"83ba3c2e\": _ctx.borderRadiusComputed\n  }));\n};\n\nconst __setup__ = __default__.setup;\n__default__.setup = __setup__ ? (props, ctx) => {\n  __injectCSSVars__();\n\n  return __setup__(props, ctx);\n} : __injectCSSVars__;\nconst _sfc_main = __default__;\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    class: [\"va-color-indicator\", _ctx.computedClass],\n    style: _ctx.computedStyle,\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.toggleModelValue && _ctx.toggleModelValue(...args)),\n    onKeydown: [_cache[1] || (_cache[1] = withKeys((...args) => _ctx.toggleModelValue && _ctx.toggleModelValue(...args), [\"enter\"])), _cache[2] || (_cache[2] = withKeys((...args) => _ctx.toggleModelValue && _ctx.toggleModelValue(...args), [\"space\"]))]\n  }, toHandlers(_ctx.keyboardFocusListeners)), [createElementVNode(\"div\", {\n    class: \"va-color-indicator__core\",\n    style: normalizeStyle(_ctx.computedStyle)\n  }, null, 4)], 16);\n}\n\nvar _VaColorIndicatort = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { _VaColorIndicatort as _ };\nimport './VaColorIndicator.css';","map":{"version":3,"mappings":";;;;;;;;;AA6BA,MAAKA,cAAeC,gBAAW;EAC7BC,MAAM,kBADuB;EAE7BC,OAAOC,gBAFsB;EAG7BC,OAAO,EACL,GAAGC,gBADE;IAEL,GAAGC,sBAFE;IAGLC,YAAY;MAAEC,MAAMC,OAAR;MAAiBC,SAAS;IAA1B,CAHP;IAILC,OAAO;MAAEH,MAAMI,MAAR;MAAgBF,SAAS;IAAzB,CAJF;IAKLG,QAAQ;MAAEL,MAAMC,OAAR;MAAiBC,SAAS;IAA1B,CALH;IAMLI,MAAM;MAAEN,MAAMI,MAAR;MAAgBF,SAAS;IAAzB;EAND,CAHsB;;EAW7BK,MAAOX,KAAP,EAAc;IAAEY;EAAF,CAAd,EAAwB;IACtB,MAAM;MAAEC;IAAF,IAAoBC,YAAYd,KAAZ,EAAmBY,IAAnB,CAA1B;IACM;MAAEG;IAAF,IAAeC,WAAf;IACA;MAAEC,gBAAF;MAAoBC;IAApB,IAA+CC,sBAA/C;IAEN,MAAMC,gBAAgBC,SAAS,MAAMN,SAASf,MAAMO,KAAf,CAAf,CAAtB;IACA,MAAMe,uBAAuBD,SAAS,MAAMrB,MAAMS,MAAN,GAAe,KAAf,GAAuB,KAAtC,CAA7B;IAEM,sBAAgBY,SAAS,OAAO;MACpCE,iBAAiBH,cAAcI,KADK;MAEpCC,QAAQzB,MAAMU,IAFsB;MAGpCgB,OAAO1B,MAAMU;IAHuB,CAAP,CAAT,CAAhB;IAMA,sBAAgBW,SAAS,OAAO;MACpC,gCAAgCR,cAAcW,KADV;MAEpC,yCAAyCP,iBAAiBO;IAFtB,CAAP,CAAT,CAAhB;;IAKN,MAAMG,mBAAmB,MAAM;MAAgBd,sBAAQ,CAACA,cAAcW,KAAvB;IAAuB,CAAtE;;IAEO;MACLX,aADK;MAELe,aAFK;MAGLC,aAHK;MAILP,oBAJK;MAKLJ,sBALK;MAMLS;IANK;EAQT;;AAxC6B,CAAX,CAApB;;;;;;;;;;;;;;;;;EA5BE,uCAaM,KAbNG,aAaM;IAZJC,OAAK,CAAC,oBAAD,EACGC,KAAaH,aADhB,CAYD;IAVHI,OAAOD,kBAUJ;IATHE,SAAKC,OAAE,CAAF,MAAEA,gFAAF,CASF;IARHC,WAAO,iDAAQJ,KAAgBL,gBAAhB,IAAgBK,8BAAxBK,EAAwB,SAAxBA,IAAwBF,gDAChBH,KAAgBL,gBAAhB,IAAgBK,8BADAK,EACA,SADAA,EAAxB;EAQJ,CAbNC,EAOEC,WAAMP,KAAuBd,sBAA7BqB,CAPFD,GAO8B,CAE5BE,mBAGE,KAHFA,EAGE;IAFAT,OAAM,0BAEN;IADCE,OAAKQ,eAAET,KAAaJ,aAAfa;EACN,CAHFD,EAEuB,IAFvBA,EAEuB,CAFvBA,CAF4B,CAP9BV,EAWyB,EAXzBA","names":["__default__","defineComponent","name","emits","useStatefulEmits","props","useStatefulProps","useComponentPresetProp","modelValue","type","Boolean","default","color","String","square","size","setup","emit","valueComputed","useStateful","getColor","useColors","hasKeyboardFocus","keyboardFocusListeners","useKeyboardOnlyFocus","colorComputed","computed","borderRadiusComputed","backgroundColor","value","height","width","toggleModelValue","computedStyle","computedClass","_createElementBlock","class","_ctx","style","onClick","_cache","onKeydown","_withKeys","_mergeProps","_toHandlers","_createElementVNode","_normalizeStyle"],"sources":["../../../../../src/components/va-color-indicator/VaColorIndicator.vue"],"sourcesContent":["<template>\n  <div\n    class=\"va-color-indicator\"\n    :class=\"computedClass\"\n    :style=\"computedStyle\"\n    @click=\"toggleModelValue\"\n    @keydown.enter=\"toggleModelValue\"\n    @keydown.space=\"toggleModelValue\"\n    v-on=\"keyboardFocusListeners\"\n  >\n    <div\n      class=\"va-color-indicator__core\"\n      :style=\"computedStyle\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue'\n\nimport {\n  useColors,\n  useStateful,\n  useStatefulProps,\n  useStatefulEmits,\n  useKeyboardOnlyFocus,\n  useComponentPresetProp,\n} from '../../composables'\n\nexport default defineComponent({\n  name: 'VaColorIndicator',\n  emits: useStatefulEmits,\n  props: {\n    ...useStatefulProps,\n    ...useComponentPresetProp,\n    modelValue: { type: Boolean, default: null },\n    color: { type: String, default: '' },\n    square: { type: Boolean, default: false },\n    size: { type: String, default: '1rem' },\n  },\n  setup (props, { emit }) {\n    const { valueComputed } = useStateful(props, emit)\n    const { getColor } = useColors()\n    const { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\n\n    const colorComputed = computed(() => getColor(props.color))\n    const borderRadiusComputed = computed(() => props.square ? '0px' : '50%')\n\n    const computedStyle = computed(() => ({\n      backgroundColor: colorComputed.value,\n      height: props.size,\n      width: props.size,\n    }))\n\n    const computedClass = computed(() => ({\n      'va-color-indicator--selected': valueComputed.value,\n      'va-color-indicator--on-keyboard-focus': hasKeyboardFocus.value,\n    }))\n\n    const toggleModelValue = () => { valueComputed.value = !valueComputed.value }\n\n    return {\n      valueComputed,\n      computedStyle,\n      computedClass,\n      borderRadiusComputed,\n      keyboardFocusListeners,\n      toggleModelValue,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n\n.va-color-indicator {\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-radius: v-bind(borderRadiusComputed);\n  text-align: center;\n  background-color: var(--va-background-element);\n  border: 0.125rem solid var(--va-background-border);\n  box-sizing: content-box;\n\n  &__core {\n    border-radius: v-bind(borderRadiusComputed);\n    height: 1rem;\n    width: 1rem;\n  }\n\n  &--selected {\n    background-color: var(--va-primary);\n    border-color: var(--va-primary);\n  }\n\n  &--on-keyboard-focus {\n    @include focus-outline(v-bind(borderRadiusComputed));\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}