{"ast":null,"code":"import { defineComponent, ref, computed, resolveComponent, openBlock, createElementBlock, normalizeClass, normalizeStyle, Fragment, renderList, createBlock, withKeys, withModifiers } from \"vue\";\nimport { u as useTimePicker } from \"./hooks/useTimePicker.js\";\nimport { V as VaTimePickerColumn } from \"./components/VaTimePickerColumn/index.js\";\nimport { u as useArrayRefs } from \"../../composables/useArrayRefs.js\";\nimport { u as useComponentPresetProp } from \"../../composables/useComponentPreset.js\";\nimport { u as useCSSVariables } from \"../../composables/useCSSVariables.js\";\nimport { u as useFormProps, a as useForm } from \"../../composables/useForm.js\";\nimport { a as useStatefulProps, u as useStatefulEmits, b as useStateful } from \"../../composables/useStateful.js\";\nimport { _ as _export_sfc } from \"../../../plugin-vue_export-helper.js\";\n\nvar VaTimePicker_vue_vue_type_style_index_0_lang = /* @__PURE__ */(() => '.va-time-picker{--va-time-picker-display: inline-flex;--va-time-picker-disabled-opacity: .4}.va-time-picker{display:var(--va-time-picker-display);justify-content:center;overflow:hidden;height:var(--va-time-picker-height);font-family:var(--va-font-family)}.va-time-picker--readonly{position:relative}.va-time-picker--readonly:after{content:\"\";position:absolute;height:100%;width:100%;z-index:1}.va-time-picker--disabled{position:relative;opacity:var(--va-time-picker-disabled-opacity)}.va-time-picker--disabled:after{content:\"\";position:absolute;height:100%;width:100%;z-index:1}.va-time-picker--framed{position:relative}.va-time-picker--framed:before{content:\"\";height:var(--va-time-picker-cell-height);width:100%;position:absolute;top:50%;left:0;transform:translateY(-50%);border-top:1px solid var(--va-divider);border-bottom:1px solid var(--va-divider);z-index:0}\\n')();\n\nconst _sfc_main = defineComponent({\n  name: \"VaTimePicker\",\n  components: {\n    VaTimePickerColumn\n  },\n  props: { ...useStatefulProps,\n    ...useFormProps,\n    ...useComponentPresetProp,\n    modelValue: {\n      type: Date,\n      required: false\n    },\n    ampm: {\n      type: Boolean,\n      default: false\n    },\n    hidePeriodSwitch: {\n      type: Boolean,\n      default: false\n    },\n    periodUpdatesModelValue: {\n      type: Boolean,\n      default: true\n    },\n    view: {\n      type: String,\n      default: \"minutes\"\n    },\n    hoursFilter: {\n      type: Function\n    },\n    minutesFilter: {\n      type: Function\n    },\n    secondsFilter: {\n      type: Function\n    },\n    framed: {\n      type: Boolean,\n      default: false\n    },\n    cellHeight: {\n      type: Number,\n      default: 30\n    },\n    visibleCellsCount: {\n      type: Number,\n      default: 7\n    }\n  },\n  emits: useStatefulEmits,\n\n  setup(props, {\n    emit\n  }) {\n    const {\n      valueComputed\n    } = useStateful(props, emit);\n    const {\n      columns,\n      isPM\n    } = useTimePicker(props, valueComputed);\n    const {\n      setItemRef,\n      itemRefs: pickers\n    } = useArrayRefs();\n    const activeColumnIndex = ref();\n\n    const focus = (idx = 0) => {\n      var _a;\n\n      (_a = pickers.value[idx]) == null ? void 0 : _a.focus();\n    };\n\n    const blur = idx => {\n      var _a;\n\n      idx ? (_a = pickers.value[idx]) == null ? void 0 : _a.blur() : pickers.value.forEach(el => el == null ? void 0 : el.blur());\n    };\n\n    const {\n      computedClasses: computedFormClasses\n    } = useForm(\"va-time-picker\", props);\n\n    const focusNext = () => {\n      const nextIndex = ((activeColumnIndex == null ? void 0 : activeColumnIndex.value) || 0) + 1;\n      activeColumnIndex.value = nextIndex % columns.value.length;\n      focus(activeColumnIndex.value);\n    };\n\n    const focusPrev = () => {\n      const nextIndex = ((activeColumnIndex == null ? void 0 : activeColumnIndex.value) || 0) - 1 + columns.value.length;\n      activeColumnIndex.value = nextIndex % columns.value.length;\n      focus(activeColumnIndex.value);\n    };\n\n    const computedClasses = computed(() => ({ ...computedFormClasses,\n      \"va-time-picker--framed\": props.framed\n    }));\n    const computedStyles = useCSSVariables(\"va-time-picker\", () => {\n      const gapHeight = (props.visibleCellsCount - 1) / 2 * props.cellHeight;\n      return {\n        height: `${props.cellHeight * props.visibleCellsCount}px`,\n        \"cell-height\": `${props.cellHeight}px`,\n        \"column-gap-height\": `${gapHeight}px`\n      };\n    });\n    return {\n      columns,\n      computedStyles,\n      computedClasses,\n      isPM,\n      pickers,\n      setItemRef,\n      focusNext,\n      focusPrev,\n      activeColumnIndex,\n      focus,\n      blur\n    };\n  }\n\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_VaTimePickerColumn = resolveComponent(\"VaTimePickerColumn\");\n\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass([\"va-time-picker\", _ctx.computedClasses]),\n    style: normalizeStyle(_ctx.computedStyles)\n  }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.columns, (column, idx) => {\n    return openBlock(), createBlock(_component_VaTimePickerColumn, {\n      key: idx,\n      ref_for: true,\n      ref: _ctx.setItemRef,\n      items: column.items,\n      tabindex: _ctx.disabled ? -1 : 0,\n      \"cell-height\": _ctx.$props.cellHeight,\n      activeItemIndex: column.activeItem.value,\n      \"onUpdate:activeItemIndex\": $event => column.activeItem.value = $event,\n      onKeydown: [_cache[0] || (_cache[0] = withKeys(withModifiers($event => _ctx.focusNext(), [\"stop\", \"prevent\"]), [\"right\"])), _cache[1] || (_cache[1] = withKeys(withModifiers($event => _ctx.focusNext(), [\"exact\", \"stop\", \"prevent\"]), [\"tab\"])), _cache[2] || (_cache[2] = withKeys(withModifiers($event => _ctx.focusPrev(), [\"stop\", \"prevent\"]), [\"left\"])), _cache[3] || (_cache[3] = withKeys(withModifiers($event => _ctx.focusPrev(), [\"shift\", \"stop\", \"prevent\"]), [\"tab\"]))],\n      onFocus: $event => _ctx.activeColumnIndex = idx\n    }, null, 8, [\"items\", \"tabindex\", \"cell-height\", \"activeItemIndex\", \"onUpdate:activeItemIndex\", \"onFocus\"]);\n  }), 128))], 6);\n}\n\nvar _VaTimePicker = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { _VaTimePicker as _ };\nimport './VaTimePicker.css';","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","name","components","VaTimePickerColumn","props","useStatefulProps","useFormProps","useComponentPresetProp","modelValue","type","Date","required","ampm","Boolean","default","hidePeriodSwitch","periodUpdatesModelValue","view","String","hoursFilter","Function","minutesFilter","secondsFilter","framed","cellHeight","Number","visibleCellsCount","emits","useStatefulEmits","setup","emit","valueComputed","useStateful","columns","isPM","useTimePicker","setItemRef","itemRefs","pickers","useArrayRefs","activeColumnIndex","ref","idx","focus","value","blur","forEach","el","computedClasses","computedFormClasses","useForm","focusNext","nextIndex","length","focusPrev","computed","useCSSVariables","gapHeight","height","computedStyles","_createElementBlock","class","_normalizeClass","_ctx","style","_normalizeStyle","_openBlock","_Fragment","_renderList","column","_createBlock","_component_VaTimePickerColumn","key","ref_for","items","tabindex","disabled","$props","activeItemIndex","activeItem","$event","onKeydown","_withModifiers","_withKeys","_cache","onFocus"],"sources":["../../../../../src/components/va-time-picker/VaTimePicker.vue"],"sourcesContent":["<template>\n  <div\n    class=\"va-time-picker\"\n    :class=\"computedClasses\"\n    :style=\"computedStyles\"\n  >\n    <VaTimePickerColumn\n      v-for=\"(column, idx) in columns\" :key=\"idx\"\n      :ref=\"setItemRef\"\n      :items=\"column.items\"\n      :tabindex=\"disabled ? -1 : 0\"\n      :cell-height=\"$props.cellHeight\"\n      v-model:activeItemIndex=\"column.activeItem.value\"\n      @keydown.right.stop.prevent=\"focusNext()\"\n      @keydown.tab.exact.stop.prevent=\"focusNext()\"\n      @keydown.left.stop.prevent=\"focusPrev()\"\n      @keydown.shift.tab.stop.prevent=\"focusPrev()\"\n      @focus=\"activeColumnIndex = idx\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, computed, PropType } from 'vue'\nimport { useTimePicker } from './hooks/useTimePicker'\n\nimport { VaTimePickerColumn } from './components/VaTimePickerColumn'\n\nimport {\n  useComponentPresetProp,\n  useStatefulProps,\n  useStatefulEmits,\n  useStateful,\n  useFormProps,\n  useForm,\n  useArrayRefs,\n  useCSSVariables,\n} from '../../composables'\n\nexport default defineComponent({\n  name: 'VaTimePicker',\n\n  components: { VaTimePickerColumn },\n\n  props: {\n    ...useStatefulProps,\n    ...useFormProps,\n    ...useComponentPresetProp,\n    modelValue: { type: Date, required: false },\n    ampm: { type: Boolean, default: false },\n    hidePeriodSwitch: { type: Boolean, default: false },\n    periodUpdatesModelValue: { type: Boolean, default: true }, // Update model value when switching period automatically\n    view: { type: String as PropType<'hours' | 'minutes' | 'seconds'>, default: 'minutes' },\n    hoursFilter: { type: Function as PropType<(h: number) => boolean> },\n    minutesFilter: { type: Function as PropType<(h: number) => boolean> },\n    secondsFilter: { type: Function as PropType<(h: number) => boolean> },\n    framed: { type: Boolean, default: false },\n    cellHeight: { type: Number, default: 30 },\n    visibleCellsCount: { type: Number, default: 7 },\n  },\n\n  emits: useStatefulEmits,\n\n  setup (props, { emit }) {\n    const { valueComputed } = useStateful(props, emit)\n    const { columns, isPM } = useTimePicker(props, valueComputed)\n\n    const { setItemRef, itemRefs: pickers } = useArrayRefs()\n\n    const activeColumnIndex = ref<number>()\n\n    const focus = (idx = 0): void => {\n      pickers.value[idx]?.focus()\n    }\n\n    const blur = (idx?: number): void => {\n      idx ? pickers.value[idx]?.blur() : pickers.value.forEach((el) => el?.blur())\n    }\n\n    const { computedClasses: computedFormClasses } = useForm('va-time-picker', props)\n\n    const focusNext = () => {\n      const nextIndex = (activeColumnIndex?.value || 0) + 1\n\n      activeColumnIndex.value = nextIndex % columns.value.length\n      focus(activeColumnIndex.value)\n    }\n\n    const focusPrev = () => {\n      const nextIndex = (activeColumnIndex?.value || 0) - 1 + columns.value.length\n\n      activeColumnIndex.value = nextIndex % columns.value.length\n      focus(activeColumnIndex.value)\n    }\n\n    const computedClasses = computed(() => ({\n      ...computedFormClasses,\n      'va-time-picker--framed': props.framed,\n    }))\n\n    const computedStyles = useCSSVariables('va-time-picker', () => {\n      const gapHeight = (props.visibleCellsCount - 1) / 2 * props.cellHeight\n\n      return {\n        height: `${props.cellHeight * props.visibleCellsCount}px`,\n        'cell-height': `${props.cellHeight}px`,\n        'column-gap-height': `${gapHeight}px`,\n      }\n    })\n\n    return {\n      columns,\n      computedStyles,\n      computedClasses,\n      isPM,\n      pickers,\n      setItemRef,\n\n      focusNext,\n      focusPrev,\n      activeColumnIndex,\n\n      focus,\n      blur,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import './_variables.scss';\n\n@mixin after-overlay {\n  position: relative;\n\n  &::after {\n    content: '';\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    z-index: 1;\n  }\n}\n\n.va-time-picker {\n  display: var(--va-time-picker-display);\n  justify-content: center;\n  overflow: hidden;\n  height: var(--va-time-picker-height);\n  font-family: var(--va-font-family);\n\n  &--readonly {\n    @include after-overlay();\n  }\n\n  &--disabled {\n    @include after-overlay();\n\n    opacity: var(--va-time-picker-disabled-opacity);\n  }\n\n  &--framed {\n    position: relative;\n\n    &::before {\n      content: \"\";\n      height: var(--va-time-picker-cell-height);\n      width: 100%;\n      position: absolute;\n      top: 50%;\n      left: 0;\n      transform: translateY(-50%);\n      border-top: 1px solid var(--va-divider);\n      border-bottom: 1px solid var(--va-divider);\n      z-index: 0;\n    }\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}