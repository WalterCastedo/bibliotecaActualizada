{"ast":null,"code":"import { computed } from \"vue\";\nimport { k as kebabCase_1 } from \"../../vendor.js\";\n\nconst useCSSVariables = (prefix, cb) => {\n  return computed(() => Object.entries(cb()).map(([key, value]) => ({\n    [`--${prefix}-${kebabCase_1(key)}`]: value\n  })));\n};\n\nexport { useCSSVariables as u };","map":{"version":3,"mappings":";;;AAGa,wBAAkB,CAACA,MAAD,EAAiBC,EAAjB,KAAsD;EAC5E,gBAAS,MAAMC,OAAOC,OAAP,CAAeF,IAAf,EAAqBG,GAArB,CAAyB,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,MAAmB;IAAE,CAAC,KAAKN,UAAUO,YAAMF,GAANE,CAAS,EAAzB,GAA+BD;EAAjC,CAAnB,CAAzB,CAAf;AACT,CAFa","names":["prefix","cb","Object","entries","map","key","value","kebab"],"sources":["../../../../src/composables/useCSSVariables.ts"],"sourcesContent":["import { computed } from 'vue'\nimport kebab from 'lodash/kebabCase.js'\n\nexport const useCSSVariables = (prefix: string, cb: () => Record<string, string>) => {\n  return computed(() => Object.entries(cb()).map(([key, value]) => ({ [`--${prefix}-${kebab(key)}`]: value })))\n}\n"]},"metadata":{},"sourceType":"module"}