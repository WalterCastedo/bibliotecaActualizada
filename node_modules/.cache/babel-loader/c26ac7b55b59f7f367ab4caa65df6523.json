{"ast":null,"code":"import axios from \"axios\";\nexport const RUTA_SERVIDOR_ALUMNOS = process.env.VUE_APP_RUTA_API_ALUMNOS;\nexport const RUTA_SERVIDOR_LIBROS = process.env.VUE_APP_RUTA_API_LIBROS;\nexport default {\n  data() {\n    return {\n      nombreEditorial: \"\",\n      pdf: '',\n      carreras: [],\n      autor: [],\n      libro: {\n        titulo: \"\",\n        copias: \"\",\n        copiasDisponibles: \"\",\n        categoria: \"\",\n        edicion: \"\",\n        codigo: \"\",\n        observacion: \"\",\n        idAutor: 1,\n        idEmpleado: \"\",\n        idSubsede: 0,\n        urlPortada: \"\",\n        idCarrera: 1,\n        idEditorial: \"\",\n        activo: 1\n      },\n      nautor: {\n        nombre: \"\",\n        id: 0\n      },\n      editoriales: [{\n        nombreEditorial: \"\"\n      }],\n      preNombre: \"\"\n    };\n  },\n\n  props: {\n    variable: {\n      type: Number,\n      default: 0\n    }\n  },\n\n  beforeMount() {\n    this.consultarEditorial();\n    this.consultarAutor();\n    this.consultarCarreras();\n    this.consultarLibro();\n  },\n\n  methods: {\n    consultarLibro() {\n      if (this.variable > 0) {\n        fetch(RUTA_SERVIDOR_LIBROS + \"/libros/\" + this.variable).then(respuesta => respuesta.json()).then(datosRespuesta => {\n          this.libro = [];\n          this.libro.id = datosRespuesta.id;\n          this.libro.titulo = datosRespuesta.titulo;\n          this.libro.copias = datosRespuesta.copias;\n          this.libro.copiasDisponibles = datosRespuesta.copiasDisponibles;\n          this.libro.categoria = datosRespuesta.categoria;\n          this.libro.edicion = datosRespuesta.edicion;\n          this.libro.codigo = datosRespuesta.codigo;\n          this.libro.observacion = datosRespuesta.observacion;\n          this.libro.idAutor = datosRespuesta.idAutor;\n          this.libro.idEmpleado = datosRespuesta.idEmpleado;\n          this.libro.idCarrera = datosRespuesta.idCarrera;\n          this.libro.urlPortada = datosRespuesta.urlPortada;\n          this.libro.idEditorial = datosRespuesta.idEditorial;\n          this.libro.activo = datosRespuesta.activo;\n          this.obterAutor();\n        }).catch(console.log);\n      } else {\n        this.consultarEditorial();\n        this.consultarAutor();\n        this.consultarCarreras();\n      }\n    },\n\n    agregarLibro() {\n      let formData = new FormData();\n      formData.append(\"titulo\", this.libro.titulo);\n      formData.append(\"copias\", this.libro.copias);\n      formData.append(\"copiasDisponibles\", this.libro.copiasDisponibles);\n      formData.append(\"categoria\", this.libro.categoria);\n      formData.append(\"edicion\", this.libro.edicion);\n      formData.append(\"codigo\", this.libro.codigo);\n      formData.append(\"observacion\", this.libro.observacion);\n      formData.append(\"idAutor\", this.libro.idAutor);\n      formData.append(\"idEmpleado\", localStorage.getItem('id'));\n      formData.append(\"idCarrera\", this.libro.idCarrera);\n      formData.append(\"urlPortada\", this.libro.urlPortada);\n      formData.append(\"idEditorial\", this.libro.idEditorial);\n      formData.append(\"activo\", this.libro.activo);\n      formData.append(\"documento\", this.pdf);\n      formData.append(\"idSubsede\", localStorage.getItem(\"idSubsede\"));\n      axios.post(RUTA_SERVIDOR_LIBROS + \"/libros/\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(function (response) {\n        console.log(response);\n        location.reload();\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n\n    actualizar() {\n      axios.put(RUTA_SERVIDOR_LIBROS + \"/libros/\" + this.libro.id, {\n        titulo: this.libro.titulo,\n        copias: this.libro.copias,\n        copiasDisponibles: this.libro.copiasDisponibles,\n        categoria: this.libro.categoria,\n        edicion: this.libro.edicion,\n        codigo: this.libro.codigo,\n        idAutor: parseInt(this.libro.idAutor),\n        idEmpleado: this.libro.idEmpleado,\n        idSubsede: localStorage.getItem(\"idSubsede\"),\n        idEditorial: parseInt(this.libro.idEditorial),\n        idCarrera: parseInt(this.libro.idCarrera),\n        urlPortada: this.libro.urlPortada,\n        observacion: this.libro.observacion,\n        activo: 1\n      }).then(function (response) {\n        console.log(Request);\n        console.log(response);\n        location.reload();\n      }).catch(function (error) {\n        console.log(error); // console.log(this.libro);\n      });\n    },\n\n    consultarAutor() {\n      fetch(RUTA_SERVIDOR_LIBROS + \"/autor/\").then(respuesta => respuesta.json()).then(datosRespuesta => {\n        if (typeof datosRespuesta[0].success === \"undefined\") {\n          datosRespuesta.sort((a, b) => {\n            if (a.nombre.toUpperCase() == b.nombre.toUpperCase()) {\n              return 0;\n            }\n\n            if (a.nombre.toUpperCase() > b.nombre.toUpperCase()) {\n              return 1;\n            }\n\n            if (a.nombre.toUpperCase() < b.nombre.toUpperCase()) {\n              return -1;\n            }\n          });\n          this.autor = datosRespuesta;\n          this.libro.idAutor = this.autor[0].id;\n          this.libro.idEditorial = this.editoriales[0].id;\n        }\n      }).catch(console.log);\n    },\n\n    consultarCarreras() {\n      fetch(RUTA_SERVIDOR_LIBROS + \"/carreras\").then(respuesta => respuesta.json()).then(datosRespuesta => {\n        this.carreras = [];\n\n        if (typeof datosRespuesta[0].success === \"undefined\") {\n          this.carreras = datosRespuesta;\n        }\n      }).catch(console.log);\n    },\n\n    consultarEditorial() {\n      fetch(RUTA_SERVIDOR_LIBROS + \"/editoriales/\").then(respuesta => respuesta.json()).then(datosRespuesta => {\n        if (typeof datosRespuesta[0].success === \"undefined\") {\n          datosRespuesta.sort((a, b) => {\n            if (a.nombreEditorial.toUpperCase() == b.nombreEditorial.toUpperCase()) {\n              return 0;\n            }\n\n            if (a.nombreEditorial.toUpperCase() > b.nombreEditorial.toUpperCase()) {\n              return 1;\n            }\n\n            if (a.nombreEditorial.toUpperCase() < b.nombreEditorial.toUpperCase()) {\n              return -1;\n            }\n          });\n          this.editoriales = datosRespuesta;\n        }\n      }).catch(console.log);\n    },\n\n    reset() {\n      Object.assign(this.$data, this.$options.data());\n      this.consultarEditorial();\n      this.consultarAutor();\n      this.consultarCarreras();\n    },\n\n    volver() {\n      location.reload();\n    },\n\n    obterAutor() {\n      this.preNombre = this.autor.find(x => x.id == this.libro.idAutor).nombre;\n    },\n\n    Previa() {\n      let index = 0;\n\n      while (index != this.libro.idAutor) {\n        if (this.libro.idAutor == this.autor[index].id) {\n          this.preNombre = this.autor[index].nombre;\n          index = this.libro.idAutor;\n        } else {\n          index++;\n        }\n      }\n    },\n\n    buscarArchivo(event) {\n      this.pdf = event.target.files[0];\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAmOA;AACA;AACA;AAEA;EACAA;IACA;MACAC,mBADA;MAEAC,OAFA;MAGAC,YAHA;MAIAC,SAJA;MAKAC;QACAC,UADA;QAEAC,UAFA;QAGAC,qBAHA;QAIAC,aAJA;QAKAC,WALA;QAMAC,UANA;QAOAC,eAPA;QAQAC,UARA;QASAC,cATA;QAUAC,YAVA;QAWAC,cAXA;QAYAC,YAZA;QAaAC,eAbA;QAcAC;MAdA,CALA;MAsBAC;QACAC,UADA;QAEAC;MAFA,CAtBA;MA0BAC,cACA;QACAtB;MADA,CADA,CA1BA;MA+BAuB;IA/BA;EAiCA,CAnCA;;EAoCAC;IACAC;MACAC,YADA;MAEAC;IAFA;EADA,CApCA;;EA2CAC;IACA;IACA;IACA;IACA;EACA,CAhDA;;EAkDAC;IACAC;MACA;QACAC,yDACAC,IADA,CACAC,6BADA,EAEAD,IAFA,CAEAE;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;QACA,CAnBA,EAoBAC,KApBA,CAoBAC,WApBA;MAqBA,CAtBA,MAsBA;QACA;QACA;QACA;MACA;IACA,CA7BA;;IA+BAC;MACA;MACAC;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAC,MACAC,IADA,CACAC,iCADA,EACAH,QADA,EACA;QACAI;UACA;QADA;MADA,CADA,EAMAV,IANA,CAMA;QACAI;QACAO;MACA,CATA,EAUAR,KAVA,CAUA;QACAC;MACA,CAZA;IAcA,CA9DA;;IAgEAQ;MAEAL,MACAM,GADA,CACAJ,iDADA,EACA;QACApC,yBADA;QAEAC,yBAFA;QAGAC,+CAHA;QAIAC,+BAJA;QAKAC,2BALA;QAMAC,yBANA;QAOAE,qCAPA;QAQAC,iCARA;QASAC,4CATA;QAUAG,6CAVA;QAWAD,yCAXA;QAYAD,iCAZA;QAaAJ,mCAbA;QAcAO;MAdA,CADA,EAiBAc,IAjBA,CAiBA;QACAI;QACAA;QACAO;MACA,CArBA,EAsBAR,KAtBA,CAsBA;QACAC,mBADA,CAEA;MACA,CAzBA;IA0BA,CA5FA;;IA8FAU;MACAf,wCACAC,IADA,CACAC,6BADA,EAEAD,IAFA,CAEAE;QACA;UACAA;YACA;cACA;YACA;;YACA;cACA;YACA;;YACA;cACA;YACA;UACA,CAVA;UAWA;UACA;UACA;QACA;MACA,CAnBA,EAoBAC,KApBA,CAoBAC,WApBA;IAqBA,CApHA;;IAqHAW;MACAhB,0CACAC,IADA,CACAC,6BADA,EAEAD,IAFA,CAEAE;QACA;;QACA;UACA;QACA;MACA,CAPA,EAQAC,KARA,CAQAC,WARA;IASA,CA/HA;;IAgIAY;MACAjB,8CACAC,IADA,CACAC,6BADA,EAEAD,IAFA,CAEAE;QACA;UACAA;YACA,IACAe,mCACAC,+BAFA,EAGA;cACA;YACA;;YACA,IACAD,kCACAC,+BAFA,EAGA;cACA;YACA;;YACA,IACAD,kCACAC,+BAFA,EAGA;cACA;YACA;UACA,CAnBA;UAoBA;QACA;MACA,CA1BA,EA2BAf,KA3BA,CA2BAC,WA3BA;IA4BA,CA7JA;;IA+JAe;MACAC;MACA;MACA;MACA;IACA,CApKA;;IAqKAC;MACAV;IACA,CAvKA;;IAwKAW;MACA,iCACAC,+BADA,EAEAnC,MAFA;IAGA,CA5KA;;IA6KAoC;MACA;;MACA;QACA;UACA;UACAC;QACA,CAHA,MAGA;UACAA;QACA;MACA;IACA,CAvLA;;IAyLAC;MACA;IAEA;;EA5LA;AAlDA","names":["data","nombreEditorial","pdf","carreras","autor","libro","titulo","copias","copiasDisponibles","categoria","edicion","codigo","observacion","idAutor","idEmpleado","idSubsede","urlPortada","idCarrera","idEditorial","activo","nautor","nombre","id","editoriales","preNombre","props","variable","type","default","beforeMount","methods","consultarLibro","fetch","then","respuesta","datosRespuesta","catch","console","agregarLibro","formData","axios","post","RUTA_SERVIDOR_LIBROS","headers","location","actualizar","put","consultarAutor","consultarCarreras","consultarEditorial","a","b","reset","Object","volver","obterAutor","x","Previa","index","buscarArchivo"],"sourceRoot":"src/components","sources":["CrearLibro.vue"],"sourcesContent":["<template>\n  <div class=\"container row\" ref=\"accionEditar\">\n    \n    <form v-on:submit.prevent=\"agregarLibro\" class=\"col-sm-12\">\n      <div class=\"row align-items-center\">\n        <div class=\"form-group col-sm\">\n          <label for=\"titulo\">Titulo</label>\n          <input\n            required\n            type=\"text\"\n            name=\"titulo\"\n            v-model=\"libro.titulo\"\n            id=\"titulo\"\n            class=\"form-control\"\n            placeholder=\"Titulo del libro\"\n            aria-describedby=\"titulo\"\n          />\n        </div>\n\n        <div class=\"form-group col-sm\">\n          <label for=\"autor\">Autor</label>\n          <select\n            required\n            class=\"form-select\"\n            v-model=\"libro.idAutor\"\n            aria-label=\"Default select example\"\n            id=\"autor\"\n            @change=\"obterAutor()\"\n          >\n            <option v-for=\"nautor in autor\" :key=\"nautor.id\" :value=\"nautor.id\">\n              {{ nautor.nombre }}\n            </option>\n          </select>\n        </div>\n\n        <div class=\"form-group col-sm\">\n          <!-- <div class=\"form-group\">\n                      <label for=\"autor\">Autor</label> \n                      <input v-model=\"libro.idAutor\" type=\"text\" required\n                        class=\"form-control\" name=\"autor\" id=\"autor\" aria-describedby=\"helpId\" placeholder=\"selecciona el autor\"  list=\"my-list-id\">\n                      \n                      <datalist required  id=\"my-list-id\" >\n                    <option  required v-for=\"nautor in autor \" :key=\"nautor.id\" >{{nautor.nombre}}</option>\n                    </datalist>\n                    </div> -->\n          <label for=\"\">Carrera</label>\n          <select\n            v-model=\"libro.idCarrera\"\n            required\n            class=\"form-select\"\n            name=\"carrera\"\n            id=\"carrera\"\n          >\n            <option\n              v-for=\"carrera in carreras\"\n              :key=\"carrera.id\"\n              :value=\"carrera.id\"\n            >\n              {{ carrera.nombreCarrera }}\n            </option>\n          </select>\n        </div>\n      </div>\n\n      <div class=\"row align-items-center\">\n        <div class=\"form-group col-sm\">\n          <label for=\"editorial\">Editorial</label>\n          <select\n            required\n            class=\"form-select\"\n            v-model=\"libro.idEditorial\"\n            aria-label=\"Default select example\"\n          >\n            <option\n              v-for=\"editorial in editoriales\"\n              :key=\"editorial.id\"\n              :value=\"editorial.id\"\n            >\n              {{ editorial.nombreEditorial }}\n            </option>\n          </select>\n        </div>\n\n        <div class=\"form-group col-sm\">\n          <label for=\"edicion\">Edicion</label>\n          <input\n            required\n            type=\"number\"\n            name=\"edicion\"\n            v-model=\"libro.edicion\"\n            id=\"edicion\"\n            class=\"form-control\"\n            placeholder=\"edicion del libro\"\n            aria-describedby=\"edicion\"\n          />\n        </div>\n\n        <div class=\"form-group col-sm\">\n          <label for=\"categoria\">Categoria</label>\n          <input\n            required\n            type=\"text\"\n            name=\"categoria\"\n            v-model=\"libro.categoria\"\n            id=\"categoria\"\n            class=\"form-control\"\n            placeholder=\"categoria del libro\"\n            aria-describedby=\"categoria\"\n          />\n        </div>\n      </div>\n\n      <div class=\"row align-items-center\">\n        <div class=\"col-sm\">\n          <label for=\"codigo\">Código</label>\n          <input\n            required\n            type=\"text\"\n            name=\"codigo\"\n            v-model=\"libro.codigo\"\n            id=\"codigo\"\n            class=\"form-control\"\n            placeholder=\"codigo del libro\"\n            aria-describedby=\"codigo\"\n          />\n        </div>\n\n        <div class=\"col-sm\">\n          <label for=\"copias\">Cópias</label>\n          <input\n            required\n            type=\"number\"\n            name=\"copias\"\n            v-model=\"libro.copias\"\n            id=\"copias\"\n            class=\"form-control\"\n            placeholder=\"cantidad de copias\"\n            aria-describedby=\"copias\"\n          />\n        </div>\n\n        <div class=\"col-sm\">\n          <label for=\"copias\">Cópias disponibles</label>\n          <input\n            required\n            type=\"number\"\n            name=\"copias\"\n            v-model=\"libro.copiasDisponibles\"\n            id=\"copias\"\n            class=\"form-control\"\n            placeholder=\"cantidad de copias\"\n            aria-describedby=\"copias\"\n          />\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <div class=\"col-sm\">\n          <label for=\"copias\">Url portada</label>\n          <input\n            required\n            type=\"text\"\n            name=\"copias\"\n            v-model=\"libro.urlPortada\"\n            id=\"url\"\n            class=\"form-control\"\n            placeholder=\"Imagen portada\"\n            aria-describedby=\"url\"\n          />\n        </div>\n\n<div class=\"col-sm\">\n          <label for=\"pdf\">agraga un documento pdf</label>\n          \n          <input\n            \n            type=\"file\"\n            name=\"pdf\"\n            enctype=\"multipart/form-data\"\n            \n            @change=\"buscarArchivo\"\n            accept=\"application/pdf\"\n          />\n        </div>\n\n        <label for=\"observacion\">Observacion</label>\n        <textarea\n          required\n          class=\"form-control\"\n          id=\"observacion\"\n          v-model=\"libro.observacion\"\n          rows=\"4\"\n          placeholder=\"Observacion del libro\"\n          aria-describedby=\"observacion\"\n        ></textarea>\n      </div>\n      <br />\n\n      <div class=\"container row ml-2\" align=\"center\" raria-label=\"\">\n        <a \n          v-if=\"variable < 0\"\n          v-on:click.stop=\"agregarLibro()\"\n          class=\"btn btn-success col-5\"\n        >\n        <font-awesome-icon icon=\"fa-solid fa-plus\" /><font-awesome-icon icon=\"fa-solid fa-book\" /> \n        </a>\n        <a v-else v-on:click.stop=\"actualizar()\" class=\"btn btn-success col-5\">\n          <font-awesome-icon icon=\"fa-solid fa-pen\" /> <font-awesome-icon icon=\"fa-solid fa-book\" />\n        </a>\n        <span class=\"col-2\"></span>\n        <!-- <a\n          v-if=\"variable < 0\"\n          v-on:click.stop=\"reset()\"\n          class=\"btn btn-danger col-5\"\n          >Resetear Formulario</a\n        > -->\n        <a v-on:click.stop=\"volver()\" class=\"btn btn-danger col-5\"\n          >Cancelar edicion</a\n        >\n      </div>\n    </form>\n\n    \n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport const RUTA_SERVIDOR_ALUMNOS = process.env.VUE_APP_RUTA_API_ALUMNOS;\nexport const RUTA_SERVIDOR_LIBROS = process.env.VUE_APP_RUTA_API_LIBROS;\n\nexport default {\n  data() {\n    return {\n      nombreEditorial: \"\",\n      pdf:'',\n      carreras: [],\n      autor: [],\n      libro: {\n        titulo: \"\",\n        copias: \"\",\n        copiasDisponibles: \"\",\n        categoria: \"\",\n        edicion: \"\",\n        codigo: \"\",\n        observacion: \"\",\n        idAutor: 1,\n        idEmpleado: \"\",\n        idSubsede: 0,\n        urlPortada: \"\",\n        idCarrera: 1,\n        idEditorial: \"\",\n        activo: 1,\n      },\n\n      nautor: {\n        nombre: \"\",\n        id: 0,\n      },\n      editoriales: [\n        {\n          nombreEditorial: \"\",\n        },\n      ],\n      preNombre: \"\",\n    };\n  },\n  props: {\n    variable: {\n      type: Number,\n      default: 0,\n    },\n  },\n\n  beforeMount() {\n    this.consultarEditorial();\n    this.consultarAutor();\n    this.consultarCarreras();\n    this.consultarLibro();\n  },\n\n  methods: {\n    consultarLibro() {\n      if (this.variable > 0) {\n        fetch(RUTA_SERVIDOR_LIBROS+\"/libros/\" + this.variable)\n          .then((respuesta) => respuesta.json())\n          .then((datosRespuesta) => {\n            this.libro = [];\n            this.libro.id = datosRespuesta.id;\n            this.libro.titulo = datosRespuesta.titulo;\n            this.libro.copias = datosRespuesta.copias;\n            this.libro.copiasDisponibles = datosRespuesta.copiasDisponibles;\n            this.libro.categoria = datosRespuesta.categoria;\n            this.libro.edicion = datosRespuesta.edicion;\n            this.libro.codigo = datosRespuesta.codigo;\n            this.libro.observacion = datosRespuesta.observacion;\n            this.libro.idAutor = datosRespuesta.idAutor;\n            this.libro.idEmpleado = datosRespuesta.idEmpleado;\n            this.libro.idCarrera = datosRespuesta.idCarrera;\n            this.libro.urlPortada = datosRespuesta.urlPortada;\n            this.libro.idEditorial = datosRespuesta.idEditorial;\n            this.libro.activo = datosRespuesta.activo;\n            this.obterAutor();\n          })\n          .catch(console.log);\n      } else {\n        this.consultarEditorial();\n        this.consultarAutor();\n        this.consultarCarreras();\n      }\n    },\n\n    agregarLibro() {\n      let formData = new FormData();\n      formData.append(\"titulo\", this.libro.titulo);\n      formData.append(\"copias\", this.libro.copias);\n      formData.append(\"copiasDisponibles\", this.libro.copiasDisponibles);\n      formData.append(\"categoria\", this.libro.categoria);\n      formData.append(\"edicion\", this.libro.edicion);\n      formData.append(\"codigo\", this.libro.codigo);\n      formData.append(\"observacion\", this.libro.observacion);\n      formData.append(\"idAutor\", this.libro.idAutor);\n      formData.append(\"idEmpleado\", localStorage.getItem('id'));\n      formData.append(\"idCarrera\", this.libro.idCarrera);\n      formData.append(\"urlPortada\", this.libro.urlPortada);\n      formData.append(\"idEditorial\", this.libro.idEditorial);\n      formData.append(\"activo\", this.libro.activo);\n      formData.append(\"documento\", this.pdf);\n      formData.append(\"idSubsede\", localStorage.getItem(\"idSubsede\"));\n      axios\n        .post(RUTA_SERVIDOR_LIBROS+\"/libros/\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        })\n        .then(function (response) {\n          console.log(response);\n          location.reload();\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n      \n    },\n\n    actualizar() {\n      \n      axios\n        .put(RUTA_SERVIDOR_LIBROS+\"/libros/\" + this.libro.id, {\n          titulo: this.libro.titulo,\n          copias: this.libro.copias,\n          copiasDisponibles: this.libro.copiasDisponibles,\n          categoria: this.libro.categoria,\n          edicion: this.libro.edicion,\n          codigo: this.libro.codigo,\n          idAutor: parseInt(this.libro.idAutor),\n          idEmpleado: this.libro.idEmpleado,\n          idSubsede: localStorage.getItem(\"idSubsede\"),\n          idEditorial: parseInt(this.libro.idEditorial),\n          idCarrera: parseInt(this.libro.idCarrera),\n          urlPortada: this.libro.urlPortada,\n          observacion: this.libro.observacion,\n          activo: 1,\n        })\n        .then(function (response) {\n          console.log(Request);\n          console.log(response);\n          location.reload();\n        })\n        .catch(function (error) {\n          console.log(error);\n          // console.log(this.libro);\n        });\n    },\n\n    consultarAutor() {\n      fetch(RUTA_SERVIDOR_LIBROS+\"/autor/\")\n        .then((respuesta) => respuesta.json())\n        .then((datosRespuesta) => {\n          if (typeof datosRespuesta[0].success === \"undefined\") {\n            datosRespuesta.sort((a, b) => {\n              if (a.nombre.toUpperCase() == b.nombre.toUpperCase()) {\n                return 0;\n              }\n              if (a.nombre.toUpperCase() > b.nombre.toUpperCase()) {\n                return 1;\n              }\n              if (a.nombre.toUpperCase() < b.nombre.toUpperCase()) {\n                return -1;\n              }\n            });\n            this.autor = datosRespuesta;\n            this.libro.idAutor = this.autor[0].id;\n            this.libro.idEditorial = this.editoriales[0].id;\n          }\n        })\n        .catch(console.log);\n    },\n    consultarCarreras() {\n      fetch(RUTA_SERVIDOR_LIBROS+\"/carreras\")\n        .then((respuesta) => respuesta.json())\n        .then((datosRespuesta) => {\n          this.carreras = [];\n          if (typeof datosRespuesta[0].success === \"undefined\") {\n            this.carreras = datosRespuesta;\n          }\n        })\n        .catch(console.log);\n    },\n    consultarEditorial() {\n      fetch(RUTA_SERVIDOR_LIBROS+\"/editoriales/\")\n        .then((respuesta) => respuesta.json())\n        .then((datosRespuesta) => {\n          if (typeof datosRespuesta[0].success === \"undefined\") {\n            datosRespuesta.sort((a, b) => {\n              if (\n                a.nombreEditorial.toUpperCase() ==\n                b.nombreEditorial.toUpperCase()\n              ) {\n                return 0;\n              }\n              if (\n                a.nombreEditorial.toUpperCase() >\n                b.nombreEditorial.toUpperCase()\n              ) {\n                return 1;\n              }\n              if (\n                a.nombreEditorial.toUpperCase() <\n                b.nombreEditorial.toUpperCase()\n              ) {\n                return -1;\n              }\n            });\n            this.editoriales = datosRespuesta;\n          }\n        })\n        .catch(console.log);\n    },\n\n    reset() {\n      Object.assign(this.$data, this.$options.data());\n      this.consultarEditorial();\n      this.consultarAutor();\n      this.consultarCarreras();\n    },\n    volver() {\n      location.reload();\n    },\n    obterAutor() {\n      this.preNombre = this.autor.find(\n        (x) => x.id == this.libro.idAutor\n      ).nombre;\n    },\n    Previa() {\n      let index = 0;\n      while (index != this.libro.idAutor) {\n        if (this.libro.idAutor == this.autor[index].id) {\n          this.preNombre = this.autor[index].nombre;\n          index = this.libro.idAutor;\n        } else {\n          index++;\n        }\n      }\n    },\n\n    buscarArchivo(event){\n      this.pdf= event.target.files[0];\n      \n    }\n\n\n\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}