{"ast":null,"code":"import { ref, getCurrentInstance, onMounted, onBeforeUnmount } from \"vue\";\n\nconst useEl = () => {\n  const el = ref();\n  const {\n    proxy\n  } = getCurrentInstance();\n  onMounted(() => {\n    el.value = proxy == null ? void 0 : proxy.$el;\n  });\n  onBeforeUnmount(() => {\n    el.value = void 0;\n  });\n  return el;\n};\n\nexport { useEl as u };","map":{"version":3,"mappings":";;AAEO,MAAMA,QAAQ,MAAM;EACzB,MAAMC,KAAKC,KAAX;EACM;IAAEC;EAAF,IAAYC,oBAAZ;EAENC,UAAU,MAAM;IACdJ,GAAGK,KAAH,GAAWH,+BAAOI,GAAlB;EACD,CAFD;EAIAC,gBAAgB,MAAM;IACpBP,GAAGK,KAAH,GAAW,MAAX;EACD,CAFD;EAIO;AACT,CAbO","names":["useEl","el","ref","proxy","getCurrentInstance","onMounted","value","$el","onBeforeUnmount"],"sources":["../../../../src/composables/useEl.ts"],"sourcesContent":["import { getCurrentInstance, onBeforeUnmount, onMounted, ref } from 'vue'\n\nexport const useEl = () => {\n  const el = ref<HTMLElement>()\n  const { proxy } = getCurrentInstance()!\n\n  onMounted(() => {\n    el.value = proxy?.$el\n  })\n\n  onBeforeUnmount(() => {\n    el.value = undefined\n  })\n\n  return el\n}\n"]},"metadata":{},"sourceType":"module"}