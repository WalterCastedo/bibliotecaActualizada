{"ast":null,"code":"import { u as useEvent } from \"../../../composables/useEvent.js\";\n\nconst isTyping = e => {\n  const target = e.target;\n\n  if (!(target.tagName === \"INPUT\" || target.tagName === \"TEXTAREA\")) {\n    return false;\n  }\n\n  if (target.attributes.getNamedItem(\"readonly\")) {\n    return false;\n  }\n\n  return true;\n};\n\nconst openKey = [\"ArrowDown\", \"ArrowUp\", \"Enter\", \"Space\"];\n\nconst useKeyboardNavigation = (anchorRef, isOpened) => {\n  useEvent(\"keydown\", e => {\n    if (isTyping(e)) {\n      return;\n    }\n\n    if (!openKey.includes(e.key)) {\n      return;\n    }\n\n    isOpened.value = !isOpened.value;\n    e.preventDefault();\n  }, anchorRef);\n  useEvent(\"keydown\", e => {\n    if (e.key === \"Escape\" && isOpened.value) {\n      isOpened.value = false;\n      e.preventDefault();\n    }\n  }, true);\n};\n\nconst useMouseNavigation = (anchorRef, listeners) => {\n  useEvent([\"click\", \"contextmenu\", \"dblclick\"], e => {\n    if (isTyping(e)) {\n      return;\n    }\n\n    listeners[e.type](e);\n  }, anchorRef);\n  useEvent([\"mouseleave\", \"mouseenter\"], e => {\n    listeners[e.type](e);\n  }, anchorRef);\n};\n\nexport { useMouseNavigation as a, useKeyboardNavigation as u };","map":{"version":3,"mappings":";;AAGA,MAAMA,WAAYC,CAAD,IAAc;EAC7B,MAAMC,SAASD,EAAEC,MAAjB;;EACA,IAAI,EAASA,mBAAY,OAAZ,IAAuBA,OAAOC,OAAP,KAAmB,UAAnD,CAAJ,EAAoE;IAAS;EAAM;;EACnF,IAAID,OAAOE,UAAP,CAAkBC,YAAlB,CAA+B,UAA/B,CAAJ,EAAgD;IAAS;EAAM;;EACxD;AACT,CALA;;AAOA,MAAMC,UAAU,CAAC,WAAD,EAAc,SAAd,EAAyB,OAAzB,EAAkC,OAAlC,CAAhB;;AAEa,8BAAwB,CAACC,SAAD,EAA0CC,QAA1C,KAAqE;EAC/FC,oBAAYR,CAAD,IAAO;IACrB,aAASA,CAAT,GAAa;MAAE;IAAO;;IAE1B,IAAI,CAACK,QAAQI,QAAR,CAAiBT,EAAEU,GAAnB,CAAL,EAA8B;MAAE;IAAO;;IAE9BH,iBAAQ,CAACA,SAASI,KAAlB;IACTX,EAAEY,cAAF;EAAiB,CANV,EAONN,SAPM;EASAE,oBAAYR,CAAD,IAAO;IACzB,IAAIA,EAAEU,GAAF,KAAU,QAAV,IAAsBH,SAASI,KAAnC,EAA0C;MACxCJ,SAASI,KAAT,GAAiB,KAAjB;MACAX,EAAEY,cAAF;IACF;EAAA,CAJO,EAKN,IALM;AAMX,CAhBa;;AAmBA,2BAAqB,CAChCN,SADgC,EAEhCO,SAFgC,KAG7B;EACHL,SAAS,CAAC,OAAD,EAAU,aAAV,EAAyB,UAAzB,CAAT,EAAgDR,CAAD,IAAmB;IAC5D,aAASA,CAAT,GAAa;MAAE;IAAO;;IAEhBa,YAAEC,IAAF,EAA0Bd,CAA1B;EAA2B,CAHvC,EAIGM,SAJH;EAMAE,SAAS,CAAC,YAAD,EAAe,YAAf,CAAT,EAAwCR,CAAD,IAAmB;IAC9Ca,YAAEC,IAAF,EAA0Bd,CAA1B;EAA2B,CADvC,EAEGM,SAFH;AAGF,CAba","names":["isTyping","e","target","tagName","attributes","getNamedItem","openKey","anchorRef","isOpened","useEvent","includes","key","value","preventDefault","listeners","type"],"sources":["../../../../../../src/components/va-dropdown/hooks/useDropdownNavigation.ts"],"sourcesContent":["import { Ref } from 'vue'\nimport { useEvent } from '../../../composables'\n\nconst isTyping = (e: Event) => {\n  const target = e.target as HTMLElement\n  if (!(target.tagName === 'INPUT' || target.tagName === 'TEXTAREA')) { return false }\n  if (target.attributes.getNamedItem('readonly')) { return false }\n  return true\n}\n\nconst openKey = ['ArrowDown', 'ArrowUp', 'Enter', 'Space']\n\nexport const useKeyboardNavigation = (anchorRef: Ref<HTMLElement | undefined>, isOpened: Ref<boolean>) => {\n  useEvent('keydown', (e) => {\n    if (isTyping(e)) { return }\n\n    if (!openKey.includes(e.key)) { return }\n\n    isOpened.value = !isOpened.value\n    e.preventDefault()\n  }, anchorRef)\n\n  useEvent('keydown', (e) => {\n    if (e.key === 'Escape' && isOpened.value) {\n      isOpened.value = false\n      e.preventDefault()\n    }\n  }, true)\n}\n\ntype MouseEventName = 'mouseleave' | 'mouseenter' | 'click' | 'dblclick' | 'contextmenu'\nexport const useMouseNavigation = (\n  anchorRef: Ref<HTMLElement | undefined>,\n  listeners: Record<MouseEventName, (e: MouseEvent) => any>,\n) => {\n  useEvent(['click', 'contextmenu', 'dblclick'], (e: MouseEvent) => {\n    if (isTyping(e)) { return }\n\n    listeners[e.type as MouseEventName](e)\n  }, anchorRef)\n\n  useEvent(['mouseleave', 'mouseenter'], (e: MouseEvent) => {\n    listeners[e.type as MouseEventName](e)\n  }, anchorRef)\n}\n"]},"metadata":{},"sourceType":"module"}