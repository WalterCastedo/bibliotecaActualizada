{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { getCurrentInstance } from \"vue\";\nimport { c as createModalInstance } from \"../modal.js\";\n\nconst useModal = () => {\n  var _a;\n\n  const appContext = (_a = getCurrentInstance()) == null ? void 0 : _a.appContext;\n\n  if (!appContext) {\n    throw new Error(\"useModal can be used only in setup function. You can use app.config.globalProperties.$vaModal outside setup function\");\n  }\n\n  const init = options => {\n    return createModalInstance(options, appContext);\n  };\n\n  return {\n    init\n  };\n};\n\nexport { useModal as u };","map":{"version":3,"mappings":";;;;AAKO,MAAMA,WAAW,MAAM;;;EACtB,mBAAa,kDAAsBC,UAAnC;;EAEN,IAAI,CAACA,UAAL,EAAiB;IACT,UAAIC,KAAJ,CAAU,sHAAV;EACR;;EAKM,aAAQC,OAAD,IAAoC;IACxC,2BAAoBA,OAApB,EAA6BF,UAA7B;EAAuC,CAD1C;;EAIN,OAAO;IAAEG;EAAF,CAAP;AACF,CAfO","names":["useModal","appContext","Error","options","init"],"sources":["../../../../../../src/components/va-modal/hooks/useModal.ts"],"sourcesContent":["import { getCurrentInstance } from 'vue'\nimport { createModalInstance } from '../modal'\nimport { ModalOptions } from '../types'\n\n/** This hook can be used without plugin used */\nexport const useModal = () => {\n  const appContext = getCurrentInstance()?.appContext\n\n  if (!appContext) {\n    throw new Error('useModal can be used only in setup function. You can use app.config.globalProperties.$vaModal outside setup function')\n  }\n\n  /**\n   * @param options can be message string or options object\n   */\n  const init = (options: string | ModalOptions) => {\n    return createModalInstance(options, appContext)\n  }\n\n  return { init }\n}\n"]},"metadata":{},"sourceType":"module"}