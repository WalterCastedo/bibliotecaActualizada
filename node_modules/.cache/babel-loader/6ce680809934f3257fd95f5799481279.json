{"ast":null,"code":"import { defineComponent, resolveComponent, openBlock, createElementBlock, normalizeStyle, renderSlot, normalizeProps, guardReactiveProps, createVNode, createElementVNode, withCtx, createTextVNode, toDisplayString, mergeProps, createCommentVNode } from \"vue\";\nimport { u as useView } from \"../../hooks/view.js\";\nimport { V as VaButton } from \"../../../va-button/index.js\";\nimport { u as useTranslation } from \"../../../../composables/useTranslation.js\";\nimport { _ as _export_sfc } from \"../../../../../plugin-vue_export-helper.js\";\n\nvar VaDatePickerHeader_vue_vue_type_style_index_0_lang = /* @__PURE__ */(() => \".va-date-picker__header{display:flex;justify-content:space-between;align-items:center}.va-date-picker__header__text{color:currentColor}.va-date-picker__header__month{margin-left:.25rem}\\n\")();\n\nconst _sfc_main = defineComponent({\n  name: \"VaDatePickerHeader\",\n  components: {\n    VaButton\n  },\n  emits: [\"update:view\"],\n  props: {\n    monthNames: {\n      type: Array,\n      required: true\n    },\n    view: {\n      type: Object\n    },\n    color: {\n      type: String\n    },\n    textColor: {\n      type: String\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  setup(props, {\n    emit\n  }) {\n    const {\n      syncView,\n      prev,\n      next\n    } = useView(props, emit);\n\n    const switchView = () => {\n      if (syncView.value.type === \"day\") {\n        syncView.value = { ...syncView.value,\n          type: \"month\"\n        };\n      } else if (syncView.value.type === \"month\") {\n        syncView.value = { ...syncView.value,\n          type: \"year\"\n        };\n      }\n    };\n\n    const changeView = view => {\n      syncView.value = view;\n    };\n\n    return { ...useTranslation(),\n      prev,\n      next,\n      changeView,\n      switchView,\n      syncView\n    };\n  }\n\n});\n\nconst _hoisted_1 = {\n  class: \"va-date-picker__header__text\"\n};\nconst _hoisted_2 = {\n  class: \"va-date-picker__header__month\"\n};\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_va_button = resolveComponent(\"va-button\");\n\n  return _ctx.syncView.type !== \"year\" ? (openBlock(), createElementBlock(\"div\", {\n    key: 0,\n    class: \"va-date-picker-header va-date-picker__header\",\n    style: normalizeStyle({\n      color: _ctx.textColor\n    })\n  }, [renderSlot(_ctx.$slots, \"buttonPrev\", normalizeProps(guardReactiveProps({\n    onClick: _ctx.prev\n  })), () => [createVNode(_component_va_button, {\n    disabled: _ctx.$props.disabled,\n    icon: \"va-arrow-left\",\n    preset: \"plain\",\n    size: \"small\",\n    color: _ctx.color,\n    textColor: _ctx.textColor,\n    \"aria-label\": _ctx.t(\"nextPeriod\"),\n    round: \"\",\n    onClick: _ctx.prev\n  }, null, 8, [\"disabled\", \"color\", \"textColor\", \"aria-label\", \"onClick\"])]), createElementVNode(\"div\", _hoisted_1, [renderSlot(_ctx.$slots, \"header\", normalizeProps(guardReactiveProps({\n    year: _ctx.syncView.year,\n    month: _ctx.syncView.month,\n    monthNames: _ctx.monthNames,\n    view: _ctx.syncView,\n    changeView: _ctx.changeView,\n    switchView: _ctx.switchView\n  })), () => [createVNode(_component_va_button, {\n    disabled: _ctx.$props.disabled,\n    preset: \"plain\",\n    size: \"small\",\n    color: _ctx.color,\n    textColor: _ctx.textColor,\n    \"aria-label\": _ctx.t(\"switchView\"),\n    onClick: _ctx.switchView\n  }, {\n    default: withCtx(() => [renderSlot(_ctx.$slots, \"year\", normalizeProps(guardReactiveProps({\n      year: _ctx.syncView.year\n    })), () => [createTextVNode(toDisplayString(_ctx.syncView.year), 1)]), _ctx.syncView.type === \"day\" ? renderSlot(_ctx.$slots, \"month\", normalizeProps(mergeProps({\n      key: 0\n    }, {\n      month: _ctx.syncView.month\n    })), () => [createElementVNode(\"span\", _hoisted_2, toDisplayString(_ctx.monthNames[_ctx.syncView.month]), 1)]) : createCommentVNode(\"\", true)]),\n    _: 3\n  }, 8, [\"disabled\", \"color\", \"textColor\", \"aria-label\", \"onClick\"])])]), renderSlot(_ctx.$slots, \"buttonNext\", normalizeProps(guardReactiveProps({\n    onClick: _ctx.next\n  })), () => [createVNode(_component_va_button, {\n    disabled: _ctx.$props.disabled,\n    icon: \"va-arrow-right\",\n    preset: \"plain\",\n    size: \"small\",\n    color: _ctx.color,\n    textColor: _ctx.textColor,\n    \"aria-label\": _ctx.t(\"previousPeriod\"),\n    onClick: _ctx.next,\n    round: \"\"\n  }, null, 8, [\"disabled\", \"color\", \"textColor\", \"aria-label\", \"onClick\"])])], 4)) : createCommentVNode(\"\", true);\n}\n\nvar VaDatePickerHeader = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { VaDatePickerHeader as V };\nimport './VaDatePickerHeader.css';","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","name","components","VaButton","emits","props","monthNames","type","Array","required","view","Object","color","String","textColor","disabled","Boolean","default","setup","emit","syncView","prev","next","useView","switchView","value","useTranslation","changeView","class","_ctx","openBlock","_createElementBlock","key","style","_normalizeStyle","_renderSlot","_normalizeProps","onClick","_createVNode","_component_va_button","$props","icon","preset","size","t","round","_createElementVNode","$slots","year","month","_toDisplayString","_createTextVNode","normalizeProps","_createCommentVNode"],"sources":["../../../../../../../src/components/va-date-picker/components/VaDatePickerHeader/VaDatePickerHeader.vue"],"sourcesContent":["<template>\n  <div\n    v-if=\"syncView.type !== 'year'\"\n    class=\"va-date-picker-header va-date-picker__header\"\n    :style=\"{ color: textColor }\"\n  >\n    <slot name=\"buttonPrev\" v-bind=\"{ onClick: prev }\">\n      <va-button\n        :disabled=\"$props.disabled\"\n        icon=\"va-arrow-left\"\n        preset=\"plain\"\n        size=\"small\"\n        :color=\"color\"\n        :textColor=\"textColor\"\n        :aria-label=\"t('nextPeriod')\"\n        round\n        @click=\"prev\"\n      />\n    </slot>\n\n    <div class=\"va-date-picker__header__text\">\n      <slot name=\"header\" v-bind=\"{ year: syncView.year, month: syncView.month, monthNames, view: syncView, changeView, switchView }\">\n        <va-button\n          :disabled=\"$props.disabled\"\n          preset=\"plain\"\n          size=\"small\"\n          :color=\"color\"\n          :textColor=\"textColor\"\n          :aria-label=\"t('switchView')\"\n          @click=\"switchView\"\n        >\n          <slot name=\"year\" v-bind=\"{ year: syncView.year }\">{{ syncView.year }}</slot>\n\n          <slot v-if=\"syncView.type === 'day'\" name=\"month\" v-bind=\"{ month: syncView.month }\">\n            <span class=\"va-date-picker__header__month\">{{ monthNames[syncView.month] }}</span>\n          </slot>\n        </va-button>\n      </slot>\n    </div>\n\n    <slot name=\"buttonNext\" v-bind=\"{ onClick: next }\">\n      <va-button\n        :disabled=\"$props.disabled\"\n        icon=\"va-arrow-right\"\n        preset=\"plain\"\n        size=\"small\"\n        :color=\"color\"\n        :textColor=\"textColor\"\n        :aria-label=\"t('previousPeriod')\"\n        @click=\"next\"\n        round\n      />\n    </slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from 'vue'\n\nimport { useView } from '../../hooks/view'\n\nimport { DatePickerView } from '../../types'\n\nimport { VaButton } from '../../../va-button'\nimport { useTranslation } from '../../../../composables'\n\nexport default defineComponent({\n  name: 'VaDatePickerHeader',\n  components: { VaButton },\n  emits: ['update:view'],\n  props: {\n    monthNames: { type: Array, required: true },\n    view: { type: Object as PropType<DatePickerView> },\n    color: { type: String },\n    textColor: { type: String },\n    disabled: { type: Boolean, default: false },\n  },\n\n  setup (props, { emit }) {\n    const { syncView, prev, next } = useView(props, emit)\n\n    const switchView = () => {\n      if (syncView.value.type === 'day') {\n        syncView.value = { ...syncView.value, type: 'month' }\n      } else if (syncView.value.type === 'month') {\n        syncView.value = { ...syncView.value, type: 'year' }\n      }\n    }\n\n    const changeView = (view: DatePickerView) => {\n      syncView.value = view\n    }\n\n    return {\n      ...useTranslation(),\n      prev,\n      next,\n      changeView,\n      switchView,\n      syncView,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-date-picker {\n  &__header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    &__text {\n      color: currentColor;\n    }\n\n    &__month {\n      margin-left: 0.25rem;\n    }\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}