{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { defineComponent, shallowRef, ref, toRefs, computed, watch, nextTick, resolveComponent, openBlock, createBlock, mergeProps, withCtx, renderSlot, normalizeProps, guardReactiveProps, createVNode, withModifiers, createSlots, createElementVNode, toHandlers, withKeys, createCommentVNode, renderList } from \"vue\";\nimport { o as omit_1 } from \"../../../vendor.js\";\nimport { e as extractComponentProps, a as extractComponentEmits } from \"../../utils/component-options/extract-component-options.js\";\nimport { f as filterComponentProps } from \"../../utils/component-options/filter-props.js\";\nimport { u as useClearableProps, a as useClearableEmits, b as useClearable } from \"../../composables/useClearable.js\";\nimport { u as useComponentPresetProp } from \"../../composables/useComponentPreset.js\";\nimport { a as useFocusEmits, u as useFocus } from \"../../composables/useFocus.js\";\nimport { u as useParsable } from \"../../composables/useParsable.js\";\nimport { u as useStatefulEmits, b as useStateful } from \"../../composables/useStateful.js\";\nimport { u as useValidationProps, a as useValidationEmits, b as useValidation } from \"../../composables/useValidation.js\";\nimport { u as useTranslation } from \"../../composables/useTranslation.js\";\nimport { u as useSyncProp } from \"../va-date-picker/hooks/sync-prop.js\";\nimport { u as useRangeModelValueGuard } from \"./hooks/range-model-value-guard.js\";\nimport { u as useDateParser } from \"./hooks/input-text-parser.js\";\nimport { i as isDates, a as isSingleDate, b as isRange } from \"../va-date-picker/utils/date-utils.js\";\nimport { _ as _VaDatePicker } from \"../va-date-picker/VaDatePicker.js\";\nimport { V as VaDropdown } from \"../va-dropdown/index.js\";\nimport { V as VaIcon } from \"../va-icon/index.js\";\nimport { _ as _export_sfc } from \"../../../plugin-vue_export-helper.js\";\nimport { V as VaDropdownContent } from \"../va-dropdown/components/VaDropdownContent/index.js\";\nimport { V as VaInputWrapper } from \"../va-input/components/VaInputWrapper/VaInputWrapper.js\";\n\nvar VaDateInput_vue_vue_type_style_index_0_lang = /* @__PURE__ */(() => \".va-date-input{--va-date-picker-cell-size: 28px;min-width:var(--va-date-input-min-width);font-family:var(--va-font-family)}.va-date-input__anchor{flex:1}.va-date-input__input:-moz-read-only{cursor:pointer}.va-date-input__input:read-only{cursor:pointer}.va-date-input__dropdown-content{display:flex;justify-content:center}\\n\")();\n\nconst VaInputWrapperProps = extractComponentProps(VaInputWrapper, [\"focused\", \"maxLength\", \"counterValue\", \"disabled\"]);\nconst VaDatePickerProps = extractComponentProps(_VaDatePicker);\nconst VaDropdownProps = extractComponentProps(VaDropdown, [\"innerAnchorSelector\", \"stateful\", \"offset\", \"keyboardNavigation\", \"closeOnContentClick\", \"modelValue\"]);\n\nconst _sfc_main = defineComponent({\n  name: \"VaDateInput\",\n  components: {\n    VaDropdown,\n    VaDropdownContent,\n    VaDatePicker: _VaDatePicker,\n    VaInputWrapper,\n    VaIcon\n  },\n  props: { ...VaDropdownProps,\n    ...useClearableProps,\n    ...VaInputWrapperProps,\n    ...VaDatePickerProps,\n    ...useValidationProps,\n    ...useComponentPresetProp,\n    clearValue: {\n      type: Date,\n      default: void 0\n    },\n    modelValue: {\n      type: [Date, Array, Object, String, Number]\n    },\n    resetOnClose: {\n      type: Boolean,\n      default: true\n    },\n    isOpen: {\n      type: Boolean,\n      default: void 0\n    },\n    format: {\n      type: Function\n    },\n    formatDate: {\n      type: Function,\n      default: d => d.toLocaleDateString()\n    },\n    parse: {\n      type: Function\n    },\n    parseDate: {\n      type: Function\n    },\n    parseValue: {\n      type: Function\n    },\n    delimiter: {\n      type: String,\n      default: \", \"\n    },\n    rangeDelimiter: {\n      type: String,\n      default: \" ~ \"\n    },\n    manualInput: {\n      type: Boolean,\n      default: false\n    },\n    color: {\n      type: String,\n      default: \"primary\"\n    },\n    leftIcon: {\n      type: Boolean,\n      default: false\n    },\n    icon: {\n      type: String,\n      default: \"va-calendar\"\n    }\n  },\n  emits: [...useFocusEmits, ...extractComponentEmits(_VaDatePicker), ...useClearableEmits, ...useValidationEmits, ...useStatefulEmits, \"update:is-open\", \"update:text\"],\n  inheritAttrs: false,\n\n  setup(props, {\n    emit,\n    slots,\n    attrs\n  }) {\n    const input = shallowRef();\n    const datePicker = ref();\n    const {\n      isOpen,\n      resetOnClose\n    } = toRefs(props);\n    const {\n      valueComputed: statefulValue\n    } = useStateful(props, emit);\n    const {\n      syncProp: isOpenSync\n    } = useSyncProp(isOpen, \"is-open\", emit, false);\n    const {\n      isFocused,\n      focus,\n      blur,\n      onFocus: focusListener,\n      onBlur: blurListener\n    } = useFocus(input);\n    const isRangeModelValueGuardDisabled = computed(() => !resetOnClose.value);\n    const {\n      valueComputed,\n      reset: resetInvalidRange\n    } = useRangeModelValueGuard(statefulValue, isRangeModelValueGuardDisabled, props.parseValue);\n    watch(isOpenSync, isOpened => {\n      if (!isOpened && !isRangeModelValueGuardDisabled.value) {\n        resetInvalidRange();\n      }\n    });\n\n    const dateOrNothing = date => date ? props.formatDate(date) : \"...\";\n\n    const {\n      parseDateInputValue,\n      isValid\n    } = useDateParser(props);\n    watch(valueComputed, () => {\n      isValid.value = true;\n    });\n\n    const modelValueToString = value => {\n      if (props.format) {\n        return props.format(valueComputed.value);\n      }\n\n      if (isDates(value)) {\n        return value.map(d => props.formatDate(d)).join(props.delimiter);\n      }\n\n      if (isSingleDate(value)) {\n        return props.formatDate(value);\n      }\n\n      if (isRange(value)) {\n        return dateOrNothing(value.start) + props.rangeDelimiter + dateOrNothing(value.end);\n      }\n\n      throw new Error(\"VaDatePicker: Invalid model value. Value should be Date, Date[] or { start: Date, end: Date | null }\");\n    };\n\n    const {\n      text,\n      value: valueWithoutText\n    } = useParsable(valueComputed, parseDateInputValue, modelValueToString);\n    const valueText = computed(() => {\n      if (!isValid.value) {\n        return \"\";\n      }\n\n      if (!valueComputed.value) {\n        if (!props.clearValue) {\n          return \"\";\n        }\n\n        return modelValueToString(props.clearValue);\n      }\n\n      return text.value;\n    });\n\n    const onInputTextChanged = ({\n      target\n    }) => {\n      if (props.disabled) {\n        return;\n      }\n\n      const parsedValue = parseDateInputValue(target.value);\n\n      if (isValid.value) {\n        valueComputed.value = parsedValue;\n      }\n    };\n\n    const reset = () => withoutValidation(() => {\n      statefulValue.value = props.clearValue;\n      emit(\"clear\");\n      resetValidation();\n    });\n\n    const hideAndFocus = () => {\n      isOpenSync.value = false;\n      focus();\n    };\n\n    const focusDatePicker = () => {\n      nextTick(() => {\n        var _a;\n\n        return (_a = datePicker.value) == null ? void 0 : _a.focusCurrentPicker();\n      });\n    };\n\n    const focusInputOrPicker = () => {\n      isOpenSync.value ? focusDatePicker() : focus();\n    };\n\n    const checkProhibitedDropdownOpening = e => {\n      if (isOpenSync.value) {\n        return false;\n      }\n\n      if (props.disabled || props.readonly) {\n        return true;\n      }\n\n      return props.manualInput && (e == null ? void 0 : e.code) !== \"Space\";\n    };\n\n    const toggleDropdown = event => {\n      if (checkProhibitedDropdownOpening(event instanceof KeyboardEvent ? event : void 0)) {\n        return;\n      }\n\n      isOpenSync.value = !isOpenSync.value;\n      nextTick(focusInputOrPicker);\n    };\n\n    const showDropdown = () => {\n      if (props.disabled || props.readonly) {\n        return;\n      }\n\n      isOpenSync.value = true;\n      nextTick(focusDatePicker);\n    };\n\n    const {\n      computedError,\n      computedErrorMessages,\n      listeners,\n      validationAriaAttributes,\n      withoutValidation,\n      resetValidation\n    } = useValidation(props, emit, {\n      reset,\n      focus\n    });\n    const hasError = computed(() => !isValid.value && valueComputed.value !== props.clearValue || computedError.value);\n    const filterSlots = computed(() => {\n      const slotsWithIcons = [props.leftIcon && \"prependInner\", (!props.leftIcon || props.clearable) && \"icon\"];\n      return Object.keys(slots).filter(slot => !slotsWithIcons.includes(slot));\n    });\n    const {\n      canBeCleared,\n      clearIconProps,\n      onFocus,\n      onBlur\n    } = useClearable(props, valueComputed);\n    const cursorStyleComputed = computed(() => {\n      if (props.disabled) {\n        return {};\n      }\n\n      if (props.manualInput) {\n        return {\n          cursor: \"text\"\n        };\n      }\n\n      return {\n        cursor: \"pointer\"\n      };\n    });\n    const iconTabindexComputed = computed(() => props.disabled || props.readonly ? -1 : 0);\n    const iconProps = computed(() => ({\n      role: \"button\",\n      ariaHidden: false,\n      size: \"small\",\n      name: props.icon,\n      color: props.color,\n      tabindex: iconTabindexComputed.value\n    }));\n    const computedInputWrapperProps = computed(() => ({ ...filterComponentProps(VaInputWrapperProps).value,\n      focused: isFocused.value,\n      error: hasError.value,\n      errorMessages: computedErrorMessages.value,\n      readonly: props.readonly || !props.manualInput\n    }));\n    const computedInputListeners = computed(() => ({\n      focus: () => {\n        if (props.disabled) {\n          return;\n        }\n\n        focusListener();\n\n        if (props.readonly) {\n          return;\n        }\n\n        onFocus();\n        listeners.onFocus();\n      },\n      blur: () => {\n        if (props.disabled) {\n          return;\n        }\n\n        blurListener();\n\n        if (props.readonly) {\n          return;\n        }\n\n        onBlur();\n        listeners.onBlur();\n      }\n    }));\n    const {\n      t\n    } = useTranslation();\n    const inputAttributesComputed = computed(() => ({\n      readonly: props.readonly || !props.manualInput,\n      disabled: props.disabled,\n      tabindex: props.disabled ? -1 : 0,\n      value: valueText.value,\n      ariaLabel: props.label || t(\"selectedDate\"),\n      ariaRequired: props.requiredMark,\n      ariaDisabled: props.disabled,\n      ariaReadOnly: props.readonly,\n      ...validationAriaAttributes.value,\n      ...omit_1(attrs, [\"class\", \"style\"])\n    }));\n    const dropdownPropsComputed = computed(() => ({ ...filterComponentProps(VaDropdownProps).value,\n      offset: [2, 0],\n      stateful: false,\n      keyboardNavigation: true,\n      closeOnContentClick: false,\n      innerAnchorSelector: \".va-input-wrapper__field\"\n    }));\n    return {\n      t,\n      datePicker,\n      valueText,\n      valueWithoutText,\n      valueComputed,\n      isOpenSync,\n      onInputTextChanged,\n      isFocused,\n      input,\n      inputWrapperProps: computedInputWrapperProps,\n      inputListeners: computedInputListeners,\n      inputAttributesComputed,\n      datePickerProps: filterComponentProps(VaDatePickerProps),\n      dropdownPropsComputed,\n      filterSlots,\n      canBeCleared,\n      clearIconProps,\n      iconProps,\n      cursorStyleComputed,\n      hideAndFocus,\n      toggleDropdown,\n      showDropdown,\n      focusInputOrPicker,\n      focusDatePicker,\n      reset,\n      focus,\n      blur\n    };\n  }\n\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_va_icon = resolveComponent(\"va-icon\");\n\n  const _component_va_input_wrapper = resolveComponent(\"va-input-wrapper\");\n\n  const _component_va_date_picker = resolveComponent(\"va-date-picker\");\n\n  const _component_va_dropdown_content = resolveComponent(\"va-dropdown-content\");\n\n  const _component_va_dropdown = resolveComponent(\"va-dropdown\");\n\n  return openBlock(), createBlock(_component_va_dropdown, mergeProps({\n    modelValue: _ctx.isOpenSync,\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => _ctx.isOpenSync = $event),\n    class: [\"va-date-input\", _ctx.$attrs.class],\n    style: _ctx.$attrs.style\n  }, _ctx.dropdownPropsComputed, {\n    onOpen: _ctx.focusDatePicker,\n    onClose: _ctx.focus\n  }), {\n    anchor: withCtx(() => [renderSlot(_ctx.$slots, \"input\", normalizeProps(guardReactiveProps({\n      valueText: _ctx.valueText,\n      inputAttributes: _ctx.inputAttributesComputed,\n      inputWrapperProps: _ctx.inputWrapperProps,\n      inputListeners: _ctx.inputListeners\n    })), () => [createVNode(_component_va_input_wrapper, mergeProps({\n      class: \"va-date-input__anchor\",\n      style: _ctx.cursorStyleComputed\n    }, _ctx.inputWrapperProps, {\n      onClick: withModifiers(_ctx.toggleDropdown, [\"stop\"])\n    }), createSlots({\n      default: withCtx(() => [createElementVNode(\"input\", mergeProps({\n        ref: \"input\",\n        class: \"va-date-input__input\"\n      }, _ctx.inputAttributesComputed, toHandlers(_ctx.inputListeners), {\n        onChange: _cache[0] || (_cache[0] = (...args) => _ctx.onInputTextChanged && _ctx.onInputTextChanged(...args))\n      }), null, 16)]),\n      icon: withCtx(() => [_ctx.canBeCleared ? (openBlock(), createBlock(_component_va_icon, mergeProps({\n        key: 0,\n        \"aria-label\": _ctx.t(\"resetDate\")\n      }, { ..._ctx.iconProps,\n        ..._ctx.clearIconProps\n      }, {\n        onClick: withModifiers(_ctx.reset, [\"stop\"]),\n        onKeydown: [withKeys(withModifiers(_ctx.reset, [\"stop\"]), [\"enter\"]), withKeys(withModifiers(_ctx.reset, [\"stop\"]), [\"space\"])]\n      }), null, 16, [\"aria-label\", \"onClick\", \"onKeydown\"])) : !_ctx.$props.leftIcon && _ctx.$props.icon ? (openBlock(), createBlock(_component_va_icon, mergeProps({\n        key: 1,\n        \"aria-label\": _ctx.t(\"toggleDropdown\")\n      }, _ctx.iconProps, {\n        onClick: withModifiers(_ctx.showDropdown, [\"stop\"]),\n        onKeydown: [withKeys(withModifiers(_ctx.showDropdown, [\"stop\"]), [\"enter\"]), withKeys(withModifiers(_ctx.showDropdown, [\"stop\"]), [\"space\"])]\n      }), null, 16, [\"aria-label\", \"onClick\", \"onKeydown\"])) : createCommentVNode(\"\", true)]),\n      _: 2\n    }, [renderList(_ctx.filterSlots, name => {\n      return {\n        name,\n        fn: withCtx(slotScope => [renderSlot(_ctx.$slots, name, normalizeProps(guardReactiveProps(slotScope)))])\n      };\n    }), _ctx.$slots.prependInner || _ctx.$props.leftIcon ? {\n      name: \"prependInner\",\n      fn: withCtx(slotScope => [renderSlot(_ctx.$slots, \"prependInner\", normalizeProps(guardReactiveProps(slotScope))), _ctx.$props.leftIcon ? (openBlock(), createBlock(_component_va_icon, mergeProps({\n        key: 0,\n        \"aria-label\": _ctx.t(\"toggleDropdown\")\n      }, _ctx.iconProps, {\n        onClick: withModifiers(_ctx.showDropdown, [\"stop\"]),\n        onKeydown: [withKeys(withModifiers(_ctx.showDropdown, [\"stop\"]), [\"enter\"]), withKeys(withModifiers(_ctx.showDropdown, [\"stop\"]), [\"space\"])]\n      }), null, 16, [\"aria-label\", \"onClick\", \"onKeydown\"])) : createCommentVNode(\"\", true)])\n    } : void 0]), 1040, [\"style\", \"onClick\"])])]),\n    default: withCtx(() => [createVNode(_component_va_dropdown_content, {\n      class: \"va-date-input__dropdown-content\"\n    }, {\n      default: withCtx(() => [createVNode(_component_va_date_picker, mergeProps({\n        ref: \"datePicker\"\n      }, _ctx.datePickerProps, {\n        modelValue: _ctx.valueWithoutText,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.valueWithoutText = $event),\n        \"onClick:day\": _cache[2] || (_cache[2] = $event => _ctx.$emit(\"click:day\", $event)),\n        \"onClick:month\": _cache[3] || (_cache[3] = $event => _ctx.$emit(\"click:month\", $event)),\n        \"onClick:year\": _cache[4] || (_cache[4] = $event => _ctx.$emit(\"click:year\", $event)),\n        \"onHover:day\": _cache[5] || (_cache[5] = $event => _ctx.$emit(\"hover:day\", $event)),\n        \"onHover:month\": _cache[6] || (_cache[6] = $event => _ctx.$emit(\"hover:month\", $event)),\n        \"onHover:year\": _cache[7] || (_cache[7] = $event => _ctx.$emit(\"hover:year\", $event)),\n        \"onUpdate:view\": _cache[8] || (_cache[8] = $event => _ctx.$emit(\"update:view\", $event))\n      }), createSlots({\n        _: 2\n      }, [renderList(_ctx.$slots, (_, name) => {\n        return {\n          name,\n          fn: withCtx(bind => [renderSlot(_ctx.$slots, name, normalizeProps(guardReactiveProps(bind)))])\n        };\n      })]), 1040, [\"modelValue\"])]),\n      _: 3\n    })]),\n    _: 3\n  }, 16, [\"modelValue\", \"class\", \"style\", \"onOpen\", \"onClose\"]);\n}\n\nvar _VaDateInput = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { _VaDateInput as _ };\nimport './VaDateInput.css';","map":{"version":3,"mappings":"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","names":["VaInputWrapperProps","extractComponentProps","VaInputWrapper","VaDatePickerProps","VaDatePicker","VaDropdownProps","VaDropdown","_sfc_main","defineComponent","name","components","VaDropdownContent","VaIcon","props","useClearableProps","useValidationProps","useComponentPresetProp","clearValue","type","Date","default","modelValue","Array","Object","String","Number","resetOnClose","Boolean","isOpen","format","Function","formatDate","d","toLocaleDateString","parse","parseDate","parseValue","delimiter","rangeDelimiter","manualInput","color","leftIcon","icon","emits","useFocusEmits","extractComponentEmits","useClearableEmits","useValidationEmits","useStatefulEmits","inheritAttrs","setup","emit","slots","attrs","input","shallowRef","datePicker","ref","toRefs","valueComputed","statefulValue","useStateful","syncProp","isOpenSync","useSyncProp","isFocused","focus","blur","onFocus","focusListener","onBlur","blurListener","useFocus","isRangeModelValueGuardDisabled","computed","value","reset","resetInvalidRange","useRangeModelValueGuard","watch","isOpened","dateOrNothing","date","parseDateInputValue","isValid","useDateParser","map","join","start","end","Error","text","valueWithoutText","useParsable","modelValueToString","target","disabled","parsedValue","withoutValidation","resetValidation","hideAndFocus","focusDatePicker","nextTick","focusCurrentPicker","focusInputOrPicker","e","readonly","code","event","checkProhibitedDropdownOpening","KeyboardEvent","showDropdown","computedError","computedErrorMessages","listeners","validationAriaAttributes","useValidation","slotsWithIcons","clearable","keys","filter","slot","includes","canBeCleared","clearIconProps","useClearable","cursor","role","ariaHidden","size","tabindex","iconTabindexComputed","filterComponentProps","focused","error","hasError","errorMessages","t","useTranslation","valueText","ariaLabel","label","ariaRequired","requiredMark","ariaDisabled","ariaReadOnly","omit","offset","stateful","keyboardNavigation","closeOnContentClick","innerAnchorSelector","onInputTextChanged","inputWrapperProps","computedInputWrapperProps","inputListeners","computedInputListeners","inputAttributesComputed","datePickerProps","dropdownPropsComputed","filterSlots","iconProps","cursorStyleComputed","toggleDropdown","_component_va_dropdown","_createBlock","class","_ctx","style","$attrs","_mergeProps","onOpen","onClose","anchor","_withCtx","_renderSlot","$slots","_normalizeProps","inputAttributes","_createVNode","_component_va_input_wrapper","onClick","_withModifiers","_createSlots","_createElementVNode","_toHandlers","onChange","_cache","_component_va_icon","key","onKeydown","_withKeys","_openBlock","createCommentVNode","_renderList","fn","slotScope","_guardReactiveProps","prependInner","$props","normalizeProps","_component_va_dropdown_content","_component_va_date_picker","$emit","$event","_","bind"],"sources":["../../../../../src/components/va-date-input/VaDateInput.vue"],"sourcesContent":["<template>\n  <va-dropdown\n    v-model=\"isOpenSync\"\n    class=\"va-date-input\"\n    :class=\"$attrs.class\"\n    :style=\"$attrs.style\"\n    v-bind=\"dropdownPropsComputed\"\n    @open=\"focusDatePicker\"\n    @close=\"focus\"\n  >\n    <template #anchor>\n      <slot name=\"input\" v-bind=\"{ valueText, inputAttributes: inputAttributesComputed, inputWrapperProps, inputListeners }\">\n        <va-input-wrapper\n          class=\"va-date-input__anchor\"\n          :style=\"cursorStyleComputed\"\n          v-bind=\"inputWrapperProps\"\n          @click.stop=\"toggleDropdown\"\n        >\n          <template #default>\n            <input\n              ref=\"input\"\n              class=\"va-date-input__input\"\n              v-bind=\"inputAttributesComputed\"\n              v-on=\"inputListeners\"\n              @change=\"onInputTextChanged\"\n            />\n          </template>\n\n          <template\n            v-for=\"name in filterSlots\"\n            :key=\"name\"\n            v-slot:[name]=\"slotScope\"\n          >\n            <slot :name=\"name\" v-bind=\"slotScope\" />\n          </template>\n\n          <template #prependInner=\"slotScope\" v-if=\"$slots.prependInner || $props.leftIcon\">\n            <slot name=\"prependInner\" v-bind=\"slotScope\" />\n            <va-icon\n              v-if=\"$props.leftIcon\"\n              :aria-label=\"t('toggleDropdown')\"\n              v-bind=\"iconProps\"\n              @click.stop=\"showDropdown\"\n              @keydown.enter.stop=\"showDropdown\"\n              @keydown.space.stop=\"showDropdown\"\n            />\n          </template>\n\n          <template #icon>\n            <va-icon\n              v-if=\"canBeCleared\"\n              :aria-label=\"t('resetDate')\"\n              v-bind=\"{ ...iconProps, ...clearIconProps }\"\n              @click.stop=\"reset\"\n              @keydown.enter.stop=\"reset\"\n              @keydown.space.stop=\"reset\"\n            />\n            <va-icon\n              v-else-if=\"!$props.leftIcon && $props.icon\"\n              :aria-label=\"t('toggleDropdown')\"\n              v-bind=\"iconProps\"\n              @click.stop=\"showDropdown\"\n              @keydown.enter.stop=\"showDropdown\"\n              @keydown.space.stop=\"showDropdown\"\n            />\n          </template>\n        </va-input-wrapper>\n      </slot>\n    </template>\n\n    <va-dropdown-content class=\"va-date-input__dropdown-content\">\n      <va-date-picker\n          ref=\"datePicker\"\n          v-bind=\"datePickerProps\"\n          v-model=\"valueWithoutText\"\n          @click:day=\"$emit('click:day', $event)\"\n          @click:month=\"$emit('click:month', $event)\"\n          @click:year=\"$emit('click:year', $event)\"\n          @hover:day=\"$emit('hover:day', $event)\"\n          @hover:month=\"$emit('hover:month', $event)\"\n          @hover:year=\"$emit('hover:year', $event)\"\n          @update:view=\"$emit('update:view', $event)\"\n      >\n        <template\n          v-for=\"(_, name) in $slots\"\n          :key=\"name\"\n          v-slot:[name]=\"bind\"\n        >\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-date-picker>\n    </va-dropdown-content>\n  </va-dropdown>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  PropType,\n  toRefs,\n  watch,\n  ref,\n  shallowRef,\n  nextTick,\n  WritableComputedRef,\n} from 'vue'\nimport omit from 'lodash/omit'\n\nimport { filterComponentProps, extractComponentProps, extractComponentEmits } from '../../utils/component-options'\nimport {\n  useComponentPresetProp,\n  useClearable, useClearableEmits, useClearableProps,\n  useValidation, useValidationEmits, useValidationProps, ValidationProps,\n  useStateful, useStatefulEmits,\n  useParsable,\n  useFocus, useFocusEmits, useTranslation,\n} from '../../composables'\nimport { useSyncProp } from '../va-date-picker/hooks/sync-prop'\nimport { useRangeModelValueGuard } from './hooks/range-model-value-guard'\nimport { useDateParser } from './hooks/input-text-parser'\nimport { parseModelValue } from './hooks/model-value-parser'\n\nimport { isRange, isSingleDate, isDates } from '../va-date-picker/utils/date-utils'\n\nimport type { DateInputModelValue, DateInputValue } from './types'\nimport type { DropdownOffsetProp } from '../va-dropdown/types'\n\nimport VaDatePicker from '../va-date-picker/VaDatePicker.vue'\nimport { VaDropdown, VaDropdownContent } from '../va-dropdown'\nimport { VaInputWrapper } from '../va-input'\nimport { VaIcon } from '../va-icon'\n\nconst VaInputWrapperProps = extractComponentProps(VaInputWrapper, ['focused', 'maxLength', 'counterValue', 'disabled'])\nconst VaDatePickerProps = extractComponentProps(VaDatePicker)\nconst VaDropdownProps = extractComponentProps(VaDropdown,\n  ['innerAnchorSelector', 'stateful', 'offset', 'keyboardNavigation', 'closeOnContentClick', 'modelValue'],\n)\n\nexport default defineComponent({\n  name: 'VaDateInput',\n\n  components: {\n    VaDropdown,\n    VaDropdownContent,\n    VaDatePicker,\n    VaInputWrapper,\n    VaIcon,\n  },\n\n  props: {\n    ...VaDropdownProps,\n    ...useClearableProps,\n    ...VaInputWrapperProps,\n    ...VaDatePickerProps,\n    ...useValidationProps as ValidationProps<DateInputModelValue>,\n    ...useComponentPresetProp,\n\n    clearValue: { type: Date as PropType<DateInputModelValue>, default: undefined },\n    modelValue: { type: [Date, Array, Object, String, Number] as PropType<DateInputModelValue> },\n\n    resetOnClose: { type: Boolean, default: true },\n    isOpen: { type: Boolean, default: undefined },\n\n    format: { type: Function as PropType<(date: DateInputModelValue) => string> },\n    formatDate: { type: Function as PropType<(date: Date) => string>, default: (d: Date) => d.toLocaleDateString() },\n    parse: { type: Function as PropType<(input: string) => DateInputValue> },\n    parseDate: { type: Function as PropType<(input: string) => Date> },\n    parseValue: { type: Function as PropType<typeof parseModelValue> },\n\n    delimiter: { type: String, default: ', ' },\n    rangeDelimiter: { type: String, default: ' ~ ' },\n    manualInput: { type: Boolean, default: false },\n\n    color: { type: String, default: 'primary' },\n    leftIcon: { type: Boolean, default: false },\n    icon: { type: String, default: 'va-calendar' },\n  },\n\n  emits: [\n    ...useFocusEmits,\n    ...extractComponentEmits(VaDatePicker),\n    ...useClearableEmits,\n    ...useValidationEmits,\n    ...useStatefulEmits,\n    'update:is-open',\n    'update:text',\n  ],\n\n  inheritAttrs: false,\n\n  setup (props, { emit, slots, attrs }) {\n    const input = shallowRef<HTMLInputElement>()\n    const datePicker = ref<typeof VaDatePicker>()\n\n    const { isOpen, resetOnClose } = toRefs(props)\n    const { valueComputed: statefulValue }: { valueComputed: WritableComputedRef<DateInputModelValue> } = useStateful(props, emit)\n    const { syncProp: isOpenSync } = useSyncProp(isOpen, 'is-open', emit, false)\n\n    const { isFocused, focus, blur, onFocus: focusListener, onBlur: blurListener } = useFocus(input)\n\n    const isRangeModelValueGuardDisabled = computed(() => !resetOnClose.value)\n\n    const {\n      valueComputed,\n      reset: resetInvalidRange,\n    } = useRangeModelValueGuard(statefulValue, isRangeModelValueGuardDisabled, props.parseValue)\n\n    watch(isOpenSync, (isOpened) => {\n      if (!isOpened && !isRangeModelValueGuardDisabled.value) { resetInvalidRange() }\n    })\n\n    const dateOrNothing = (date: Date | undefined | null) => date ? props.formatDate(date) : '...'\n\n    const { parseDateInputValue, isValid } = useDateParser(props)\n\n    watch(valueComputed, () => {\n      isValid.value = true\n    })\n\n    const modelValueToString = (value: DateInputModelValue): string => {\n      if (props.format) {\n        return props.format(valueComputed.value)\n      }\n\n      if (isDates(value)) {\n        return value.map((d) => props.formatDate(d)).join(props.delimiter)\n      }\n      if (isSingleDate(value)) {\n        return props.formatDate(value)\n      }\n      if (isRange(value)) {\n        return dateOrNothing(value.start) + props.rangeDelimiter + dateOrNothing(value.end)\n      }\n\n      throw new Error('VaDatePicker: Invalid model value. Value should be Date, Date[] or { start: Date, end: Date | null }')\n    }\n\n    const {\n      text,\n      value: valueWithoutText,\n    } = useParsable(valueComputed, parseDateInputValue, modelValueToString)\n\n    const valueText = computed(() => {\n      if (!isValid.value) {\n        return ''\n      }\n\n      if (!valueComputed.value) {\n        if (!props.clearValue) { return '' }\n        return modelValueToString(props.clearValue)\n      }\n\n      return text.value\n    })\n\n    const onInputTextChanged = ({ target }: Event) => {\n      if (props.disabled) { return }\n\n      const parsedValue = parseDateInputValue((target as HTMLInputElement).value)\n\n      if (isValid.value) {\n        valueComputed.value = parsedValue\n      }\n    }\n\n    const reset = () => withoutValidation(() => {\n      statefulValue.value = props.clearValue\n      emit('clear')\n      resetValidation()\n    })\n\n    const hideAndFocus = (): void => {\n      isOpenSync.value = false\n      focus()\n    }\n\n    const focusDatePicker = (): void => {\n      nextTick(() => datePicker.value?.focusCurrentPicker())\n    }\n\n    const focusInputOrPicker = () => {\n      isOpenSync.value ? focusDatePicker() : focus()\n    }\n\n    const checkProhibitedDropdownOpening = (e?: KeyboardEvent) => {\n      if (isOpenSync.value) { return false }\n      if (props.disabled || props.readonly) { return true }\n      return props.manualInput && e?.code !== 'Space'\n    }\n\n    const toggleDropdown = (event: Event | KeyboardEvent) => {\n      if (checkProhibitedDropdownOpening(event instanceof KeyboardEvent ? event : undefined)) { return }\n\n      isOpenSync.value = !isOpenSync.value\n      nextTick(focusInputOrPicker)\n    }\n\n    // icon interaction\n    const showDropdown = () => {\n      if (props.disabled || props.readonly) { return }\n\n      isOpenSync.value = true\n      nextTick(focusDatePicker)\n    }\n\n    const {\n      computedError,\n      computedErrorMessages,\n      listeners,\n      validationAriaAttributes,\n      withoutValidation,\n      resetValidation,\n    } = useValidation(props, emit, { reset, focus })\n\n    const hasError = computed(() => (!isValid.value && valueComputed.value !== props.clearValue) || computedError.value)\n\n    const filterSlots = computed(() => {\n      const slotsWithIcons = [\n        props.leftIcon && 'prependInner',\n        (!props.leftIcon || props.clearable) && 'icon',\n      ]\n      return Object.keys(slots).filter(slot => !slotsWithIcons.includes(slot))\n    })\n\n    const {\n      canBeCleared,\n      clearIconProps,\n      onFocus,\n      onBlur,\n    } = useClearable(props, valueComputed)\n\n    const cursorStyleComputed = computed(() => {\n      if (props.disabled) { return {} }\n      if (props.manualInput) { return { cursor: 'text' } }\n      return { cursor: 'pointer' }\n    })\n\n    const iconTabindexComputed = computed(() => props.disabled || props.readonly ? -1 : 0)\n\n    const iconProps = computed(() => ({\n      role: 'button',\n      ariaHidden: false,\n      size: 'small',\n      name: props.icon,\n      color: props.color,\n      tabindex: iconTabindexComputed.value,\n    }))\n\n    const computedInputWrapperProps = computed(() => ({\n      ...filterComponentProps(VaInputWrapperProps).value,\n      focused: isFocused.value,\n      error: hasError.value,\n      errorMessages: computedErrorMessages.value,\n      readonly: props.readonly || !props.manualInput,\n    }))\n\n    const computedInputListeners = computed(() => ({\n      focus: () => {\n        if (props.disabled) { return }\n\n        focusListener()\n\n        if (props.readonly) { return }\n        onFocus()\n        listeners.onFocus()\n      },\n      blur: () => {\n        if (props.disabled) { return }\n\n        blurListener()\n\n        if (props.readonly) { return }\n        onBlur()\n        listeners.onBlur()\n      },\n    }))\n\n    const { t } = useTranslation()\n\n    const inputAttributesComputed = computed(() => ({\n      readonly: props.readonly || !props.manualInput,\n      disabled: props.disabled,\n      tabindex: props.disabled ? -1 : 0,\n      value: valueText.value,\n      ariaLabel: props.label || t('selectedDate'),\n      ariaRequired: props.requiredMark,\n      ariaDisabled: props.disabled,\n      ariaReadOnly: props.readonly,\n      ...validationAriaAttributes.value,\n      ...omit(attrs, ['class', 'style']),\n    }))\n\n    const dropdownPropsComputed = computed(() => ({\n      ...filterComponentProps(VaDropdownProps).value,\n      offset: [2, 0] as DropdownOffsetProp,\n      stateful: false,\n      keyboardNavigation: true,\n      closeOnContentClick: false,\n      innerAnchorSelector: '.va-input-wrapper__field',\n    }))\n\n    return {\n      t,\n      datePicker,\n      valueText,\n      valueWithoutText,\n      valueComputed,\n      isOpenSync,\n      onInputTextChanged,\n\n      isFocused,\n\n      input,\n      inputWrapperProps: computedInputWrapperProps,\n      inputListeners: computedInputListeners,\n      inputAttributesComputed,\n      datePickerProps: filterComponentProps(VaDatePickerProps),\n      dropdownPropsComputed,\n\n      filterSlots,\n      canBeCleared,\n      clearIconProps,\n      iconProps,\n      cursorStyleComputed,\n\n      hideAndFocus,\n      toggleDropdown,\n      showDropdown,\n      focusInputOrPicker,\n      focusDatePicker,\n      reset,\n      focus,\n      blur,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n\n.va-date-input {\n  --va-date-picker-cell-size: 28px;\n\n  min-width: var(--va-date-input-min-width);\n  font-family: var(--va-font-family);\n\n  &__anchor {\n    flex: 1;\n  }\n\n  &__input {\n    &:read-only {\n      cursor: pointer;\n    }\n  }\n\n  &__dropdown-content {\n    display: flex;\n    justify-content: center;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}