{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport const RUTA_SERVIDOR_ALUMNOS = process.env.VUE_APP_RUTA_API_ALUMNOS;\nexport const RUTA_SERVIDOR_LIBROS = process.env.VUE_APP_RUTA_API_LIBROS; //import * as saveAs from 'file-saver';\n\nimport { jsPDF } from 'jspdf';\nimport 'jspdf-autotable';\nexport default {\n  data() {\n    return {\n      fechaInicio: \"\",\n      fechaFin: \"\",\n      estado: -1,\n      solicitudes: [],\n      libros: [],\n      preTitulo: {},\n      solicitudesFiltradas: [],\n      elementosPorPagina: 8,\n      datosPaginados: [],\n      paginaActual: 1,\n      NombreSolicitate: []\n    };\n  },\n\n  mounted() {\n    this.obtenersolicitudes();\n  },\n\n  methods: {\n    imprimirSolicitud(solicitud, nombre) {\n      //crear archivo pdf\n      var doc = new jsPDF();\n      doc.setFontSize(20);\n      doc.text(20, 20, \"Solicitud de prestamo\"); //colocar logo\n\n      doc.addImage;\n      doc.text(180, 20, \"UNO\");\n      doc.setFontSize(12);\n      doc.text(20, 30, \"Nombre: \" + nombre);\n      doc.text(20, 40, \"Codigo de usuario: \" + solicitud.codigoUsuario);\n      doc.text(20, 50, \"Libro: \" + solicitud.titulo);\n      doc.text(20, 60, \"Cantidad: \" + solicitud.cantidad);\n      doc.text(20, 70, \"Fecha de prestamo: \" + solicitud.fechaPrestamo);\n      doc.text(20, 80, \"Fecha de devolucion: \" + solicitud.fechaDevolucion);\n      doc.text(20, 100, \"Firma del alumno:______________________\");\n      doc.text(0, 140, \"----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\");\n      doc.setFontSize(20);\n      doc.text(20, 170, \"Solicitud de prestamo\");\n      doc.text(180, 170, \"UNO\");\n      doc.setFontSize(12);\n      doc.text(20, 180, \"Nombre: \" + nombre);\n      doc.text(20, 190, \"Codigo de usuario: \" + solicitud.codigoUsuario);\n      doc.text(20, 200, \"Libro: \" + solicitud.titulo);\n      doc.text(20, 210, \"Cantidad: \" + solicitud.cantidad);\n      doc.text(20, 220, \"Fecha de prestamo: \" + solicitud.fechaPrestamo);\n      doc.text(20, 230, \"Fecha de devolucion: \" + solicitud.fechaDevolucion);\n      doc.text(20, 250, \"Firma del alumno:______________________\"); // doc.text(20, 90, \"Observacion: \" + solicitud.observacion);\n      // doc.text(20, 100, \"Estado: \" + solicitud.estado);\n      // doc.text(20, 110, \"Subsede: \" + solicitud.subsede);\n      // doc.text(20, 120, \"Telefono: \" + solicitud.telefono);\n\n      doc.save(\"solicitud.pdf\");\n    },\n\n    obtenersolicitudes() {\n      fetch(RUTA_SERVIDOR_LIBROS + \"/prestamo/\" + localStorage.getItem('idSubsede')).then(respuesta => respuesta.json()).then(datosRespuesta => {\n        this.solicitudes = datosRespuesta.reverse();\n      }).then(() => {\n        for (let index = 0; index < this.solicitudes.length; index++) {\n          this.asignarNombre(this.solicitudes[index].codigoUsuario, this.solicitudes[index].id);\n        }\n      }).catch(console.log);\n    },\n\n    asignarNombre(codigoAlumnon, index) {\n      if (this.NombreSolicitate[index] == undefined) {\n        fetch(RUTA_SERVIDOR_ALUMNOS + \"/alumno/\" + codigoAlumnon).then(respuesta => respuesta.json()).then(datosRespuesta => {\n          this.filtrarSolicitudes();\n          this.NombreSolicitate[index] = datosRespuesta.nombre + \" \" + datosRespuesta.ap_paterno + \" \" + datosRespuesta.ap_materno;\n        });\n      } else {\n        return;\n      }\n    },\n\n    filtrarSolicitudes() {\n      if (this.estado == -1) {\n        console.log(this.fechaFin, this.fechaInicio);\n        this.solicitudesFiltradas = this.solicitudes;\n        this.ObtenerDatosPag(1);\n      } else {\n        this.solicitudesFiltradas = [];\n\n        for (let index = 0; index < this.solicitudes.length; index++) {\n          if (this.fechaInicio != \"\" && this.fechaFin != \"\") {\n            if (this.solicitudes[index].estado === parseInt(this.estado) && this.solicitudes[index].fechaPrestamo >= this.fechaInicio && this.solicitudes[index].fechaPrestamo <= this.fechaFin) {\n              this.solicitudesFiltradas.push(this.solicitudes[index]);\n              this.ObtenerDatosPag(1);\n            }\n          } else {\n            if (this.solicitudes[index].estado === parseInt(this.estado)) {\n              console.log(this.solicitudes[index].fechaPrestamo);\n              this.solicitudesFiltradas.push(this.solicitudes[index]);\n              this.ObtenerDatosPag(1);\n            }\n          }\n        }\n\n        if (this.solicitudesFiltradas.length === 0) {\n          this.paginaPrevia();\n        }\n      }\n    },\n\n    totalPaginas() {\n      return Math.ceil(this.solicitudesFiltradas.length / this.elementosPorPagina);\n    },\n\n    ObtenerDatosPag(noPag) {\n      this.paginaActual = noPag;\n      this.datosPaginados = [];\n      let ini = noPag * this.elementosPorPagina - this.elementosPorPagina;\n      let fin = noPag * this.elementosPorPagina;\n      this.datosPaginados = this.solicitudesFiltradas.slice(ini, fin);\n    },\n\n    paginaPrevia() {\n      if (this.paginaActual > 1) {\n        this.paginaActual--;\n      }\n\n      this.ObtenerDatosPag(this.paginaActual);\n    },\n\n    paginaSiguiente() {\n      if (this.paginaActual < this.totalPaginas()) {\n        this.paginaActual++;\n      }\n\n      this.ObtenerDatosPag(this.paginaActual);\n    },\n\n    activo(noPoag) {\n      return noPoag === this.paginaActual ? \"active\" : \"\";\n    },\n\n    eliminarSolicitud(solicitud, nombre) {\n      var valor;\n\n      if (solicitud.estado == 2) {\n        valor = 1;\n      } else {\n        valor = 0;\n      }\n\n      try {\n        axios.put(RUTA_SERVIDOR_LIBROS + \"/prestamos/\" + solicitud.id, {\n          idEmpleado: solicitud.idEmpleado,\n          codigoUsuario: solicitud.codigoUsuario,\n          idLibro: solicitud.idLibro,\n          cantidad: solicitud.cantidad,\n          fechaPrestamo: solicitud.fechaPrestamo,\n          idSubsede: solicitud.idSubsede,\n          fechaDevolucion: solicitud.fechaDevolucion,\n          observacion: \"Prestamo rechazado por el bibliotecario\",\n          estado: 0,\n          activo: 1,\n          telefono: solicitud.telefono\n        }).then(function () {\n          fetch(RUTA_SERVIDOR_LIBROS + \"/libros/\" + solicitud.idLibro).then(respuesta => respuesta.json()).then(datosRespuesta => {\n            {\n              axios.put(RUTA_SERVIDOR_LIBROS + \"/libros/\" + solicitud.idLibro, {\n                titulo: datosRespuesta.titulo,\n                copias: datosRespuesta.copias,\n                copiasDisponibles: datosRespuesta.copiasDisponibles + valor,\n                categoria: datosRespuesta.categoria,\n                edicion: datosRespuesta.edicion,\n                codigo: datosRespuesta.codigo,\n                idAutor: parseInt(datosRespuesta.idAutor),\n                idEmpleado: datosRespuesta.idEmpleado,\n                idEditorial: parseInt(datosRespuesta.idEditorial),\n                idCarrera: parseInt(datosRespuesta.idCarrera),\n                urlPortada: datosRespuesta.urlPortada,\n                observacion: datosRespuesta.observacion,\n                activo: 1\n              }).then(function () {\n                if (solicitud.telefono != null) {\n                  window.open('https://api.whatsapp.com/send?phone=591' + solicitud.telefono + '&text=Hola ' + nombre + ', nos comunicamos desde la Universidad Nacional del Oriente sede ' + localStorage.getItem(\"Subsede\") + ', para informarte que tu solicitus del libro \"' + solicitud.titulo + '\" a sido rechazada, lamentamos este inconveniente y te pedimos que puedas pasar personalmente por la universidad a realizar la solicitud');\n                }\n              }).then(function () {\n                location.reload();\n              }).catch(function (error) {\n                console.log(error);\n              });\n            }\n          }).catch(console.log);\n        });\n      } catch (error) {\n        console.log(error); // console.log(this.libro);\n      }\n    },\n\n    aceptarSolicitud(solicitud, nombre) {\n      try {\n        axios.put(RUTA_SERVIDOR_LIBROS + \"/prestamos/\" + solicitud.id, {\n          idEmpleado: solicitud.idEmpleado,\n          codigoUsuario: solicitud.codigoUsuario,\n          idLibro: solicitud.idLibro,\n          cantidad: solicitud.cantidad,\n          fechaPrestamo: solicitud.fechaPrestamo,\n          idSubsede: solicitud.idSubsede,\n          fechaDevolucion: solicitud.fechaDevolucion,\n          observacion: \"Prestamo aceptado por el bibliotecario\",\n          estado: 2,\n          activo: 1,\n          telefono: solicitud.telefono\n        }).then(function () {\n          fetch(RUTA_SERVIDOR_LIBROS + \"/libros/\" + solicitud.idLibro).then(respuesta => respuesta.json()).then(datosRespuesta => {\n            {\n              axios.put(RUTA_SERVIDOR_LIBROS + \"/libros/\" + solicitud.idLibro, {\n                titulo: datosRespuesta.titulo,\n                copias: datosRespuesta.copias,\n                copiasDisponibles: datosRespuesta.copiasDisponibles - 1,\n                categoria: datosRespuesta.categoria,\n                edicion: datosRespuesta.edicion,\n                codigo: datosRespuesta.codigo,\n                idAutor: parseInt(datosRespuesta.idAutor),\n                idEmpleado: datosRespuesta.idEmpleado,\n                idEditorial: parseInt(datosRespuesta.idEditorial),\n                idCarrera: parseInt(datosRespuesta.idCarrera),\n                urlPortada: datosRespuesta.urlPortada,\n                observacion: datosRespuesta.observacion,\n                activo: 1\n              }).then(function () {\n                if (solicitud.telefono != null) {\n                  window.open('https://api.whatsapp.com/send?phone=591' + solicitud.telefono + '&text=Hola%20' + nombre + ',%20nos%20comunicamos%20de%20la%20Universidad%20Nacional%20del%20Oriente%20sede%20' + localStorage.getItem(\"Subsede\") + ',%20%20para%20informarte%20que%20tu%20solicitud%20por%20el%20libro%20\"' + solicitud.titulo + '\"%20a%20sido%20aprobada,%20ya%20puedes%20pasar%20a%20recoger%20el%20libro.');\n                }\n              }).then(function () {\n                location.reload();\n              }).catch(function (error) {\n                console.log(error);\n              });\n            }\n          }).catch(console.log);\n        });\n      } catch (error) {\n        console.log(error); // console.log(this.libro);\n      }\n    },\n\n    devolverLibro(solicitud) {\n      var estado1 = 0;\n\n      if (solicitud.estado == 3) {\n        estado1 = 4;\n      }\n\n      if (solicitud.estado == 4 || solicitud.estado == 5) {\n        estado1 = 3;\n      }\n\n      axios.put(RUTA_SERVIDOR_LIBROS + \"/prestamos/\" + solicitud.id, {\n        idEmpleado: solicitud.idEmpleado,\n        codigoUsuario: solicitud.codigoUsuario,\n        idLibro: solicitud.idLibro,\n        cantidad: solicitud.cantidad,\n        idSubsede: solicitud.idSubsede,\n        fechaPrestamo: solicitud.fechaPrestamo,\n        fechaDevolucion: solicitud.fechaDevolucion,\n        observacion: \"Libro devulto\",\n        estado: estado1,\n        activo: 1,\n        telefono: solicitud.telefono\n      }).then(function () {\n        if (estado1 == 3) {\n          fetch(RUTA_SERVIDOR_LIBROS + \"/libros/\" + solicitud.idLibro).then(respuesta => respuesta.json()).then(datosRespuesta => {\n            axios.put(RUTA_SERVIDOR_LIBROS + \"/libros/\" + solicitud.idLibro, {\n              titulo: datosRespuesta.titulo,\n              copias: datosRespuesta.copias,\n              copiasDisponibles: datosRespuesta.copiasDisponibles + 1,\n              categoria: datosRespuesta.categoria,\n              edicion: datosRespuesta.edicion,\n              codigo: datosRespuesta.codigo,\n              idAutor: parseInt(datosRespuesta.idAutor),\n              idEmpleado: datosRespuesta.idEmpleado,\n              idEditorial: parseInt(datosRespuesta.idEditorial),\n              idCarrera: parseInt(datosRespuesta.idCarrera),\n              urlPortada: datosRespuesta.urlPortada,\n              observacion: datosRespuesta.observacion,\n              activo: 1\n            }).then(function () {\n              location.reload();\n            }).catch(function (error) {\n              console.log(error);\n            });\n          }).catch(console.log);\n        } else {\n          location.reload();\n        }\n      }).catch(function (error) {\n        console.log(error); // console.log(this.libro);\n      });\n    },\n\n    entregarLibro(solicitud) {\n      try {\n        var estado1 = 0;\n\n        if (solicitud.estado == 4) {\n          estado1 = 2;\n        }\n\n        if (solicitud.estado == 2) {\n          estado1 = 4;\n        }\n\n        axios.put(RUTA_SERVIDOR_LIBROS + \"/prestamos/\" + solicitud.id, {\n          idEmpleado: solicitud.idEmpleado,\n          codigoUsuario: solicitud.codigoUsuario,\n          idLibro: solicitud.idLibro,\n          cantidad: solicitud.cantidad,\n          idSubsede: solicitud.idSubsede,\n          fechaPrestamo: solicitud.fechaPrestamo,\n          fechaDevolucion: solicitud.fechaDevolucion,\n          observacion: \"libro entregado por el bibliotecario\",\n          estado: estado1,\n          activo: 1,\n          telefono: solicitud.telefono\n        }).then(function () {\n          location.reload();\n        });\n      } catch (error) {\n        console.log(error); // console.log(this.libro);\n      }\n    },\n\n    imprimirSolicitudes() {\n      //solicitud en pdf \n      var doc = new jsPDF();\n      var elem = document.getElementById(\"solicitudesTabla\");\n      var res = doc.autoTableHtmlToJson(elem);\n      doc.autoTable(res.columns, res.data, {\n        theme: 'grid',\n        styles: {\n          overflow: 'linebreak',\n          fontSize: 10,\n          rowHeight: 20,\n          font: 'helvetica',\n          fontStyle: 'normal',\n          lineWidth: 0.1,\n          lineColor: [0.5, 0.5, 0.5],\n          fillColor: [255, 255, 255],\n          textColor: 0,\n          halign: 'left',\n          valign: 'middle',\n          cellPadding: 2,\n          cellWidth: 'auto',\n          cellHeight: 'auto',\n          tableWidth: 'auto',\n          tableHeight: 'auto',\n          tablePadding: 5,\n          tableBorder: 1,\n          tableBorderColor: [0, 0, 0],\n          tableBackgroundColor: [255, 255, 255],\n          headerBorder: 0,\n          headerBorderColor: [0, 0, 0],\n          headerBackgroundColor: [255, 255, 255],\n          headerTextColor: 0,\n          headerCellPadding: 5,\n          headerCellWidth: 'auto',\n          headerCellHeight: 'auto',\n          headerFont: 'helvetica',\n          headerFontSize: 10,\n          headerFontStyle: 'bold',\n          headerAlign: 'center',\n          footerBorder: 0,\n          footerBorderColor: [0, 0, 0],\n          footerBackgroundColor: [255, 255, 255],\n          footerTextColor: 0,\n          footerCellPadding: 5,\n          footerCellWidth: 'auto',\n          footerCellHeight: 'auto',\n          footerFont: 'helvetica',\n          footerFontSize: 10,\n          footerFontStyle: 'bold',\n          footerAlign: 'center',\n          columnWidth: 'auto',\n          columnHeight: 'auto',\n          columnPadding: 5,\n          columnBorder: 1,\n          columnBorderColor: [0, 0, 0],\n          columnBackgroundColor: [255, 255, 255],\n          columnTextColor: 0,\n          columnAlign: 'left'\n        },\n        margin: {\n          top: 10,\n          bottom: 10,\n          left: 10,\n          right: 10\n        }\n      });\n      doc.save('solicitudes.pdf');\n    }\n\n  }\n};","map":{"version":3,"mappings":";AAmMA;AACA;AACA,wE,CAEA;;AAEA;AACA;AACA;EACAA;IACA;MACAC,eADA;MAEAC,YAFA;MAGAC,UAHA;MAIAC,eAJA;MAKAC,UALA;MAMAC,aANA;MAQAC,wBARA;MASAC,qBATA;MAUAC,kBAVA;MAWAC,eAXA;MAYAC;IAZA;EAcA,CAhBA;;EAiBAC;IACA;EAEA,CApBA;;EAuBAC;IAEAC;MACA;MACA;MACAC;MACAA,0CAJA,CAKA;;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MAGAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA,6DA7BA,CA8BA;MACA;MACA;MACA;;MACAA;IAEA,CAtCA;;IA0CAC;MACAC,+EACAC,IADA,CACAC,6BADA,EAEAD,IAFA,CAEAE;QACA;MAAA,CAHA,EAIAF,IAJA,CAIA;QACA;UACA;QAEA;MAGA,CAXA,EAYAG,KAZA,CAYAC,WAZA;IAaA,CAxDA;;IA2DAC;MACA;QACAN,0DACAC,IADA,CACAC,6BADA,EAEAD,IAFA,CAEAE;UACA;UACA;QACA,CALA;MAMA,CAPA,MAQA;QACA;MACA;IACA,CAvEA;;IAyEAI;MACA;QACAF;QACA;QACA;MACA,CAJA,MAIA;QACA;;QACA;UACA;YAEA,gEACA,6DACA,sDAFA,EAEA;cAEA;cACA;YACA;UACA,CATA,MAUA;YACA;cACAA;cACA;cACA;YACA;UACA;QAEA;;QACA;UACA;QACA;MACA;IACA,CAxGA;;IAyGAG;MACA,iBACA,0DADA;IAGA,CA7GA;;IA8GAC;MACA;MACA;MACA;MACA;MACA;IAEA,CArHA;;IAwHAC;MACA;QACA;MACA;;MACA;IACA,CA7HA;;IA8HAC;MACA;QACA;MACA;;MACA;IACA,CAnIA;;IAoIAC;MACA;IACA,CAtIA;;IAwIAC;MACA;;MACA;QACAC;MACA,CAFA,MAGA;QACAA;MACA;;MAEA;QACAC,MACAC,GADA,CACAC,mDADA,EACA;UACAC,gCADA;UAEAC,sCAFA;UAGAC,0BAHA;UAIAC,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","names":["data","fechaInicio","fechaFin","estado","solicitudes","libros","preTitulo","solicitudesFiltradas","elementosPorPagina","datosPaginados","paginaActual","NombreSolicitate","mounted","methods","imprimirSolicitud","doc","obtenersolicitudes","fetch","then","respuesta","datosRespuesta","catch","console","asignarNombre","filtrarSolicitudes","totalPaginas","ObtenerDatosPag","paginaPrevia","paginaSiguiente","activo","eliminarSolicitud","valor","axios","put","RUTA_SERVIDOR_LIBROS","idEmpleado","codigoUsuario","idLibro","cantidad","fechaPrestamo","idSubsede","fechaDevolucion","observacion","telefono","titulo","copias","copiasDisponibles","categoria","edicion","codigo","idAutor","idEditorial","idCarrera","urlPortada","window","location","aceptarSolicitud","devolverLibro","estado1","entregarLibro","imprimirSolicitudes","theme","styles","overflow","fontSize","rowHeight","font","fontStyle","lineWidth","lineColor","fillColor","textColor","halign","valign","cellPadding","cellWidth","cellHeight","tableWidth","tableHeight","tablePadding","tableBorder","tableBorderColor","tableBackgroundColor","headerBorder","headerBorderColor","headerBackgroundColor","headerTextColor","headerCellPadding","headerCellWidth","headerCellHeight","headerFont","headerFontSize","headerFontStyle","headerAlign","footerBorder","footerBorderColor","footerBackgroundColor","footerTextColor","footerCellPadding","footerCellWidth","footerCellHeight","footerFont","footerFontSize","footerFontStyle","footerAlign","columnWidth","columnHeight","columnPadding","columnBorder","columnBorderColor","columnBackgroundColor","columnTextColor","columnAlign","margin","top","bottom","left","right"],"sourceRoot":"src/components","sources":["ListasolicitudesAdmin.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"form-group mx-auto\">\n      <label>Seleccione el estado del prestamo</label><br />\n      <select\n        v-model=\"estado\"\n        @change=\"filtrarSolicitudes()\"\n        class=\"custom-select mx-auto\"\n        name=\"\"\n        id=\"\"\n      >\n        <option value=\"-1\">Todos los estados</option>\n        <option value=\"0\">Solicitud rechazada</option>\n        <option value=\"1\">Pendiente de respuesta</option>\n        <option value=\"2\">Solicitud aceptada</option>\n        <option value=\"3\">libro devuelto</option>\n        <option value=\"4\">Pendiente de devolucion</option>\n        <option value=\"5\">Retrasado</option>\n      </select>\n\n    <br>\n    <label>Seleccione el rango de fechas</label><br />\n    <b-row cols=\"2\">\n      \n      <b-col>\n\n       <input\n        type=\"date\"\n        v-model=\"fechaInicio\"\n        @change=\"filtrarSolicitudes()\"\n        class=\"form-control\"\n        name=\"\"\n        id=\"\"\n      />\n    </b-col>\n      <b-col>\n         <input\n        type=\"date\"\n        v-model=\"fechaFin\"\n        @change=\"filtrarSolicitudes()\"\n        class=\"form-control\"\n        name=\"\"\n        id=\"\"\n      />\n \n   </b-col>\n\n  </b-row>\n      \n\n      <button\n       \n        type=\"button\"\n        class=\"btn btn-primary\"\n        @click=\"imprimirSolicitudes()\"\n      >imprimir reporte</button>\n\n    </div>\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>Solicitante</th>\n          <th>Libro solicitado</th>\n          <th>cantidad</th>\n          <th>Fecha de prestamo</th>\n          <th>Fecha de devolucion</th>\n          <th>estado</th>\n          <th>Acción</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"solicitud in datosPaginados\" :key=\"solicitud.id\">\n          <td>{{NombreSolicitate[solicitud.id]}} </td>\n          <td>{{ solicitud.titulo }}</td>\n\n          <td>{{ solicitud.cantidad }}</td>\n          <td>{{ solicitud.fechaPrestamo }}</td>\n          <td>{{ solicitud.fechaDevolucion }}</td>\n          <td>\n            <p v-if=\"solicitud.estado == 0\">\n              Solicitud rechazada\n            </p>\n            <p v-if=\"solicitud.estado == 1\">Pendiente de respuesta</p>\n            <p v-if=\"solicitud.estado == 2\">\n              Solicitud aceptada\n            </p>\n            <p v-if=\"solicitud.estado == 3\">libro devuelto</p>\n            <p v-if=\"solicitud.estado == 4\">Pendiente de devolucion</p>\n            <p v-if=\"solicitud.estado == 5\">Retrasado</p>\n          </td>\n          <td>\n            <a v-if=\"solicitud.estado == 1 ||  solicitud.estado == 2\"\n              @click=\"eliminarSolicitud(solicitud,NombreSolicitate[solicitud.id])\"\n              class=\"btn btn-danger\"\n              role=\"button\"\n              >Denegar</a\n            >\n            <a v-if=\"solicitud.estado == 0 || solicitud.estado == 1\"\n              @click=\"aceptarSolicitud(solicitud,NombreSolicitate[solicitud.id])\"\n              class=\"btn btn-primary\"\n              role=\"button\"\n              >Aceptar</a\n            >\n            \n            <a v-if=\" solicitud.estado == 2 \"\n              @click=\"entregarLibro(solicitud)\"\n              class=\"btn btn-primary\"\n              role=\"button\"\n              >Entregado</a\n            >\n             <a v-if=\"solicitud.estado == 4 || solicitud.estado == 5 \"\n              @click=\"devolverLibro(solicitud)\"\n              class=\"btn btn-primary\"\n              role=\"button\"\n              >Devolucion</a\n            >\n             <a v-if=\"solicitud.estado != 0 \"\n              @click=\"imprimirSolicitud(solicitud,NombreSolicitate[solicitud.id])\"\n              class=\"btn btn-primary\"\n              role=\"button\"\n              >Imp</a\n            >\n          </td>\n          \n        </tr>\n      </tbody>\n    </table>\n    <nav aria-label=\"Page navigation example\">\n      <ul align=\"center\" class=\"pagination\">\n        <li class=\"page-item\" v-on:click=\"paginaPrevia()\">\n          <a class=\"page-link\" href=\"#\">Previous</a>\n        </li>\n        <li\n          v-for=\"pagina in totalPaginas()\"\n          :key=\"pagina\"\n          class=\"page-item\"\n          v-bind:class=\"activo(pagina)\"\n        >\n          <a class=\"page-link\" href=\"#\" v-on:click=\"ObtenerDatosPag(pagina)\">{{\n            pagina\n          }}</a>\n        </li>\n        <li class=\"page-item\" v-on:click=\"paginaSiguiente()\">\n          <a class=\"page-link\" href=\"#\">Next</a>\n        </li>\n      </ul>\n    </nav>\n\n\n\n  <table id=\"solicitudesTabla\" style=\"display:none;\">\n      <thead>\n        <tr>\n          <th>Solicitante</th>\n          <th>Libro solicitado</th>\n          <th>cantidad</th>\n          <th>Fecha de prestamo</th>\n          <th>Fecha de devolucion</th>\n          <th>estado</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"solicitud in solicitudesFiltradas\" :key=\"solicitud.id\">\n          <td>{{NombreSolicitate[solicitud.id]}} </td>\n          <td>{{ solicitud.titulo }}</td>\n\n          <td>{{ solicitud.cantidad }}</td>\n          <td>{{ solicitud.fechaPrestamo }}</td>\n          <td>{{ solicitud.fechaDevolucion }}</td>\n          <td>\n            <p v-if=\"solicitud.estado == 0\">\n              Solicitud rechazada\n            </p>\n            <p v-if=\"solicitud.estado == 1\">Pendiente de respuesta</p>\n            <p v-if=\"solicitud.estado == 2\">\n              Solicitud aceptada\n            </p>\n            <p v-if=\"solicitud.estado == 3\">libro devuelto</p>\n            <p v-if=\"solicitud.estado == 4\">Pendiente de devolucion</p>\n          </td>\n          \n          \n        </tr>\n      </tbody>\n    </table>\n\n\n\n\n\n\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport const RUTA_SERVIDOR_ALUMNOS = process.env.VUE_APP_RUTA_API_ALUMNOS;\nexport const RUTA_SERVIDOR_LIBROS = process.env.VUE_APP_RUTA_API_LIBROS;\n\n//import * as saveAs from 'file-saver';\n\nimport { jsPDF, } from 'jspdf';\nimport  'jspdf-autotable';\nexport default {\n  data() {\n    return {\n      fechaInicio: \"\",\n      fechaFin: \"\",\n      estado: -1,\n      solicitudes: [],\n      libros: [],\n      preTitulo: {},\n      \n      solicitudesFiltradas: [],\n      elementosPorPagina: 8,\n      datosPaginados: [],\n      paginaActual: 1,\n      NombreSolicitate:[],\n    };\n  },\n  mounted() {\n    this.obtenersolicitudes();\n    \n  },\n\n\n  methods: {\n\n    imprimirSolicitud(solicitud,nombre) {\n      //crear archivo pdf\n      var doc = new jsPDF();\n      doc.setFontSize(20);\n      doc.text(20, 20, \"Solicitud de prestamo\");\n      //colocar logo\n      doc.addImage\n       doc.text(180, 20, \"UNO\");\n      doc.setFontSize(12);\n      doc.text(20, 30, \"Nombre: \" + nombre);\n       doc.text(20, 40, \"Codigo de usuario: \" + solicitud.codigoUsuario);\n      doc.text(20, 50, \"Libro: \" + solicitud.titulo);\n      doc.text(20, 60, \"Cantidad: \" + solicitud.cantidad);\n      doc.text(20, 70, \"Fecha de prestamo: \" + solicitud.fechaPrestamo);\n      doc.text(20, 80, \"Fecha de devolucion: \" + solicitud.fechaDevolucion);\n      doc.text(20, 100, \"Firma del alumno:______________________\" );\n      doc.text(0, 140, \"----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\" );\n    \n\n      doc.setFontSize(20);\n      doc.text(20, 170, \"Solicitud de prestamo\");\n      doc.text(180, 170, \"UNO\");\n      doc.setFontSize(12);\n      doc.text(20, 180, \"Nombre: \" + nombre);\n       doc.text(20, 190, \"Codigo de usuario: \" + solicitud.codigoUsuario);\n      doc.text(20, 200, \"Libro: \" + solicitud.titulo);\n      doc.text(20, 210, \"Cantidad: \" + solicitud.cantidad);\n      doc.text(20, 220, \"Fecha de prestamo: \" + solicitud.fechaPrestamo);\n      doc.text(20, 230, \"Fecha de devolucion: \" + solicitud.fechaDevolucion);\n      doc.text(20, 250, \"Firma del alumno:______________________\" );\n      // doc.text(20, 90, \"Observacion: \" + solicitud.observacion);\n      // doc.text(20, 100, \"Estado: \" + solicitud.estado);\n      // doc.text(20, 110, \"Subsede: \" + solicitud.subsede);\n      // doc.text(20, 120, \"Telefono: \" + solicitud.telefono);\n      doc.save(\"solicitud.pdf\");\n\n    },\n\n\n\n    obtenersolicitudes() {\n      fetch(RUTA_SERVIDOR_LIBROS+\"/prestamo/\"+localStorage.getItem('idSubsede'))\n        .then((respuesta) => respuesta.json())\n        .then((datosRespuesta) => {\n          this.solicitudes = datosRespuesta.reverse();})\n        .then(() => {\n           for (let index = 0; index < this.solicitudes.length; index++) {\n       this.asignarNombre(this.solicitudes[index].codigoUsuario,this.solicitudes[index].id)\n       \n      }\n\n      \n        })\n        .catch(console.log);\n    },\n\n\n     asignarNombre(codigoAlumnon,index){\n      if(this.NombreSolicitate[index]==undefined){\n      fetch(RUTA_SERVIDOR_ALUMNOS+\"/alumno/\" + codigoAlumnon)\n      .then((respuesta) => respuesta.json())\n      .then((datosRespuesta) => {\n        this.filtrarSolicitudes();\n        this.NombreSolicitate[index]=(datosRespuesta.nombre + \" \" + datosRespuesta.ap_paterno + \" \" + datosRespuesta.ap_materno);\n      })\n      }\n      else{\n      return \n      }\n    },\n\n    filtrarSolicitudes() {\n      if (this.estado == -1 ) {\n        console.log(this.fechaFin,this.fechaInicio);\n        this.solicitudesFiltradas = this.solicitudes;\n        this.ObtenerDatosPag(1);\n      } else {\n        this.solicitudesFiltradas = [];\n        for (let index = 0; index < this.solicitudes.length; index++) {\n          if(this.fechaInicio!=\"\" && this.fechaFin!=\"\"){\n\n          if (this.solicitudes[index].estado === parseInt(this.estado)\n            &&  (this.solicitudes[index].fechaPrestamo >= this.fechaInicio\n            &&  this.solicitudes[index].fechaPrestamo <= this.fechaFin)) {\n          \n            this.solicitudesFiltradas.push(this.solicitudes[index]);\n            this.ObtenerDatosPag(1);\n          }\n          }\n          else{\n            if (this.solicitudes[index].estado === parseInt(this.estado)) {\n              console.log(this.solicitudes[index].fechaPrestamo);\n            this.solicitudesFiltradas.push(this.solicitudes[index]);\n            this.ObtenerDatosPag(1);\n          }\n          }\n          \n        }\n        if (this.solicitudesFiltradas.length === 0) {\n          this.paginaPrevia();\n        }\n      }\n    },\n    totalPaginas() {\n      return Math.ceil(\n        this.solicitudesFiltradas.length / this.elementosPorPagina\n      );\n    },\n    ObtenerDatosPag(noPag) {\n      this.paginaActual = noPag;\n      this.datosPaginados = [];\n      let ini = noPag * this.elementosPorPagina - this.elementosPorPagina;\n      let fin = noPag * this.elementosPorPagina;\n      this.datosPaginados = this.solicitudesFiltradas.slice(ini, fin);\n  \n    },\n\n\n    paginaPrevia() {\n      if (this.paginaActual > 1) {\n        this.paginaActual--;\n      }\n      this.ObtenerDatosPag(this.paginaActual);\n    },\n    paginaSiguiente() {\n      if (this.paginaActual < this.totalPaginas()) {\n        this.paginaActual++;\n      }\n      this.ObtenerDatosPag(this.paginaActual);\n    },\n    activo(noPoag) {\n      return noPoag === this.paginaActual ? \"active\" : \"\";\n    },\n\n    eliminarSolicitud(solicitud,nombre) {\n  var valor;\n  if(solicitud.estado==2){\n    valor=1;\n  }\n  else{\n    valor=0;\n  }\n      \n     try {\n      axios\n        .put(RUTA_SERVIDOR_LIBROS+\"/prestamos/\" + solicitud.id, {\n          idEmpleado: solicitud.idEmpleado,\n          codigoUsuario: solicitud.codigoUsuario,\n          idLibro: solicitud.idLibro,\n          cantidad: solicitud.cantidad,\n          fechaPrestamo: solicitud.fechaPrestamo,\n          idSubsede:solicitud.idSubsede,\n          fechaDevolucion: solicitud.fechaDevolucion,\n          observacion: \"Prestamo rechazado por el bibliotecario\",\n          estado: 0,\n          activo: 1,\n          telefono:solicitud.telefono,\n        })\n      .then(function () {\n\n\n            fetch(RUTA_SERVIDOR_LIBROS+\"/libros/\"+ solicitud.idLibro)\n        .then((respuesta) => respuesta.json())\n        .then((datosRespuesta) => {\n          {\n            \n            axios\n                  .put(RUTA_SERVIDOR_LIBROS+\"/libros/\" + solicitud.idLibro, {\n                    titulo:datosRespuesta.titulo,\n                    copias: datosRespuesta.copias,\n                    \n                    copiasDisponibles: datosRespuesta.copiasDisponibles + valor,\n                    categoria: datosRespuesta.categoria,\n                    edicion: datosRespuesta.edicion,\n                    codigo: datosRespuesta.codigo,\n                    idAutor: parseInt(datosRespuesta.idAutor),\n                    idEmpleado: datosRespuesta.idEmpleado,\n                    idEditorial: parseInt(datosRespuesta.idEditorial),\n                    idCarrera: parseInt(datosRespuesta.idCarrera),\n                    urlPortada: datosRespuesta.urlPortada,\n                    observacion: datosRespuesta.observacion,\n                    activo: 1,\n                  })\n                  .then(function () {\n                    if(solicitud.telefono!=null){\n          window.open ('https://api.whatsapp.com/send?phone=591'+solicitud.telefono+'&text=Hola '+nombre+', nos comunicamos desde la Universidad Nacional del Oriente sede '+localStorage.getItem(\"Subsede\") +', para informarte que tu solicitus del libro \"'+solicitud.titulo+'\" a sido rechazada, lamentamos este inconveniente y te pedimos que puedas pasar personalmente por la universidad a realizar la solicitud'); \n        }\n        })\n        .then(function () {\n          location.reload();\n          \n        })\n\n                  .catch(function (error) {\n                    console.log(error);\n                  \n                  });\n\n          }\n        })\n        .catch(console.log);\n  \n          \n    }\n        )}\n\n        catch( error) {\n          console.log(error);\n          // console.log(this.libro);\n        }\n    },\n\n    aceptarSolicitud(solicitud,nombre) {\n    \n   \n    try {\n      axios\n        .put(RUTA_SERVIDOR_LIBROS+\"/prestamos/\" + solicitud.id, {\n          idEmpleado: solicitud.idEmpleado,\n          codigoUsuario: solicitud.codigoUsuario,\n          idLibro: solicitud.idLibro,\n          cantidad: solicitud.cantidad,\n          fechaPrestamo: solicitud.fechaPrestamo,\n          idSubsede:solicitud.idSubsede,\n          fechaDevolucion: solicitud.fechaDevolucion,\n          observacion: \"Prestamo aceptado por el bibliotecario\",\n          estado: 2,\n          activo: 1,\n          telefono:solicitud.telefono,\n        })\n        .then(function () {\n\n\n            fetch(RUTA_SERVIDOR_LIBROS+\"/libros/\"+ solicitud.idLibro)\n        .then((respuesta) => respuesta.json())\n        .then((datosRespuesta) => {\n          {\n            axios\n                  .put(RUTA_SERVIDOR_LIBROS+\"/libros/\" + solicitud.idLibro, {\n                    titulo:datosRespuesta.titulo,\n                    copias: datosRespuesta.copias,\n                    copiasDisponibles: datosRespuesta.copiasDisponibles - 1,\n                    categoria: datosRespuesta.categoria,\n                    edicion: datosRespuesta.edicion,\n                    codigo: datosRespuesta.codigo,\n                    idAutor: parseInt(datosRespuesta.idAutor),\n                    idEmpleado: datosRespuesta.idEmpleado,\n                    idEditorial: parseInt(datosRespuesta.idEditorial),\n                    idCarrera: parseInt(datosRespuesta.idCarrera),\n                    urlPortada: datosRespuesta.urlPortada,\n                    observacion: datosRespuesta.observacion,\n                    activo: 1,\n                  })\n                  .then(function () {\n                    if(solicitud.telefono!=null){\n          window.open ('https://api.whatsapp.com/send?phone=591'+solicitud.telefono+'&text=Hola%20'+nombre+',%20nos%20comunicamos%20de%20la%20Universidad%20Nacional%20del%20Oriente%20sede%20'+localStorage.getItem(\"Subsede\") +',%20%20para%20informarte%20que%20tu%20solicitud%20por%20el%20libro%20\"'+solicitud.titulo+'\"%20a%20sido%20aprobada,%20ya%20puedes%20pasar%20a%20recoger%20el%20libro.'); \n          }\n        })\n        .then(function () {\n          location.reload();\n          \n        })\n\n                  .catch(function (error) {\n                    console.log(error);\n                  \n                  });\n\n          }\n        })\n        .catch(console.log);\n  \n          \n    }\n        )}\n\n        catch( error) {\n          console.log(error);\n          // console.log(this.libro);\n        }\n    },\n\n\n    devolverLibro(solicitud) {\n      var estado1=0;\n       if(solicitud.estado==3){\n        estado1=4\n       }\n       if(solicitud.estado==4 || solicitud.estado==5){\n        estado1=3\n       }\n      axios\n        .put(RUTA_SERVIDOR_LIBROS+\"/prestamos/\" + solicitud.id, {\n          idEmpleado: solicitud.idEmpleado,\n          codigoUsuario: solicitud.codigoUsuario,\n          idLibro: solicitud.idLibro,\n          cantidad: solicitud.cantidad,\n          idSubsede:solicitud.idSubsede,\n          fechaPrestamo: solicitud.fechaPrestamo,\n          fechaDevolucion: solicitud.fechaDevolucion,\n          observacion: \"Libro devulto\",\n          estado: estado1,\n          activo: 1,\n          telefono:solicitud.telefono,\n        })\n        .then(function () {\n          if(estado1==3){\n            \n            fetch(RUTA_SERVIDOR_LIBROS+\"/libros/\"+ solicitud.idLibro)\n        .then((respuesta) => respuesta.json())\n        .then((datosRespuesta) => {\n          \n            axios\n                  .put(RUTA_SERVIDOR_LIBROS+\"/libros/\" + solicitud.idLibro, {\n                    titulo:datosRespuesta.titulo,\n                    copias: datosRespuesta.copias,\n                    copiasDisponibles: datosRespuesta.copiasDisponibles + 1,\n                    categoria: datosRespuesta.categoria,\n                    edicion: datosRespuesta.edicion,\n                    codigo: datosRespuesta.codigo,\n                    idAutor: parseInt(datosRespuesta.idAutor),\n                    idEmpleado: datosRespuesta.idEmpleado,\n                    idEditorial: parseInt(datosRespuesta.idEditorial),\n                    idCarrera: parseInt(datosRespuesta.idCarrera),\n                    urlPortada: datosRespuesta.urlPortada,\n                    observacion: datosRespuesta.observacion,\n                    activo: 1,\n                  })\n            \n        .then(function () {\n          location.reload();\n          \n        })\n\n                  .catch(function (error) {\n                    console.log(error);\n                  \n                  });\n\n          \n        })\n        .catch(console.log);\n  \n          \n          }else{location.reload();}\n        })\n        .catch(function (error) {\n          console.log(error);\n          // console.log(this.libro);\n        });\n    },\n\n    entregarLibro(solicitud,) {\n  \n     try {\n       var estado1=0;\n       if(solicitud.estado==4){\n        estado1=2\n       }\n       if(solicitud.estado==2){\n        estado1=4\n       }\n      axios\n        .put(RUTA_SERVIDOR_LIBROS+\"/prestamos/\" + solicitud.id, {\n          idEmpleado: solicitud.idEmpleado,\n          codigoUsuario: solicitud.codigoUsuario,\n          idLibro: solicitud.idLibro,\n          cantidad: solicitud.cantidad,\n          idSubsede:solicitud.idSubsede,\n          fechaPrestamo: solicitud.fechaPrestamo,\n          fechaDevolucion: solicitud.fechaDevolucion,\n          observacion: \"libro entregado por el bibliotecario\",\n          estado: estado1,\n          activo: 1,\n          telefono:solicitud.telefono,\n        })\n        .then(function () {\n          location.reload();\n          \n        })\n    }\n        catch( error) {\n          console.log(error);\n          // console.log(this.libro);\n        }\n    },\n    imprimirSolicitudes(){\n      //solicitud en pdf \n      var doc = new jsPDF();\n      var elem = document.getElementById(\"solicitudesTabla\");\n      var res = doc.autoTableHtmlToJson(elem);\n      doc.autoTable(res.columns, res.data, {\n        theme: 'grid',\n        styles: {\n          overflow: 'linebreak',\n          fontSize: 10,\n          rowHeight: 20,\n          font: 'helvetica',\n          fontStyle: 'normal',\n          lineWidth: 0.1,\n          lineColor: [0.5, 0.5, 0.5],\n          fillColor: [255, 255, 255],\n          textColor: 0,\n          halign: 'left',\n          valign: 'middle',\n          cellPadding: 2,\n          cellWidth: 'auto',\n          cellHeight: 'auto',\n          tableWidth: 'auto',\n          tableHeight: 'auto',\n          tablePadding: 5,\n          tableBorder: 1,\n          tableBorderColor: [0, 0, 0],\n          tableBackgroundColor: [255, 255, 255],\n          headerBorder: 0,\n          headerBorderColor: [0, 0, 0],\n          headerBackgroundColor: [255, 255, 255],\n          headerTextColor: 0,\n          headerCellPadding: 5,\n          headerCellWidth: 'auto',\n          headerCellHeight: 'auto',\n          headerFont: 'helvetica',\n          headerFontSize: 10,\n          headerFontStyle: 'bold',\n          headerAlign: 'center',\n          footerBorder: 0,\n          footerBorderColor: [0, 0, 0],\n          footerBackgroundColor: [255, 255, 255],\n          footerTextColor: 0,\n          footerCellPadding: 5,\n          footerCellWidth: 'auto',\n          footerCellHeight: 'auto',\n          footerFont: 'helvetica',\n          footerFontSize: 10,\n          footerFontStyle: 'bold',\n          footerAlign: 'center',\n          columnWidth: 'auto',\n          columnHeight: 'auto',\n          columnPadding: 5,\n          columnBorder: 1,\n          columnBorderColor: [0, 0, 0],\n          columnBackgroundColor: [255, 255, 255],\n          columnTextColor: 0,\n          columnAlign: 'left'\n        },\n        margin: {\n          top: 10,\n          bottom: 10,\n          left: 10,\n          right: 10\n        }\n      });\n      doc.save('solicitudes.pdf');\n    }\n    \n  }\n  \n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module"}