{"ast":null,"code":"import { u as useComponentPresetProp } from \"../../composables/useComponentPreset.js\";\nimport { defineComponent, shallowRef, ref, computed, onMounted, onBeforeUnmount, openBlock, createElementBlock, normalizeStyle, createElementVNode, renderSlot } from \"vue\";\nimport { _ as _export_sfc } from \"../../../plugin-vue_export-helper.js\";\n\nvar VaParallax_vue_vue_type_style_index_0_lang = /* @__PURE__ */(() => \":root{--va-parallax-display: block;--va-parallax-width: auto;--va-parallax-z-index: 0;--va-parallax-image-container-contain: strict;--va-parallax-image-container-user-select: none;--va-parallax-image-will-change: transform;--va-parallax-image-transition: .3s opacity linear}.va-parallax{display:var(--va-parallax-display);position:relative;overflow:hidden;width:var(--va-parallax-width);z-index:var(--va-parallax-z-index);font-family:var(--va-font-family)}.va-parallax__image-container{position:absolute;top:0;left:0;right:0;bottom:0;z-index:1;contain:var(--va-parallax-image-container-contain);-webkit-user-select:var(--va-parallax-image-container-user-select);-moz-user-select:var(--va-parallax-image-container-user-select);-ms-user-select:var(--va-parallax-image-container-user-select);user-select:var(--va-parallax-image-container-user-select)}.va-parallax__image{position:absolute;bottom:0;left:50%;min-width:100%;min-height:100%;display:none;transform:translate(-50%);will-change:var(--va-parallax-image-will-change);transition:var(--va-parallax-image-transition);z-index:1}.va-parallax__item-container{position:absolute;top:0;left:0;right:0;bottom:0;z-index:2;contain:strict}\\n\")();\n\nconst _sfc_main = defineComponent({\n  name: \"VaParallax\",\n  props: { ...useComponentPresetProp,\n    target: {\n      type: [Object, String]\n    },\n    src: {\n      type: String,\n      default: \"\",\n      required: true\n    },\n    alt: {\n      type: String,\n      default: \"parallax\"\n    },\n    height: {\n      type: Number,\n      default: 400\n    },\n    reversed: {\n      type: Boolean,\n      default: false\n    },\n    speed: {\n      type: Number,\n      default: 0.5,\n      validator: value => value >= 0 && value <= 1\n    }\n  },\n\n  setup(props) {\n    const rootElement = shallowRef();\n    const img = shallowRef();\n    const elOffsetTop = ref(0);\n    const parallax = ref(0);\n    const parallaxDist = ref(0);\n    const percentScrolled = ref(0);\n    const scrollTop = ref(0);\n    const windowHeight = ref(0);\n    const windowBottom = ref(0);\n    const isLoaded = ref(false);\n    const computedWrapperStyles = computed(() => ({\n      height: props.height + \"px\"\n    }));\n    const computedImgStyles = computed(() => ({\n      display: \"block\",\n      transform: `translate(-50%, ${parallax.value}px)`,\n      opacity: isLoaded.value ? 1 : 0,\n      top: props.reversed ? 0 : \"auto\"\n    }));\n    const targetElement = computed(() => {\n      var _a;\n\n      if (!props.target) {\n        return getScrollableParent((_a = rootElement.value) == null ? void 0 : _a.parentElement);\n      }\n\n      if (props.target instanceof HTMLElement) {\n        return props.target;\n      }\n\n      const element = document.querySelector(props.target);\n\n      if (element) {\n        return element;\n      }\n\n      return null;\n    });\n\n    const getScrollableParent = element => {\n      if (!element) {\n        return document.body;\n      }\n\n      if (element.scrollHeight > element.clientHeight) {\n        return element;\n      }\n\n      return getScrollableParent(element.parentElement);\n    };\n\n    const imgHeight = computed(() => {\n      var _a;\n\n      return ((_a = img.value) == null ? void 0 : _a.naturalHeight) || 0;\n    });\n\n    const calcDimensions = () => {\n      var _a, _b;\n\n      const offset = ((_a = rootElement.value) == null ? void 0 : _a.getBoundingClientRect()) || {\n        top: 0\n      };\n      scrollTop.value = ((_b = targetElement.value) == null ? void 0 : _b.scrollTop) || 0;\n      parallaxDist.value = imgHeight.value - props.height;\n      elOffsetTop.value = offset.top + scrollTop.value;\n      windowHeight.value = window.innerHeight;\n      windowBottom.value = scrollTop.value + windowHeight.value;\n    };\n\n    const translate = () => {\n      calcDimensions();\n      percentScrolled.value = (windowBottom.value - elOffsetTop.value) / (props.height + windowHeight.value);\n      parallax.value = Math.round(parallaxDist.value * percentScrolled.value) * props.speed;\n\n      if (props.reversed) {\n        parallax.value = -parallax.value;\n      }\n    };\n\n    const addEventListeners = () => {\n      var _a, _b;\n\n      (_a = targetElement.value) == null ? void 0 : _a.addEventListener(\"scroll\", translate);\n      (_b = targetElement.value) == null ? void 0 : _b.addEventListener(\"resize\", translate);\n    };\n\n    const removeEventListeners = () => {\n      var _a, _b;\n\n      (_a = targetElement.value) == null ? void 0 : _a.removeEventListener(\"scroll\", translate);\n      (_b = targetElement.value) == null ? void 0 : _b.removeEventListener(\"resize\", translate);\n    };\n\n    const initImage = () => {\n      var _a, _b;\n\n      if ((_a = img.value) == null ? void 0 : _a.complete) {\n        translate();\n        addEventListeners();\n      } else {\n        (_b = img.value) == null ? void 0 : _b.addEventListener(\"load\", () => {\n          translate();\n          addEventListeners();\n        }, false);\n      }\n\n      isLoaded.value = true;\n    };\n\n    onMounted(initImage);\n    onBeforeUnmount(removeEventListeners);\n    return {\n      img,\n      rootElement,\n      computedWrapperStyles,\n      computedImgStyles\n    };\n  }\n\n});\n\nconst _hoisted_1 = {\n  class: \"va-parallax__image-container\"\n};\nconst _hoisted_2 = [\"src\", \"alt\"];\nconst _hoisted_3 = {\n  class: \"va-parallax__item-container\"\n};\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", {\n    ref: \"rootElement\",\n    class: \"va-parallax\",\n    style: normalizeStyle(_ctx.computedWrapperStyles)\n  }, [createElementVNode(\"div\", _hoisted_1, [createElementVNode(\"img\", {\n    ref: \"img\",\n    class: \"va-parallax__image\",\n    src: _ctx.$props.src,\n    alt: _ctx.$props.alt,\n    style: normalizeStyle(_ctx.computedImgStyles)\n  }, null, 12, _hoisted_2)]), createElementVNode(\"div\", _hoisted_3, [renderSlot(_ctx.$slots, \"default\")])], 4);\n}\n\nvar _VaParallax = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { _VaParallax as _ };\nimport './VaParallax.css';","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","name","props","useComponentPresetProp","target","type","Object","String","src","default","required","alt","height","Number","reversed","Boolean","speed","validator","value","setup","rootElement","shallowRef","img","ref","computed","display","transform","parallax","opacity","isLoaded","top","parentElement","HTMLElement","element","document","querySelector","body","scrollHeight","clientHeight","imgHeight","naturalHeight","calcDimensions","offset","getBoundingClientRect","scrollTop","parallaxDist","elOffsetTop","windowHeight","window","innerHeight","windowBottom","translate","percentScrolled","Math","round","addEventListeners","addEventListener","removeEventListeners","removeEventListener","initImage","complete","onMounted","onBeforeUnmount","computedWrapperStyles","computedImgStyles","class","_createElementBlock","style","_normalizeStyle","_ctx","_createElementVNode","$props","_hoisted_2","_renderSlot"],"sources":["../../../../../src/components/va-parallax/VaParallax.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"rootElement\"\n    class=\"va-parallax\"\n    :style=\"computedWrapperStyles\"\n  >\n    <div class=\"va-parallax__image-container\">\n      <img\n        ref=\"img\"\n        class=\"va-parallax__image\"\n        :src=\"$props.src\"\n        :alt=\"$props.alt\"\n        :style=\"computedImgStyles\"\n      />\n    </div>\n    <div class=\"va-parallax__item-container\">\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { useComponentPresetProp } from '../../composables/useComponentPreset'\nimport { defineComponent, PropType, ref, computed, onMounted, onBeforeUnmount, shallowRef } from 'vue'\nimport { warn } from '../../utils/console'\n\nexport default defineComponent({\n  name: 'VaParallax',\n  props: {\n    ...useComponentPresetProp,\n    target: { type: [Object, String] as PropType<HTMLElement | string | undefined> },\n    src: { type: String, default: '', required: true },\n    alt: { type: String, default: 'parallax' },\n    height: { type: Number, default: 400 },\n    reversed: { type: Boolean, default: false },\n    speed: {\n      type: Number,\n      default: 0.5,\n      validator: (value: number) => value >= 0 && value <= 1,\n    },\n  },\n  setup (props) {\n    const rootElement = shallowRef<HTMLElement>()\n    const img = shallowRef<HTMLImageElement>()\n\n    const elOffsetTop = ref(0)\n    const parallax = ref(0)\n    const parallaxDist = ref(0)\n    const percentScrolled = ref(0)\n    const scrollTop = ref(0)\n    const windowHeight = ref(0)\n    const windowBottom = ref(0)\n    const isLoaded = ref(false)\n\n    const computedWrapperStyles = computed(() => ({ height: props.height + 'px' }))\n\n    const computedImgStyles = computed(() => ({\n      display: 'block',\n      transform: `translate(-50%, ${parallax.value}px)`,\n      opacity: isLoaded.value ? 1 : 0,\n      top: props.reversed ? 0 : 'auto',\n    }))\n\n    const targetElement = computed(() => {\n      if (!props.target) {\n        return getScrollableParent(rootElement.value?.parentElement)\n      }\n\n      if (props.target instanceof HTMLElement) { // there is a bug if to target passed ref\n        return props.target\n      }\n\n      const element = document.querySelector(props.target)\n\n      if (element) { return element }\n\n      warn('VaParallax target prop got wrong selector. Target is null')\n      return null\n    })\n\n    const getScrollableParent = (element?: HTMLElement | null): HTMLElement | null => {\n      if (!element) {\n        return document.body\n      }\n\n      if (element.scrollHeight > element.clientHeight) {\n        return element\n      }\n\n      return getScrollableParent(element.parentElement)\n    }\n\n    const imgHeight = computed(() => img.value?.naturalHeight || 0)\n\n    const calcDimensions = () => {\n      const offset = rootElement.value?.getBoundingClientRect() || { top: 0 }\n\n      scrollTop.value = targetElement.value?.scrollTop || 0\n      parallaxDist.value = imgHeight.value - props.height\n      elOffsetTop.value = offset.top + scrollTop.value\n      windowHeight.value = window.innerHeight\n      windowBottom.value = scrollTop.value + windowHeight.value\n    }\n\n    const translate = () => {\n      calcDimensions()\n\n      percentScrolled.value = (windowBottom.value - elOffsetTop.value) / (props.height + windowHeight.value)\n\n      parallax.value = Math.round(parallaxDist.value * percentScrolled.value) * props.speed\n\n      if (props.reversed) {\n        parallax.value = -parallax.value\n      }\n    }\n\n    const addEventListeners = () => {\n      targetElement.value?.addEventListener('scroll', translate)\n      targetElement.value?.addEventListener('resize', translate)\n    }\n\n    const removeEventListeners = () => {\n      targetElement.value?.removeEventListener('scroll', translate)\n      targetElement.value?.removeEventListener('resize', translate)\n    }\n\n    const initImage = () => {\n      if (img.value?.complete) {\n        translate()\n        addEventListeners()\n      } else {\n        img.value?.addEventListener('load', () => {\n          translate()\n          addEventListeners()\n        }, false)\n      }\n\n      isLoaded.value = true\n    }\n\n    onMounted(initImage)\n    onBeforeUnmount(removeEventListeners)\n\n    return {\n      img,\n      rootElement,\n      computedWrapperStyles,\n      computedImgStyles,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-parallax {\n  display: var(--va-parallax-display);\n  position: relative;\n  overflow: hidden;\n  width: var(--va-parallax-width);\n  z-index: var(--va-parallax-z-index);\n  font-family: var(--va-font-family);\n\n  &__image-container {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: 1;\n    contain: var(--va-parallax-image-container-contain);\n    user-select: var(--va-parallax-image-container-user-select);\n  }\n\n  &__image {\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    min-width: 100%;\n    min-height: 100%;\n    display: none;\n    transform: translate(-50%, 0);\n    will-change: var(--va-parallax-image-will-change);\n    transition: var(--va-parallax-image-transition);\n    z-index: 1;\n  }\n\n  &__item-container {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: 2;\n    contain: strict;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}