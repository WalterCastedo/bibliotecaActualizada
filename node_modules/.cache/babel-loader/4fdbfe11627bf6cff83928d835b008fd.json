{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { shallowRef, ref, onMounted, onBeforeUnmount } from \"vue\";\n\nfunction getTargetElement(target) {\n  if (!target) {\n    throw new Error(\"No target was provided for `useScroll` hook!\");\n  }\n\n  return typeof target === \"string\" ? document.querySelector(target) : target;\n}\n\nfunction setupScroll(fixed, target) {\n  const scrollRoot = shallowRef();\n  let targetElement;\n  const isScrolledDown = ref(false);\n  const prevScrollPosition = ref(0);\n\n  const onScroll = e => {\n    const target2 = e.target;\n    const scrollValue = e.target instanceof Window ? target2.scrollY : target2.scrollTop;\n    isScrolledDown.value = prevScrollPosition.value < scrollValue;\n    prevScrollPosition.value = scrollValue;\n  };\n\n  onMounted(() => {\n    targetElement = fixed ? window : getTargetElement(target || scrollRoot.value);\n    targetElement == null ? void 0 : targetElement.addEventListener(\"scroll\", onScroll, fixed);\n  });\n  onBeforeUnmount(() => {\n    targetElement == null ? void 0 : targetElement.removeEventListener(\"scroll\", onScroll);\n  });\n  return {\n    scrollRoot,\n    isScrolledDown\n  };\n}\n\nexport { setupScroll as s };","map":{"version":3,"mappings":";;;AAEA,0BAA2BA,MAA3B,EAAqE;EACnE,IAAI,CAACA,MAAL,EAAa;IAAQ,UAAIC,KAAJ,CAAU,8CAAV;EAA0D;;EAC/E,OAAO,OAAOD,MAAP,KAAkB,QAAlB,GAA6BE,SAASC,aAAT,CAAuBH,MAAvB,CAA7B,GAA6EA,MAApF;AACF;;AAEO,qBAAsBI,KAAtB,EAAuCJ,MAAvC,EAAsE;EAC3E,MAAMK,aAAaC,YAAnB;EACI;EAEE,uBAAiBC,IAAI,KAAJ,CAAjB;EACA,2BAAqBA,IAAI,CAAJ,CAArB;;EAEA,iBAAYC,CAAD,IAAc;IAC7B,MAAMC,UAASD,EAAER,MAAjB;IAEA,MAAMU,cAAcF,EAAER,MAAF,YAAoBW,MAApB,GAA6BF,QAAOG,OAApC,GAA8CH,QAAOI,SAAzE;IAEeC,uBAAQC,mBAAmBC,KAAnB,GAA2BN,WAAnC;IACfK,mBAAmBC,KAAnB,GAA2BN,WAA3B;EAA2B,CANvB;;EASNO,UAAU,MAAM;IACdC,gBAAgBd,QAAQe,MAAR,GAAiBC,iBAAiBpB,UAAUK,WAAWW,KAAtC,CAAjC;IACeE,gEAAiB,QAAjB,EAA2BG,QAA3B,EAAqCjB,KAArC;EAChB,CAHD;EAKAkB,gBAAgB,MAAM;IACLJ,mEAAoB,QAApB,EAA8BG,QAA9B;EAChB,CAFD;EAIO;IAAEhB,UAAF;IAAcS;EAAd;AACT","names":["target","Error","document","querySelector","fixed","scrollRoot","shallowRef","ref","e","target2","scrollValue","Window","scrollY","scrollTop","isScrolledDown","prevScrollPosition","value","onMounted","targetElement","window","getTargetElement","onScroll","onBeforeUnmount"],"sources":["../../../../src/composables/useScroll.ts"],"sourcesContent":["import { onMounted, onBeforeUnmount, ref, shallowRef } from 'vue'\n\nfunction getTargetElement (target: HTMLElement | string | undefined) {\n  if (!target) { throw new Error('No target was provided for `useScroll` hook!') }\n  return typeof target === 'string' ? document.querySelector(target) as HTMLElement : target\n}\n\nexport function setupScroll (fixed?: boolean, target?: HTMLElement | string) {\n  const scrollRoot = shallowRef<HTMLElement>()\n  let targetElement: HTMLElement | Window | undefined\n\n  const isScrolledDown = ref(false)\n  const prevScrollPosition = ref(0)\n\n  const onScroll = (e: Event) => {\n    const target = e.target as HTMLElement | Window\n    // @ts-ignore\n    const scrollValue = e.target instanceof Window ? target.scrollY : target.scrollTop\n\n    isScrolledDown.value = prevScrollPosition.value < scrollValue\n    prevScrollPosition.value = scrollValue\n  }\n\n  onMounted(() => {\n    targetElement = fixed ? window : getTargetElement(target || scrollRoot.value)\n    targetElement?.addEventListener('scroll', onScroll, fixed)\n  })\n\n  onBeforeUnmount(() => {\n    targetElement?.removeEventListener('scroll', onScroll)\n  })\n\n  return { scrollRoot, isScrolledDown }\n}\n"]},"metadata":{},"sourceType":"module"}