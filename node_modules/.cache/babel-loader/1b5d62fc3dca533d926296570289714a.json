{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { shallowReactive, computed } from \"vue\";\nimport { u as uniqueId_1 } from \"../../vendor.js\";\nconst modalsStack = shallowReactive([]);\n\nconst useModalLevel = () => {\n  const modalId = uniqueId_1();\n  const modalLevel = computed(() => modalsStack.findIndex(({\n    id\n  }) => id === modalId));\n\n  const registerModal = () => {\n    if (modalLevel.value !== -1) {\n      return;\n    }\n\n    modalsStack.push({\n      id: modalId\n    });\n  };\n\n  const unregisterModal = () => {\n    if (modalLevel.value === -1) {\n      return;\n    }\n\n    modalsStack.splice(modalLevel.value, 1);\n  };\n\n  const isTopLevelModal = computed(() => modalLevel.value !== -1 && modalLevel.value === modalsStack.length - 1);\n  const isLowestLevelModal = computed(() => modalLevel.value === 0);\n  const isMoreThenOneModalOpen = computed(() => modalsStack.length > 1);\n  return {\n    modalId,\n    modalLevel,\n    registerModal,\n    unregisterModal,\n    isTopLevelModal,\n    isLowestLevelModal,\n    isMoreThenOneModalOpen\n  };\n};\n\nexport { useModalLevel as u };","map":{"version":3,"mappings":";;;AAQA,MAAMA,cAAcC,gBAAgC,EAAhC,CAApB;;AAEO,MAAMC,gBAAgB,MAAM;EACjC,MAAMC,UAAUC,YAAhB;EACM,mBAAaC,SAAS,MAC1BL,YAAYM,SAAZ,CAAsB,CAAC;IAAEC;EAAF,CAAD,KAAYA,OAAOJ,OAAzC,CADiB,CAAb;;EAGN,MAAMK,gBAAgB,MAAM;IACtB,eAAWC,KAAX,KAAqB,EAArB,EAAyB;MAC3B;IACF;;IAEAT,YAAYU,IAAZ,CAAiB;MACfH,IAAIJ;IADW,CAAjB;EAEC,CAPH;;EASA,MAAMQ,kBAAkB,MAAM;IACxB,eAAWF,KAAX,KAAqB,EAArB,EAAyB;MAC3B;IACF;;IAEYT,mBAAOY,WAAWH,KAAlB,EAAyB,CAAzB;EAA0B,CALxC;;EAQM,wBAAkBJ,SACtB,MAAMO,WAAWH,KAAX,KAAqB,EAArB,IAA2BG,WAAWH,KAAX,KAAqBT,YAAYa,MAAZ,GAAqB,CADrD,CAAlB;EAGN,MAAMC,qBAAqBT,SACzB,MAAMO,WAAWH,KAAX,KAAqB,CADF,CAA3B;EAGA,MAAMM,yBAAyBV,SAAS,MAAML,YAAYa,MAAZ,GAAqB,CAApC,CAA/B;EAEO;IACLV,OADK;IAELS,UAFK;IAGLJ,aAHK;IAILG,eAJK;IAKLK,eALK;IAMLF,kBANK;IAOLC;EAPK;AAST,CAvCO","names":["modalsStack","shallowReactive","useModalLevel","modalId","uniqueId","computed","findIndex","id","registerModal","value","push","unregisterModal","modalLevel","length","isLowestLevelModal","isMoreThenOneModalOpen","isTopLevelModal"],"sources":["../../../../src/composables/useModalLevel.ts"],"sourcesContent":["import { computed, shallowReactive } from 'vue'\nimport uniqueId from 'lodash/uniqueId.js'\n\nexport type ModalInStack = {\n  id: string;\n  // can add some modal info, methods here\n};\n\nconst modalsStack = shallowReactive<ModalInStack[]>([])\n\nexport const useModalLevel = () => {\n  const modalId = uniqueId()\n  const modalLevel = computed(() =>\n    modalsStack.findIndex(({ id }) => id === modalId),\n  )\n  const registerModal = () => {\n    if (modalLevel.value !== -1) {\n      return\n    }\n\n    modalsStack.push({\n      id: modalId,\n    })\n  }\n  const unregisterModal = () => {\n    if (modalLevel.value === -1) {\n      return\n    }\n\n    modalsStack.splice(modalLevel.value, 1)\n  }\n\n  const isTopLevelModal = computed(\n    () => modalLevel.value !== -1 && modalLevel.value === modalsStack.length - 1,\n  )\n  const isLowestLevelModal = computed(\n    () => modalLevel.value === 0,\n  )\n  const isMoreThenOneModalOpen = computed(() => modalsStack.length > 1)\n\n  return {\n    modalId,\n    modalLevel,\n    registerModal,\n    unregisterModal,\n    isTopLevelModal,\n    isLowestLevelModal,\n    isMoreThenOneModalOpen,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}