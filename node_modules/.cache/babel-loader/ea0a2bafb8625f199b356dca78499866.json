{"ast":null,"code":"import { computed, getCurrentInstance } from \"vue\";\nconst useRouterLinkProps = {\n  tag: {\n    type: String,\n    default: \"span\"\n  },\n  to: {\n    type: [String, Object],\n    default: \"\"\n  },\n  replace: {\n    type: Boolean,\n    default: false\n  },\n  append: {\n    type: Boolean,\n    default: false\n  },\n  exact: {\n    type: Boolean,\n    default: false\n  },\n  activeClass: {\n    type: String,\n    default: \"\"\n  },\n  exactActiveClass: {\n    type: String,\n    default: \"\"\n  },\n  href: {\n    type: String,\n    default: \"\"\n  },\n  target: {\n    type: String,\n    default: \"\"\n  },\n  disabled: {\n    type: Boolean,\n    default: false\n  }\n};\n\nconst useRouterLink = props => {\n  const globalProperties = computed(() => {\n    var _a;\n\n    return (_a = getCurrentInstance()) == null ? void 0 : _a.appContext.config.globalProperties;\n  });\n  computed(() => {\n    var _a;\n\n    return !!((_a = globalProperties.value) == null ? void 0 : _a.$nuxt);\n  });\n  const vueRouter = computed(() => {\n    var _a;\n\n    return (_a = globalProperties.value) == null ? void 0 : _a.$router;\n  });\n  const vueRoute = computed(() => {\n    var _a;\n\n    return (_a = globalProperties.value) == null ? void 0 : _a.$route;\n  });\n  const tagComputed = computed(() => {\n    if (props.disabled) {\n      return props.tag;\n    }\n\n    if (props.href && !props.to) {\n      return \"a\";\n    }\n\n    if (props.to) {\n      return \"router-link\";\n    }\n\n    return props.tag || \"div\";\n  });\n  const isLinkTag = computed(() => [\"a\", \"router-link\", \"nuxt-link\"].includes(tagComputed.value));\n  const linkAttributesComputed = computed(() => {\n    if (!isLinkTag.value) {\n      return {};\n    }\n\n    return tagComputed.value === \"a\" ? {\n      target: props.target,\n      href: hrefComputed.value\n    } : {\n      target: props.target,\n      to: props.to,\n      replace: props.replace,\n      append: props.append,\n      activeClass: props.activeClass,\n      exact: props.exact,\n      exactActiveClass: props.exactActiveClass\n    };\n  });\n  const isActiveRouterLink = computed(() => {\n    if (!vueRouter.value || !props.to) {\n      return false;\n    }\n\n    const to = vueRouter.value.resolve(props.to).href;\n    const currentHref = vueRouter.value.currentRoute.value.path;\n    return to.replace(\"#\", \"\") === currentHref.replace(\"#\", \"\");\n  });\n  const hrefComputed = computed(() => {\n    var _a;\n\n    return props.href || (props.to ? (_a = vueRouter.value) == null ? void 0 : _a.resolve(props.to, vueRoute.value).href : \"\");\n  });\n  return {\n    isLinkTag,\n    tagComputed,\n    hrefComputed,\n    isActiveRouterLink,\n    linkAttributesComputed\n  };\n};\n\nexport { useRouterLink as a, useRouterLinkProps as u };","map":{"version":3,"mappings":";AAEO,MAAMA,qBAAqB;EAChCC,KAAK;IAAEC,MAAMC,MAAR;IAAgBC,SAAS;EAAzB,CAD2B;EAEhCC,IAAI;IAAEH,MAAM,CAACC,MAAD,EAASG,MAAT,CAAR;IAAoEF,SAAS;EAA7E,CAF4B;EAGhCG,SAAS;IAAEL,MAAMM,OAAR;IAAiBJ,SAAS;EAA1B,CAHuB;EAIhCK,QAAQ;IAAEP,MAAMM,OAAR;IAAiBJ,SAAS;EAA1B,CAJwB;EAKhCM,OAAO;IAAER,MAAMM,OAAR;IAAiBJ,SAAS;EAA1B,CALyB;EAMhCO,aAAa;IAAET,MAAMC,MAAR;IAAgBC,SAAS;EAAzB,CANmB;EAOhCQ,kBAAkB;IAAEV,MAAMC,MAAR;IAAgBC,SAAS;EAAzB,CAPc;EAQhCS,MAAM;IAAEX,MAAMC,MAAR;IAAgBC,SAAS;EAAzB,CAR0B;EAShCU,QAAQ;IAAEZ,MAAMC,MAAR;IAAgBC,SAAS;EAAzB,CATwB;EAUhCW,UAAU;IAAEb,MAAMM,OAAR;IAAiBJ,SAAS;EAA1B;AAVsB,CAA3B;;AAaM,sBAAiBY,KAAD,IAAwD;EACnF,MAAMC,mBAAmBC,SAAS,MAAM;;;IAAA,yDAAsBC,UAAtB,CAAiCC,MAAjC,CAAwCH,gBAAxC;EAAwD,CAAvE,CAAzB;EACeC,SAAS;;;IAAM,QAAC,EAAC,uBAAiBG,KAAjB,wBAAwBC,KAAzB,CAAD;EAA+B,CAA9C;EACf,MAAMC,YAAYL,SAAS;;;IAAM,8BAAiBG,KAAjB,wBAAwBG,OAAxB;EAA+B,CAA9C,CAAlB;EACA,MAAMC,WAAWP,SAAS;;;IAAM,8BAAiBG,KAAjB,wBAAwBK,MAAxB;EAA8B,CAA7C,CAAjB;EAEM,oBAAcR,SAAS,MAAM;IACjC,IAAIF,MAAMD,QAAV,EAAoB;MAAE,OAAOC,MAAMf,GAAb;IAAiB;;IAEvC,IAAIe,MAAMH,IAAN,IAAc,CAACG,MAAMX,EAAzB,EAA6B;MAAS;IAAI;;IAK1C,IAAIW,MAAMX,EAAV,EAAc;MAAS;IAAc;;IAErC,OAAOW,MAAMf,GAAN,IAAa,KAApB;EACD,CAXmB,CAAd;EAaA,kBAAYiB,SAAS,MAAM,CAAC,GAAD,EAAM,aAAN,EAAqB,WAArB,EAAkCS,QAAlC,CAA2CC,YAAYP,KAAvD,CAAf,CAAZ;EAEA,+BAAyBH,SAAS,MAAM;IACxC,KAACW,UAAUR,KAAX,EAAkB;MAAE,OAAO,EAAP;IAAU;;IAE3B,mBAAYA,KAAZ,KAAsB,GAAtB,GACH;MACAP,QAAQE,MAAMF,MADd;MAEAD,MAAMiB,aAAaT;IAFnB,CADG,GAKH;MACAP,QAAQE,MAAMF,MADd;MAEAT,IAAIW,MAAMX,EAFV;MAGAE,SAASS,MAAMT,OAHf;MAIAE,QAAQO,MAAMP,MAJd;MAKAE,aAAaK,MAAML,WALnB;MAMAD,OAAOM,MAAMN,KANb;MAOAE,kBAAkBI,MAAMJ;IAPxB,CALG;EAcR,CAjB8B,CAAzB;EAmBA,2BAAqBM,SAAS,MAAM;IACxC,IAAI,CAACK,UAAUF,KAAX,IAAoB,CAACL,MAAMX,EAA/B,EAAmC;MAAS;IAAM;;IAElD,MAAMA,KAAKkB,UAAUF,KAAV,CAAgBU,OAAhB,CAAwBf,MAAMX,EAA9B,EAAkCQ,IAA7C;IACA,MAAMmB,cAAcT,UAAUF,KAAV,CAAgBY,YAAhB,CAA6BZ,KAA7B,CAAmCa,IAAvD;IAEO,UAAG3B,OAAH,CAAW,GAAX,EAAgB,EAAhB,MAAwByB,YAAYzB,OAAZ,CAAoB,GAApB,EAAyB,EAAzB,CAAxB;EACR,CAP0B,CAArB;EASA,qBAAeW,SAAS,MAAM;;;IAIlC,OAAOF,MAAMH,IAAN,KAAqBG,WAAK,gBAAUK,KAAV,wBAAiBU,OAAjB,CAAyBf,MAAMX,EAA/B,EAAmCoB,SAASJ,KAA5C,EAAmDR,IAAxD,GAA+D,EAApF,CAAP;EACD,CALoB,CAAf;EAOC;IACLgB,SADK;IAELD,WAFK;IAGLE,YAHK;IAILK,kBAJK;IAKLC;EALK;AAOT,CA/Da","names":["useRouterLinkProps","tag","type","String","default","to","Object","replace","Boolean","append","exact","activeClass","exactActiveClass","href","target","disabled","props","globalProperties","computed","appContext","config","value","$nuxt","vueRouter","$router","vueRoute","$route","includes","tagComputed","isLinkTag","hrefComputed","resolve","currentHref","currentRoute","path","isActiveRouterLink","linkAttributesComputed"],"sources":["../../../../src/composables/useRouterLink.ts"],"sourcesContent":["import { computed, PropType, getCurrentInstance, ExtractPropTypes } from 'vue'\n\nexport const useRouterLinkProps = {\n  tag: { type: String, default: 'span' },\n  to: { type: [String, Object] as PropType<string | Record<string, any>>, default: '' },\n  replace: { type: Boolean, default: false },\n  append: { type: Boolean, default: false },\n  exact: { type: Boolean, default: false },\n  activeClass: { type: String, default: '' },\n  exactActiveClass: { type: String, default: '' },\n  href: { type: String, default: '' },\n  target: { type: String, default: '' },\n  disabled: { type: Boolean, default: false },\n}\n\nexport const useRouterLink = (props: ExtractPropTypes<typeof useRouterLinkProps>) => {\n  const globalProperties = computed(() => getCurrentInstance()?.appContext.config.globalProperties)\n  const isNuxt = computed(() => !!globalProperties.value?.$nuxt)\n  const vueRouter = computed(() => globalProperties.value?.$router)\n  const vueRoute = computed(() => globalProperties.value?.$route)\n\n  const tagComputed = computed(() => {\n    if (props.disabled) { return props.tag }\n\n    if (props.href && !props.to) { return 'a' }\n\n    // if (props.to) { return isNuxt.value ? 'nuxt-link' : 'router-link' }\n    // https://github.com/nuxt/framework/issues/6747\n    // TODO: may be we will be able to register NuxtLink component via @vuestic/nuxt and use resolveComponent\n    if (props.to) { return 'router-link' }\n\n    return props.tag || 'div'\n  })\n\n  const isLinkTag = computed(() => ['a', 'router-link', 'nuxt-link'].includes(tagComputed.value))\n\n  const linkAttributesComputed = computed(() => {\n    if (!isLinkTag.value) { return {} }\n\n    return tagComputed.value === 'a'\n      ? {\n        target: props.target,\n        href: hrefComputed.value,\n      }\n      : {\n        target: props.target,\n        to: props.to,\n        replace: props.replace,\n        append: props.append,\n        activeClass: props.activeClass,\n        exact: props.exact,\n        exactActiveClass: props.exactActiveClass,\n      }\n  })\n\n  const isActiveRouterLink = computed(() => {\n    if (!vueRouter.value || !props.to) { return false }\n\n    const to = vueRouter.value.resolve(props.to).href\n    const currentHref = vueRouter.value.currentRoute.value.path\n\n    return to.replace('#', '') === currentHref.replace('#', '')\n  })\n\n  const hrefComputed = computed(() => {\n    // to resolve href on server for SEO optimization\n    // https://github.com/nuxt/nuxt.js/issues/8204\n    // @ts-ignore\n    return props.href || (props.to ? vueRouter.value?.resolve(props.to, vueRoute.value).href : '')\n  })\n\n  return {\n    isLinkTag,\n    tagComputed,\n    hrefComputed,\n    isActiveRouterLink,\n    linkAttributesComputed,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}