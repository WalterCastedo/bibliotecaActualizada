{"ast":null,"code":"const isServer = () => typeof window === \"undefined\";\n\nconst isClient = () => !isServer();\n\nconst getWindow = () => typeof window === \"undefined\" ? void 0 : window;\n\nconst fakeGlobal = {};\n\nconst getGlobal = () => {\n  if (isServer()) {\n    if (typeof globalThis === \"undefined\") {\n      return fakeGlobal;\n    }\n\n    return globalThis;\n  } else {\n    return window;\n  }\n};\n\nexport { getGlobal as a, isClient as b, getWindow as g, isServer as i };","map":{"version":3,"mappings":"AAAa,iBAAW,MAAM,OAAOA,MAAP,KAAkB,WAAnC;;AACA,iBAAW,MAAM,CAACC,UAAlB;;AACN,MAAMC,YAAY,MAA0B,OAAOF,MAAP,KAAkB,WAAlB,GAAgC,MAAhC,GAA4CA,MAAxF;;AAGP,MAAMG,aAAa,EAAnB;;AAEO,MAAMC,YAAY,MAAM;EAC7B,IAAIH,UAAJ,EAAgB;IACV,WAAOI,UAAP,KAAsB,WAAtB,EAAmC;MAC9B;IACT;;IACO;EAAA,CAJT,MAKO;IACE;EACT;AACF,CATO","names":["window","isServer","getWindow","fakeGlobal","getGlobal","globalThis"],"sources":["../../../../src/utils/ssr.ts"],"sourcesContent":["export const isServer = () => typeof window === 'undefined'\nexport const isClient = () => !isServer()\nexport const getWindow = (): Window | undefined => typeof window === 'undefined' ? undefined : window\nexport const getDocument = (): Document | undefined => typeof document === 'undefined' ? undefined : document\n\nconst fakeGlobal = {}\n/** @deprecated why can't we just use some local object instead? */\nexport const getGlobal = () => {\n  if (isServer()) {\n    if (typeof globalThis === 'undefined') {\n      return fakeGlobal as Window\n    }\n    return globalThis as any as Window\n  } else {\n    return window\n  }\n}\n"]},"metadata":{},"sourceType":"module"}