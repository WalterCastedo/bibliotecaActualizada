{"ast":null,"code":"import { defineComponent, resolveComponent, openBlock, createElementBlock, createElementVNode, Fragment, renderList, createBlock } from \"vue\";\nimport { u as useComponentPresetProp } from \"../../composables/useComponentPreset.js\";\nimport { u as useStatefulEmits, a as useStatefulProps, b as useStateful } from \"../../composables/useStateful.js\";\nimport { u as useTranslation } from \"../../composables/useTranslation.js\";\nimport { V as VaColorIndicator } from \"../va-color-indicator/index.js\";\nimport { _ as _export_sfc } from \"../../../plugin-vue_export-helper.js\";\n\nvar VaColorPalette_vue_vue_type_style_index_0_lang = /* @__PURE__ */(() => \".va-color-palette{padding-top:3px}.va-color-palette__colors{display:flex}.va-color-palette__colors>*{margin-right:.25rem}.va-color-palette__colors>*:last-child{margin-right:0}\\n\")();\n\nconst _sfc_main = defineComponent({\n  name: \"VaColorPalette\",\n  components: {\n    VaColorIndicator\n  },\n  emits: useStatefulEmits,\n  props: { ...useStatefulProps,\n    ...useComponentPresetProp,\n    modelValue: {\n      type: String,\n      default: null\n    },\n    palette: {\n      type: Array,\n      default: () => []\n    },\n    indicator: {\n      type: String,\n      default: \"dot\",\n      validator: value => [\"dot\", \"square\"].includes(value)\n    }\n  },\n\n  setup(props, {\n    emit\n  }) {\n    const {\n      valueComputed\n    } = useStateful(props, emit);\n    return { ...useTranslation(),\n      valueComputed,\n      isSelected: color => valueComputed.value === color\n    };\n  }\n\n});\n\nconst _hoisted_1 = {\n  class: \"va-color-palette\"\n};\nconst _hoisted_2 = [\"aria-label\"];\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_va_color_indicator = resolveComponent(\"va-color-indicator\");\n\n  return openBlock(), createElementBlock(\"div\", _hoisted_1, [createElementVNode(\"ul\", {\n    class: \"va-color-palette__colors\",\n    role: \"listbox\",\n    \"aria-label\": _ctx.t(\"colorSelection\")\n  }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.palette, (color, index) => {\n    return openBlock(), createBlock(_component_va_color_indicator, {\n      key: index,\n      role: \"option\",\n      \"aria-label\": _ctx.t(\"color\", {\n        color\n      }),\n      \"aria-selected\": _ctx.isSelected(color),\n      tabindex: \"0\",\n      modelValue: _ctx.isSelected(color),\n      color,\n      square: _ctx.indicator === \"square\",\n      \"onUpdate:modelValue\": $event => _ctx.valueComputed = color\n    }, null, 8, [\"aria-label\", \"aria-selected\", \"modelValue\", \"color\", \"square\", \"onUpdate:modelValue\"]);\n  }), 128))], 8, _hoisted_2)]);\n}\n\nvar _VaColorPalette = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { _VaColorPalette as _ };\nimport './VaColorPalette.css';","map":{"version":3,"mappings":";;;;;;;;;AA8BA,MAAKA,YAAaC,gBAAa;EAC7BC,MAAM,gBADuB;EAE7BC,YAAY;IAAEC;EAAF,CAFiB;EAG7BC,OAAOC,gBAHsB;EAI7BC,OAAO,EACL,GAAGC,gBADE;IAEL,GAAGC,sBAFE;IAGLC,YAAY;MAAEC,MAAMC,MAAR;MAAgBC,SAAS;IAAzB,CAHP;IAILC,SAAS;MAAEH,MAAMI,KAAR;MAAqCF,SAAS,MAAM;IAApD,CAJJ;IAKLG,WAAW;MACTL,MAAMC,MADG;MAETC,SAAS,KAFA;MAGTI,WAAYC,KAAD,IAAmB,CAAC,KAAD,EAAQ,QAAR,EAAkBC,QAAlB,CAA2BD,KAA3B;IAHrB;EALN,CAJsB;;EAe7BE,MAAOb,KAAP,EAAc;IAAEc;EAAF,CAAd,EAAwB;IACtB,MAAM;MAAEC;IAAF,IAAoBC,YAAYhB,KAAZ,EAAmBc,IAAnB,CAA1B;IAEO,SACL,GAAGG,gBADE;MAELF,aAFK;MAGLG,YAAaC,KAAD,IAAmBJ,cAAcJ,KAAd,KAAwBQ;IAHlD;EAKT;;AAvB6B,CAAb,CAAlB;;AA7BO;EAAAC,OAAM;AAAN;;;;;;EAAL,uCAmBM,KAnBNC,cAmBM,CAlBJC,mBAiBK,IAjBLA,EAiBK;IAhBHF,OAAM,0BAgBH;IAfHG,MAAK,SAeF;IAdF,cAAYC,KAACC,CAAD,CAAC,gBAAD;EAcV,CAjBLH,EAGgB,EAEdI,oCAWEC,QAXFN,EAC2B,IAD3BA,EAC2BO,yBAAO,CAAxBT,KAAwB,EAAjBU,KAAiB,KAAZ;wBADtBC,YAWEC,6BAXFD,EAWE;MATCE,KAAKH,KASN;MARAN,MAAK,QAQL;MAPC,cAAYC,KAACC,CAAD,CAAC,OAAD,EAAC;QAAYN;MAAZ,CAAD,CAOb;MANC,iBAAeK,gBAAWL,KAAX,CAMhB;MALAc,UAAS,GAKT;MAJC9B,YAAYqB,gBAAWL,KAAX,CAIb;MAHCA,KAGD;MAFCe,QAAQV,KAASf,SAAT,KAAS,QAElB;MADC,uBAAiB0B,UAAEX,KAAgBT,aAAhB,GAAgBI;IACpC,CAXFW,EAUsC,IAVtCA,EAUsC,CAVtCA,EAUsC,uFAVtCA;EAUsC,CATXF,CAD3BP,EAUsC,GAVtCA,CAFc,EAHhBC,gBAkBI,CAnBND","names":["_sfc_main","defineComponent","name","components","VaColorIndicator","emits","useStatefulEmits","props","useStatefulProps","useComponentPresetProp","modelValue","type","String","default","palette","Array","indicator","validator","value","includes","setup","emit","valueComputed","useStateful","useTranslation","isSelected","color","class","_createElementBlock","_createElementVNode","role","_ctx","t","_openBlock","_Fragment","_renderList","index","_createBlock","_component_va_color_indicator","key","tabindex","square","$event"],"sources":["../../../../../src/components/va-color-palette/VaColorPalette.vue"],"sourcesContent":["<template>\n  <div class=\"va-color-palette\">\n    <ul\n      class=\"va-color-palette__colors\"\n      role=\"listbox\"\n      :aria-label=\"t('colorSelection')\"\n    >\n      <va-color-indicator\n        v-for=\"(color, index) in palette\"\n        :key=\"index\"\n        role=\"option\"\n        :aria-label=\"t('color', { color })\"\n        :aria-selected=\"isSelected(color)\"\n        tabindex=\"0\"\n        :modelValue=\"isSelected(color)\"\n        :color=\"color\"\n        :square=\"indicator === 'square'\"\n        @update:modelValue=\"valueComputed = color\"\n      />\n    </ul>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from 'vue'\n\nimport { useComponentPresetProp, useStateful, useStatefulProps, useStatefulEmits, useTranslation } from '../../composables'\n\nimport { VaColorIndicator } from '../va-color-indicator'\n\nexport default defineComponent({\n  name: 'VaColorPalette',\n  components: { VaColorIndicator },\n  emits: useStatefulEmits,\n  props: {\n    ...useStatefulProps,\n    ...useComponentPresetProp,\n    modelValue: { type: String, default: null },\n    palette: { type: Array as PropType<string[]>, default: () => [] },\n    indicator: {\n      type: String as PropType<'dot' | 'square'>,\n      default: 'dot',\n      validator: (value: string) => ['dot', 'square'].includes(value),\n    },\n  },\n  setup (props, { emit }) {\n    const { valueComputed } = useStateful(props, emit)\n\n    return {\n      ...useTranslation(),\n      valueComputed,\n      isSelected: (color: string) => valueComputed.value === color,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-color-palette {\n  padding-top: 3px;\n\n  &__colors {\n    display: flex;\n\n    & > * {\n      margin-right: 0.25rem;\n\n      &:last-child {\n        margin-right: 0;\n      }\n    }\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}