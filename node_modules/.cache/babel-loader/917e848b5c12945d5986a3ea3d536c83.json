{"ast":null,"code":"import { computed } from \"vue\";\nimport { g as getValueByPath } from \"../../../utils/value-by-key.js\";\n\nconst getItemKey = (source, itemsTrackBy) => typeof itemsTrackBy === \"function\" ? itemsTrackBy(source) : getValueByPath(source, itemsTrackBy) || source;\n\nconst buildTableCell = (rowIndex, rowKey, rowData, column) => {\n  var _a;\n\n  const source = getValueByPath(rowData, column.key);\n  return {\n    rowIndex,\n    rowKey,\n    rowData,\n    column,\n    source,\n    value: ((_a = source == null ? void 0 : source.toString) == null ? void 0 : _a.call(source)) || \"\"\n  };\n};\n\nconst buildTableRow = (source, initialIndex, itemsTrackBy, columns) => {\n  const itemKey = getItemKey(source, itemsTrackBy);\n  return {\n    initialIndex,\n    itemKey,\n    source,\n    cells: columns.map(column => buildTableCell(initialIndex, itemKey, source, column))\n  };\n};\n\nfunction useRows(columns, props) {\n  const rowsComputed = computed(() => props.items.map((rawItem, index) => buildTableRow(rawItem, index, props.itemsTrackBy, columns.value)));\n  return {\n    rowsComputed\n  };\n}\n\nexport { getItemKey as g, useRows as u };","map":{"version":3,"mappings":";;;AAYO,MAAMA,aAAa,CAACC,MAAD,EAAwBC,YAAxB,KACxB,OAAOA,YAAP,KAAwB,UAAxB,GACIA,aAAaD,MAAb,CADJ,GAEIE,eAAeF,MAAf,EAAuBC,YAAvB,KAAwCD,MAHvC;;AAYP,MAAMG,iBAAiB,CACrBC,QADqB,EAErBC,MAFqB,EAGrBC,OAHqB,EAIrBC,MAJqB,KAKH;;;EAClB,MAAMP,SAASE,eAAeI,OAAf,EAAwBC,OAAOC,GAA/B,CAAf;EAEO;IACLJ,QADK;IAELC,MAFK;IAGLC,OAHK;IAILC,MAJK;IAKLP,MALK;IAMLS,OAAO,wCAAQC,QAAR,yCAAwB;EAN1B;AAQT,CAhBA;;AAkBA,MAAMC,gBAAgB,CACpBX,MADoB,EAEpBY,YAFoB,EAGpBX,YAHoB,EAIpBY,OAJoB,KAKH;EACX,gBAAUd,WAAWC,MAAX,EAAmBC,YAAnB,CAAV;EAEC;IACLW,YADK;IAELE,OAFK;IAGLd,MAHK;IAILe,OAAOF,QAAQG,GAAR,CAAYT,UAAUJ,eAAeS,YAAf,EAA6BE,OAA7B,EAAsCd,MAAtC,EAA8CO,MAA9C,CAAtB;EAJF;AAMT,CAdA;;AAgBA,iBACEM,OADF,EAEEI,KAFF,EAGE;EACA,MAAMC,eAAeC,SAAS,MAAMF,MAAMG,KAAN,CACjCJ,GADiC,CAC7B,CAACK,OAAD,EAAUC,KAAV,KAAoBX,cAAcU,OAAd,EAAuBC,KAAvB,EAA8BL,MAAMhB,YAApC,EAAkDY,QAAQJ,KAA1D,CADS,CAAf,CAArB;EAGO;IACLS;EADK;AAGT","names":["getItemKey","source","itemsTrackBy","getValueByPath","buildTableCell","rowIndex","rowKey","rowData","column","key","value","toString","buildTableRow","initialIndex","columns","itemKey","cells","map","props","rowsComputed","computed","items","rawItem","index"],"sources":["../../../../../../src/components/va-data-table/hooks/useRows.ts"],"sourcesContent":["import { Ref, computed } from 'vue'\n\nimport { getValueByPath } from '../../../utils/value-by-key'\n\nimport type {\n  DataTableColumnInternal,\n  DataTableItem,\n  DataTableCell,\n  DataTableRow,\n  DataTableItemKey,\n} from '../types'\n\nexport const getItemKey = (source: DataTableItem, itemsTrackBy: string | ((item: DataTableItem) => any)): DataTableItemKey => (\n  typeof itemsTrackBy === 'function'\n    ? itemsTrackBy(source)\n    : getValueByPath(source, itemsTrackBy) || source\n)\n\ninterface useRowsProps {\n  items: DataTableItem[]\n  itemsTrackBy: string | ((item: DataTableItem) => any)\n  [prop: string]: unknown\n}\n\nconst buildTableCell = (\n  rowIndex: number,\n  rowKey: string,\n  rowData: DataTableItem,\n  column: DataTableColumnInternal,\n): DataTableCell => {\n  const source = getValueByPath(rowData, column.key)\n\n  return {\n    rowIndex,\n    rowKey,\n    rowData,\n    column,\n    source,\n    value: source?.toString?.() || '',\n  }\n}\n\nconst buildTableRow = (\n  source: DataTableItem,\n  initialIndex: number,\n  itemsTrackBy: string | ((item: DataTableItem) => any),\n  columns: DataTableColumnInternal[],\n): DataTableRow => {\n  const itemKey = getItemKey(source, itemsTrackBy)\n\n  return {\n    initialIndex,\n    itemKey,\n    source,\n    cells: columns.map(column => buildTableCell(initialIndex, itemKey, source, column)),\n  }\n}\n\nexport default function useRows (\n  columns: Ref<DataTableColumnInternal[]>,\n  props: useRowsProps,\n) {\n  const rowsComputed = computed(() => props.items\n    .map((rawItem, index) => buildTableRow(rawItem, index, props.itemsTrackBy, columns.value)))\n\n  return {\n    rowsComputed,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}