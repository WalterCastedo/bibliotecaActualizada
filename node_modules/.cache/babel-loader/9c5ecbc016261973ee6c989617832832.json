{"ast":null,"code":"import { defineComponent, ref, computed, resolveComponent, openBlock, createElementBlock, normalizeClass, normalizeStyle, createElementVNode, createVNode, withCtx, renderSlot } from \"vue\";\nimport { g as getGradientBackground } from \"../../services/color/utils.js\";\nimport { u as useBem } from \"../../composables/useBem.js\";\nimport { u as useColors } from \"../../composables/useColors.js\";\nimport { u as useComponentPresetProp } from \"../../composables/useComponentPreset.js\";\nimport { u as useTextColor } from \"../../composables/useTextColor.js\";\nimport { u as useSidebar } from \"./hooks/useSidebar.js\";\nimport { _ as _export_sfc } from \"../../../plugin-vue_export-helper.js\";\n\nvar VaSidebar_vue_vue_type_style_index_0_lang = /* @__PURE__ */(() => \":root{--va-sidebar-min-height: 100%;--va-sidebar-height: 100%;--va-sidebar-position: relative;--va-sidebar-top: 0;--va-sidebar-left: 0;--va-sidebar-transition: var(--va-transition);--va-sidebar-z-index: 1;--va-sidebar-menu-max-height: 100%;--va-sidebar-menu-margin-bottom: 0;--va-sidebar-menu-list-style: none;--va-sidebar-menu-padding-left: 0;--va-sidebar-menu-overflow-y: auto;--va-sidebar-menu-overflow-x: hidden;--va-sidebar-item-active-border-size: 4px;--va-sidebar-item-transition: var(--va-transition);--va-sidebar-item-content-padding: 1rem;--va-sidebar-item-content-gap: .5rem;--va-sidebar-item-title-white-space: nowrap}.va-sidebar{min-height:var(--va-sidebar-min-height);height:var(--va-sidebar-height);position:var(--va-sidebar-position);top:var(--va-sidebar-top);left:var(--va-sidebar-left);z-index:var(--va-sidebar-z-index);font-family:var(--va-font-family);display:inline-flex}.va-sidebar__menu{display:flex;flex-direction:column;max-height:var(--va-sidebar-menu-max-height);margin-bottom:var(--va-sidebar-menu-margin-bottom);list-style:var(--va-sidebar-menu-list-style);padding-left:var(--va-sidebar-menu-padding-left);overflow-y:var(--va-sidebar-menu-overflow-y);overflow-x:var(--va-sidebar-menu-overflow-x);scrollbar-color:var(--va-primary) transparent;scrollbar-width:thin}.va-sidebar__menu::-webkit-scrollbar{width:4px;height:4px}.va-sidebar__menu::-webkit-scrollbar-track{box-shadow:none;border-radius:10px}.va-sidebar__menu::-webkit-scrollbar-thumb{background:var(--va-primary);opacity:.3;border-radius:2px}.va-sidebar--animated,.va-sidebar--animated .va-sidebar__menu{transition:var(--va-sidebar-transition)}.va-sidebar--minimized{left:0}.va-sidebar--minimized .va-sidebar__title{display:none}.va-sidebar--right{left:auto;right:0}\\n\")();\n\nconst _sfc_main = defineComponent({\n  name: \"VaSidebar\",\n  props: { ...useComponentPresetProp,\n    activeColor: {\n      type: String,\n      default: \"primary\"\n    },\n    hoverColor: {\n      type: String,\n      default: void 0\n    },\n    hoverOpacity: {\n      type: Number,\n      default: 0.2,\n      validator: v => v >= 0 && v <= 1\n    },\n    borderColor: {\n      type: String,\n      default: void 0\n    },\n    color: {\n      type: String,\n      default: \"background-element\"\n    },\n    textColor: {\n      type: String\n    },\n    gradient: {\n      type: Boolean,\n      default: false\n    },\n    minimized: {\n      type: Boolean,\n      default: false\n    },\n    hoverable: {\n      type: Boolean,\n      default: false\n    },\n    position: {\n      type: String,\n      default: \"left\",\n      validator: v => [\"left\", \"right\"].includes(v)\n    },\n    width: {\n      type: String,\n      default: \"16rem\"\n    },\n    minimizedWidth: {\n      type: String,\n      default: \"4rem\"\n    },\n    modelValue: {\n      type: Boolean,\n      default: true\n    },\n    animated: {\n      type: Boolean,\n      default: true\n    }\n  },\n\n  setup(props) {\n    const {\n      getColor\n    } = useColors();\n    useSidebar(props);\n    const isHovered = ref(false);\n    const isMinimized = computed(() => props.minimized || props.hoverable && !isHovered.value);\n    const computedWidth = computed(() => {\n      if (!props.modelValue) {\n        return 0;\n      }\n\n      return isMinimized.value ? props.minimizedWidth : props.width;\n    });\n    const {\n      textColorComputed\n    } = useTextColor();\n    const computedStyle = computed(() => {\n      const backgroundColor = getColor(props.color);\n      const color = textColorComputed.value;\n      return {\n        color,\n        backgroundColor,\n        backgroundImage: props.gradient ? getGradientBackground(backgroundColor) : void 0\n      };\n    });\n    const computedClass = useBem(\"va-sidebar\", () => ({\n      minimized: isMinimized.value,\n      right: props.position === \"right\",\n      animated: props.animated\n    }));\n\n    const updateHoverState = newHoverState => {\n      isHovered.value = props.hoverable && newHoverState;\n    };\n\n    return {\n      computedWidth,\n      computedClass,\n      computedStyle,\n      updateHoverState,\n      vaSidebarItemProps: computed(() => ({\n        textColor: props.textColor,\n        activeColor: props.activeColor,\n        hoverColor: props.hoverColor,\n        borderColor: props.borderColor,\n        hoverOpacity: props.hoverOpacity\n      }))\n    };\n  }\n\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_va_config = resolveComponent(\"va-config\");\n\n  return openBlock(), createElementBlock(\"aside\", {\n    class: normalizeClass([\"va-sidebar\", _ctx.computedClass]),\n    style: normalizeStyle(_ctx.computedStyle),\n    onMouseenter: _cache[0] || (_cache[0] = $event => _ctx.updateHoverState(true)),\n    onMouseleave: _cache[1] || (_cache[1] = $event => _ctx.updateHoverState(false))\n  }, [createElementVNode(\"div\", {\n    class: \"va-sidebar__menu\",\n    style: normalizeStyle(`width: ${_ctx.computedWidth};`)\n  }, [createVNode(_component_va_config, {\n    components: {\n      VaSidebarItem: _ctx.vaSidebarItemProps\n    }\n  }, {\n    default: withCtx(() => [renderSlot(_ctx.$slots, \"default\")]),\n    _: 3\n  }, 8, [\"components\"])], 4)], 38);\n}\n\nvar _VaSidebar = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { _VaSidebar as _ };\nimport './VaSidebar.css';","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","name","props","useComponentPresetProp","activeColor","type","String","default","hoverColor","hoverOpacity","Number","validator","v","borderColor","color","textColor","gradient","Boolean","minimized","hoverable","position","includes","width","minimizedWidth","modelValue","animated","setup","getColor","useColors","useSidebar","ref","computed","isHovered","value","isMinimized","textColorComputed","useTextColor","backgroundColor","backgroundImage","getGradientBackground","useBem","right","newHoverState","computedWidth","computedClass","computedStyle","updateHoverState","vaSidebarItemProps","_createElementBlock","class","_normalizeClass","_ctx","style","_normalizeStyle","onMouseenter","_cache","onMouseleave","_createElementVNode","_createVNode","_component_va_config","components","VaSidebarItem","_renderSlot","_"],"sources":["../../../../../src/components/va-sidebar/VaSidebar.vue"],"sourcesContent":["<template>\n  <aside\n    class=\"va-sidebar\"\n    :class=\"computedClass\"\n    :style=\"computedStyle\"\n    @mouseenter=\"updateHoverState(true)\"\n    @mouseleave=\"updateHoverState(false)\"\n  >\n    <div class=\"va-sidebar__menu\" :style=\"`width: ${computedWidth};`\">\n      <va-config :components=\"{ VaSidebarItem: vaSidebarItemProps }\">\n        <slot />\n      </va-config>\n    </div>\n  </aside>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref, PropType } from 'vue'\n\nimport { getGradientBackground } from '../../services/color'\nimport { useColors, useTextColor, useBem } from '../../composables'\nimport { useSidebar } from './hooks/useSidebar'\nimport { useComponentPresetProp } from '../../composables/useComponentPreset'\n\nexport default defineComponent({\n  name: 'VaSidebar',\n  props: {\n    ...useComponentPresetProp,\n    activeColor: { type: String, default: 'primary' },\n    hoverColor: { type: String, default: undefined },\n    hoverOpacity: {\n      type: Number,\n      default: 0.2,\n      validator: (v: number) => v >= 0 && v <= 1,\n    },\n    borderColor: { type: String, default: undefined },\n    color: { type: String, default: 'background-element' },\n    textColor: { type: String },\n    gradient: { type: Boolean, default: false },\n    minimized: { type: Boolean, default: false },\n    hoverable: { type: Boolean, default: false },\n    position: {\n      type: String as PropType<'left' | 'right'>,\n      default: 'left',\n      validator: (v: string) => ['left', 'right'].includes(v),\n    },\n    width: { type: String, default: '16rem' },\n    minimizedWidth: { type: String, default: '4rem' },\n    modelValue: { type: Boolean, default: true },\n    animated: { type: Boolean, default: true },\n  },\n  setup (props) {\n    const { getColor } = useColors()\n    useSidebar(props)\n\n    const isHovered = ref(false)\n\n    const isMinimized = computed(() => props.minimized || (props.hoverable && !isHovered.value))\n\n    const computedWidth = computed(() => {\n      if (!props.modelValue) {\n        return 0\n      }\n\n      return isMinimized.value ? props.minimizedWidth : props.width\n    })\n\n    const { textColorComputed } = useTextColor()\n\n    const computedStyle = computed(() => {\n      const backgroundColor = getColor(props.color)\n\n      const color = textColorComputed.value\n\n      return {\n        color,\n        backgroundColor,\n        backgroundImage: props.gradient ? getGradientBackground(backgroundColor) : undefined,\n      }\n    })\n\n    const computedClass = useBem('va-sidebar', () => ({\n      minimized: isMinimized.value,\n      right: props.position === 'right',\n      animated: props.animated,\n    }))\n\n    const updateHoverState = (newHoverState: boolean) => {\n      isHovered.value = props.hoverable && newHoverState\n    }\n\n    return {\n      computedWidth,\n      computedClass,\n      computedStyle,\n      updateHoverState,\n      vaSidebarItemProps: computed(() => ({\n        textColor: props.textColor,\n        activeColor: props.activeColor,\n        hoverColor: props.hoverColor,\n        borderColor: props.borderColor,\n        hoverOpacity: props.hoverOpacity,\n      })),\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-sidebar {\n  min-height: var(--va-sidebar-min-height);\n  height: var(--va-sidebar-height);\n  position: var(--va-sidebar-position);\n  top: var(--va-sidebar-top);\n  left: var(--va-sidebar-left);\n  z-index: var(--va-sidebar-z-index);\n  font-family: var(--va-font-family);\n  display: inline-flex;\n\n  &__menu {\n    display: flex;\n    flex-direction: column;\n    max-height: var(--va-sidebar-menu-max-height);\n    margin-bottom: var(--va-sidebar-menu-margin-bottom);\n    list-style: var(--va-sidebar-menu-list-style);\n    padding-left: var(--va-sidebar-menu-padding-left);\n    overflow-y: var(--va-sidebar-menu-overflow-y);\n    overflow-x: var(--va-sidebar-menu-overflow-x);\n\n    @include va-scroll(var(--va-primary));\n  }\n\n  &--animated {\n    transition: var(--va-sidebar-transition);\n\n    .va-sidebar__menu {\n      transition: var(--va-sidebar-transition);\n    }\n  }\n\n  &--minimized {\n    left: 0;\n\n    .va-sidebar__title {\n      display: none;\n    }\n  }\n\n  &--right {\n    left: auto;\n    right: 0;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}