{"ast":null,"code":"import { shallowRef, onBeforeUpdate } from \"vue\";\n\nconst useObjectRefs = () => {\n  const itemRefs = shallowRef({});\n\n  const setItemRef = key => el => {\n    if (!el) {\n      return;\n    }\n\n    itemRefs.value[key] = el;\n    return String(key);\n  };\n\n  onBeforeUpdate(() => {\n    itemRefs.value = {};\n  });\n  return {\n    itemRefs,\n    setItemRef\n  };\n};\n\nexport { useObjectRefs as u };","map":{"version":3,"mappings":";;AAQO,MAAMA,gBAAgB,MAAM;EAC3B,iBAAWC,WAAiD,EAAjD,CAAX;;EAEN,MAAMC,aAAcC,GAAD,IAA2BC,EAAD,IAAa;IACxD,IAAI,CAACA,EAAL,EAAS;MAAE;IAAO;;IAElBC,SAASC,KAAT,CAAeH,GAAf,IAAsBC,EAAtB;IAEA,OAAOG,OAAOJ,GAAP,CAAP;EAAiB,CALnB;;EAQAK,eAAe,MAAM;IAAEH,SAASC,KAAT,GAAiB,EAAjB;EAAqB,CAA5C;EAEO;IAAED,QAAF;IAAYH;EAAZ;AACT,CAdO","names":["useObjectRefs","shallowRef","setItemRef","key","el","itemRefs","value","String","onBeforeUpdate"],"sources":["../../../../src/composables/useObjectRefs.ts"],"sourcesContent":["import { shallowRef, onBeforeUpdate } from 'vue'\n\nimport type { TemplateRef } from './useArrayRefs'\n\n/**\n * @usage use setItemRef function as :ref property on v-for construction (or without v-for)\n * @link https://v3.vuejs.org/guide/migration/array-refs.html\n*/\nexport const useObjectRefs = () => {\n  const itemRefs = shallowRef<Record<string | number, TemplateRef>>({})\n\n  const setItemRef = (key: string | number) => (el: any) => {\n    if (!el) { return }\n\n    itemRefs.value[key] = el\n\n    return String(key)\n  }\n\n  onBeforeUpdate(() => { itemRefs.value = {} })\n\n  return { itemRefs, setItemRef }\n}\n"]},"metadata":{},"sourceType":"module"}