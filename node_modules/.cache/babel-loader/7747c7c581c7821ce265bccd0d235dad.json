{"ast":null,"code":"import axios from \"axios\";\nexport const RUTA_SERVIDOR_ALUMNOS = process.env.VUE_APP_RUTA_API_ALUMNOS;\nexport const RUTA_SERVIDOR_LIBROS = process.env.VUE_APP_RUTA_API_LIBROS;\nexport default {\n  name: \"ListarEmpleados\",\n\n  data() {\n    return {\n      idAdmin: localStorage.getItem('id'),\n      totalEmpleados: [],\n      nombreEmpleado: \"\",\n      empleados: [],\n      elementosPorPagina: 10,\n      datosPaginados: [],\n      paginaActual: 1,\n      empleadoEditar: {\n        nombre: \"\",\n        id: 0,\n        cargo: '',\n        usuario: '',\n        password: '',\n        password2: '',\n        idSubsede: ''\n      },\n      NombreSubSede: []\n    };\n  },\n\n  created: function () {\n    this.consultarAutores();\n  },\n\n  mounted() {\n    this.ObtenerDatosPag(1);\n  },\n\n  methods: {\n    consultarAutores() {\n      fetch(RUTA_SERVIDOR_LIBROS + \"/empleados\").then(respuesta => respuesta.json()).then(datosRespuesta => {\n        this.empleados = datosRespuesta;\n      }).then(() => {\n        for (let index = 0; index < this.empleados.length; index++) {\n          this.asignarNombre(this.empleados[index].idSubsede, this.empleados[index].id);\n        }\n      }).catch(console.log);\n    },\n\n    asignarNombre(idSubsede, index) {\n      if (this.NombreSubSede[index] == undefined) {\n        fetch(RUTA_SERVIDOR_ALUMNOS + \"/subsede/\" + idSubsede).then(respuesta => respuesta.json()).then(datosRespuesta => {\n          this.filtrarEmpleados();\n          this.NombreSubSede[index] = '' + datosRespuesta[0].subsede;\n        });\n      } else {\n        return;\n      }\n    },\n\n    filtrarEmpleados() {\n      if (this.estado == -1) {\n        this.totalEmpleados = this.solicitudes;\n        this.ObtenerDatosPag(1);\n      } else {\n        this.totalEmpleados = [];\n\n        for (let index = 0; index < this.empleados.length; index++) {\n          if (this.empleados[index].activo === 1 && this.empleados[index].nombre.toUpperCase().includes(this.nombreEmpleado.toUpperCase())) {\n            this.totalEmpleados = this.totalEmpleados.concat(this.empleados[index]);\n            this.ObtenerDatosPag(1);\n          }\n        }\n\n        if (this.totalEmpleados.length === 0) {\n          this.paginaPrevia(); //this.paginaActual=0;\n        }\n      }\n    },\n\n    eliminar(empleado) {\n      axios.put(RUTA_SERVIDOR_LIBROS + \"/empleados/\" + empleado.id, {\n        nombre: empleado.nombre,\n        idEmpleado: empleado.idEmpleado,\n        activo: 0,\n        usuario: empleado.usuario,\n        cargo: empleado.cargo,\n        password: empleado.password,\n        idSubsede: empleado.idSubsede\n      }).then(function (response) {\n        console.log(response);\n        location.reload();\n      }).catch(function (error) {\n        console.log(error); // console.log(this.libro);\n      });\n    },\n\n    totalPaginas() {\n      return Math.ceil(this.totalEmpleados.length / this.elementosPorPagina);\n    },\n\n    ObtenerDatosPag(noPag) {\n      this.paginaActual = noPag;\n      this.datosPaginados = [];\n      let ini = noPag * this.elementosPorPagina - this.elementosPorPagina;\n      let fin = noPag * this.elementosPorPagina;\n      this.datosPaginados = this.totalEmpleados.slice(ini, fin);\n    },\n\n    paginaPrevia() {\n      if (this.paginaActual > 1) {\n        this.paginaActual--;\n      }\n\n      this.ObtenerDatosPag(this.paginaActual);\n    },\n\n    paginaSiguiente() {\n      if (this.paginaActual < this.totalPaginas()) {\n        this.paginaActual++;\n      }\n\n      this.ObtenerDatosPag(this.paginaActual);\n    },\n\n    activo(noPoag) {\n      return noPoag === this.paginaActual ? \"active\" : \"\";\n    },\n\n    obtenerAdmin(Admin) {\n      this.empleadoEditar.nombre = Admin.nombre;\n      this.empleadoEditar.id = Admin.id;\n      this.empleadoEditar.usuario = Admin.nombre;\n      this.empleadoEditar.password = Admin.password;\n      this.empleadoEditar.cargo = Admin.cargo;\n      this.empleadoEditar.idSubsede = Admin.idSubsede;\n    },\n\n    actualizar() {\n      if (this.empleadoEditar.password == this.empleadoEditar.password2) {\n        axios.put(RUTA_SERVIDOR_LIBROS + \"/empleados/\" + this.empleadoEditar.id, {\n          nombre: this.empleadoEditar.nombre,\n          idEmpleado: parseInt(localStorage.getItem('id')),\n          activo: 1,\n          usuario: this.empleadoEditar.usuario,\n          cargo: this.empleadoEditar.cargo,\n          password: this.empleadoEditar.password,\n          idSubsede: this.empleadoEditar.idSubsede\n        }).then(function (response) {\n          console.log(response);\n          location.reload();\n        }).then(alert(\"El Administrador se actualizo correctamente\")).catch(function (error) {\n          console.log(error); // console.log(this.libro);\n        });\n      } else {\n        alert('Las contraseÃ±as no coinciden');\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA8IA;AACA;AACA;AAEA;EACAA,uBADA;;EAEAC;IACA;MACAC,mCADA;MAEAC,kBAFA;MAGAC,kBAHA;MAIAC,aAJA;MAKAC,sBALA;MAMAC,kBANA;MAOAC,eAPA;MAQAC;QACAC,UADA;QAEAC,KAFA;QAGAC,SAHA;QAIAC,WAJA;QAKAC,YALA;QAMAC,aANA;QAOAC;MAPA,CARA;MAiBAC;IAjBA;EAmBA,CAtBA;;EAwBAC;IACA;EACA,CA1BA;;EA2BAC;IACA;EACA,CA7BA;;EA8BAC;IACAC;MACAC,2CACAC,IADA,CACAC,6BADA,EAEAD,IAFA,CAEAE;QAEA;MACA,CALA,EAMAF,IANA,CAMA;QACA;UACA;QAEA;MACA,CAXA,EAYAG,KAZA,CAYAC,WAZA;IAaA,CAfA;;IAiBAC;MAEA;QAEAN,uDACAC,IADA,CACAC,6BADA,EAEAD,IAFA,CAEAE;UACA;UACA;QAEA,CANA;MAOA,CATA,MAUA;QACA;MACA;IACA,CAhCA;;IAkCAI;MACA;QACA;QACA;MACA,CAHA,MAGA;QACA;;QACA;UACA,IACA,sCACA,6BACAC,WADA,GAEAC,QAFA,CAEA,iCAFA,CAFA,EAKA;YACA;YACA;UACA;QACA;;QACA;UACA,oBADA,CAEA;QACA;MACA;IACA,CAxDA;;IA0DAC;MAEAC,MACAC,GADA,CACAC,kDADA,EACA;QACAzB,uBADA;QAEA0B,+BAFA;QAGAC,SAHA;QAIAxB,yBAJA;QAKAD,qBALA;QAMAE,2BANA;QAOAE;MAPA,CADA,EAUAO,IAVA,CAUA;QACAI;QACAW;MACA,CAbA,EAcAZ,KAdA,CAcA;QACAC,mBADA,CAEA;MACA,CAjBA;IAkBA,CA9EA;;IAgFAY;MACA;IACA,CAlFA;;IAoFAC;MACA;MACA;MACA;MACA;MACA;IACA,CA1FA;;IA4FAC;MACA;QACA;MACA;;MACA;IACA,CAjGA;;IAmGAC;MACA;QACA;MACA;;MACA;IACA,CAxGA;;IAyGAL;MACA;IACA,CA3GA;;IA6GAM;MACA;MACA;MACA;MACA;MACA;MACA;IAIA,CAvHA;;IAwHAC;MACA;QAGAX,MACAC,GADA,CACAC,6DADA,EACA;UACAzB,kCADA;UAEA0B,gDAFA;UAGAC,SAHA;UAIAxB,oCAJA;UAKAD,gCALA;UAMAE,sCANA;UAOAE;QAPA,CADA,EAUAO,IAVA,CAUA;UACAI;UACAW;QACA,CAbA,EAcAf,IAdA,CAcAsB,oDAdA,EAeAnB,KAfA,CAeA;UACAC,mBADA,CAEA;QACA,CAlBA;MAmBA,CAtBA,MAuBA;QACAkB;MACA;IACA;;EAnJA;AA9BA","names":["name","data","idAdmin","totalEmpleados","nombreEmpleado","empleados","elementosPorPagina","datosPaginados","paginaActual","empleadoEditar","nombre","id","cargo","usuario","password","password2","idSubsede","NombreSubSede","created","mounted","methods","consultarAutores","fetch","then","respuesta","datosRespuesta","catch","console","asignarNombre","filtrarEmpleados","toUpperCase","includes","eliminar","axios","put","RUTA_SERVIDOR_LIBROS","idEmpleado","activo","location","totalPaginas","ObtenerDatosPag","paginaPrevia","paginaSiguiente","obtenerAdmin","actualizar","alert"],"sourceRoot":"src/components","sources":["ListarAdmin.vue"],"sourcesContent":["<template class=\"fondo\">\n  <div class=\"row align-items-center\">\n    <div class=\"col\">\n      <div class=\"container align-items-center\">\n        <div class=\"form-group\">\n          <label for=\"\">Ingresa el nombre del administrador</label>\n          <input\n            v-on:keyup=\"filtrarAutores()\"\n            v-model=\"nombreEmpleado\"\n            type=\"text\"\n            class=\"form-control\"\n            placeholder=\"Nombre del empleado\"\n          />\n        </div>\n\n        <div class=\"d-none d-sm-none d-md-block table-responsive table-sm small \">\n          <table class=\"table\">\n            <thead>\n              <tr>\n                <!-- <th>ID</th> -->\n                <th>NOMBRE</th>\n                <th>CARGO</th>\n                <th>SUBSEDE</th>\n                <th>ACCIONES</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"admin in datosPaginados\" :key=\"admin.id\">\n                <td>{{ admin.nombre }}</td>\n                <td>{{ admin.cargo }}</td>\n                 <td>{{NombreSubSede[admin.id]}} </td>\n                <td>\n                  <div class=\"btn-group\" role=\"group\" aria-label=\"\">\n                   <div v-if=\"idAdmin==1 || idAdmin==admin.id \" >\n                   <button\n                      v-b-modal.modal-center\n                      @click=\"obtenerAdmin(admin)\"\n                      class=\"btn btn-info\"\n                    >\n                      Editar\n                    </button>\n                    </div>\n<div v-else>No hay accion disponible</div>\n                    <div v-if=\"idAdmin==1\">\n                    <button\n                      type=\"button\"\n                      @click=\"eliminar(admin)\"\n                      class=\"btn btn-danger\"\n                    >\n                      Eliminar\n                    </button>\n                    </div>\n                    \n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n\n    <nav aria-label=\"Page navigation example\">\n      <ul class=\"pagination\">\n        <li class=\"page-item\" v-on:click=\"paginaPrevia()\">\n          <a class=\"page-link\" href=\"#\">Previous</a>\n        </li>\n        <li\n          v-for=\"paginaE in totalPaginas()\"\n          :key=\"paginaE\"\n          class=\"page-item\"\n          v-bind:class=\"activo(paginaE)\"\n        >\n          <a class=\"page-link\" href=\"#\" v-on:click=\"ObtenerDatosPag(paginaE)\">{{\n            paginaE\n          }}</a>\n        </li>\n        <li class=\"page-item\" v-on:click=\"paginaSiguiente()\">\n          <a class=\"page-link\" href=\"#\">Next</a>\n        </li>\n      </ul>\n    </nav>\n\n    <b-modal id=\"modal-center\" centered title=\"Modificar empleado\">\n      <div class=\"form-group\">\n        <label for=\"\">Nombre del Administrador</label>\n        <input\n          v-model=\"empleadoEditar.nombre\"\n          type=\"text\"\n          name=\"\"\n          id=\"nombre\"\n          class=\"form-control\"\n          placeholder=\"empleadoEditar.nombre\"\n          aria-describedby=\"helpId\"\n        />\n         <label for=\"\">Usuario del Administrador</label>\n        <input\n          v-model=\"empleadoEditar.usuario\"\n          type=\"text\"\n          name=\"\"\n          id=\"usuario\"\n          class=\"form-control\"\n          placeholder=\"empleadoEditar.usuario\"\n          aria-describedby=\"helpId\"\n        />\n         <label for=\"\">Cargo del Administrador</label>\n        <input\n          v-model=\"empleadoEditar.cargo\"\n          type=\"text\"\n          name=\"\"\n          id=\"cargo\"\n          class=\"form-control\"\n          placeholder=\"empleadoEditar.cargo\"\n          aria-describedby=\"helpId\"\n        />\n         <label for=\"\">ContraseÃ±a del Administrador</label>\n        <input\n          v-model=\"empleadoEditar.password\"\n          type=\"password\"\n          name=\"password\"\n          id=\"password\"\n          class=\"form-control\"\n          placeholder=\"empleadoEditar.password\"\n          aria-describedby=\"helpId\"\n        />\n         <label for=\"\">Repetir contraseÃ±a </label>\n        <input\n          v-model=\"empleadoEditar.password2\"\n          type=\"password\"\n          name=\"password2\"\n          id=\"password2\"\n          class=\"form-control\"\n          placeholder=\"contraseÃ±a\"\n          aria-describedby=\"helpId\"\n        />\n        <button @click=\"actualizar()\">Actualizar datos</button>\n      </div>\n    </b-modal>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport const RUTA_SERVIDOR_ALUMNOS = process.env.VUE_APP_RUTA_API_ALUMNOS;\nexport const RUTA_SERVIDOR_LIBROS = process.env.VUE_APP_RUTA_API_LIBROS;\n\nexport default {\n  name: \"ListarEmpleados\",\n  data() {\n    return {\n      idAdmin:localStorage.getItem('id'),\n      totalEmpleados: [],\n      nombreEmpleado: \"\",\n      empleados: [],\n      elementosPorPagina: 10,\n      datosPaginados: [],\n      paginaActual: 1,\n      empleadoEditar: {\n        nombre: \"\",\n        id: 0,\n        cargo:'',\n        usuario:'',\n        password:'',\n        password2:'',\n        idSubsede:'',\n      },\n      NombreSubSede:[],\n    };\n  },\n\n  created: function () {\n    this.consultarAutores();\n  },\n  mounted() {\n    this.ObtenerDatosPag(1);\n  },\n  methods: {\n    consultarAutores() {\n      fetch(RUTA_SERVIDOR_LIBROS+\"/empleados\")\n        .then((respuesta) => respuesta.json())\n        .then((datosRespuesta) => {\n          \n            this.empleados = datosRespuesta;\n            })\n             .then(() => {\n           for (let index = 0; index < this.empleados.length; index++) {\n       this.asignarNombre(this.empleados[index].idSubsede,this.empleados[index].id)\n       \n      } \n        })\n        .catch(console.log);\n    },\n\n    asignarNombre(idSubsede,index){\n      \n      if(this.NombreSubSede[index]==undefined){\n       \n      fetch(RUTA_SERVIDOR_ALUMNOS+\"/subsede/\"+idSubsede)\n      .then((respuesta) => respuesta.json(),)\n      .then((datosRespuesta) => {   \n       this.filtrarEmpleados();\n       this.NombreSubSede[index]=''+datosRespuesta[0].subsede;\n  \n     })\n      }\n      else{\n      return \n      }\n      },\n\n    filtrarEmpleados() {\n      if (this.estado == -1) {\n        this.totalEmpleados = this.solicitudes;\n        this.ObtenerDatosPag(1);\n      } else {\n      this.totalEmpleados = [];\n      for (let index = 0; index < this.empleados.length; index++) {\n        if (\n          this.empleados[index].activo === 1 &&\n          this.empleados[index].nombre\n            .toUpperCase()\n            .includes(this.nombreEmpleado.toUpperCase())\n        ) {\n          this.totalEmpleados = this.totalEmpleados.concat(this.empleados[index]);\n          this.ObtenerDatosPag(1);\n        }\n      }\n      if (this.totalEmpleados.length === 0) {\n        this.paginaPrevia();\n        //this.paginaActual=0;\n      }\n      }\n    },\n\n    eliminar(empleado) {\n\n      axios\n        .put(RUTA_SERVIDOR_LIBROS+\"/empleados/\" + empleado.id, {\n          nombre: empleado.nombre,\n          idEmpleado: empleado.idEmpleado,\n          activo: 0,\n          usuario:empleado.usuario,\n          cargo:empleado.cargo,\n          password:empleado.password,\n          idSubsede:empleado.idSubsede\n        })\n        .then(function (response) {\n          console.log(response);\n          location.reload();\n        })\n        .catch(function (error) {\n          console.log(error);\n          // console.log(this.libro);\n        });\n    },\n\n    totalPaginas() {\n      return Math.ceil(this.totalEmpleados.length / this.elementosPorPagina);\n    },\n\n    ObtenerDatosPag(noPag) {\n      this.paginaActual = noPag;\n      this.datosPaginados = [];\n      let ini = noPag * this.elementosPorPagina - this.elementosPorPagina;\n      let fin = noPag * this.elementosPorPagina;\n      this.datosPaginados = this.totalEmpleados.slice(ini, fin);\n    },\n\n    paginaPrevia() {\n      if (this.paginaActual > 1) {\n        this.paginaActual--;\n      }\n      this.ObtenerDatosPag(this.paginaActual);\n    },\n\n    paginaSiguiente() {\n      if (this.paginaActual < this.totalPaginas()) {\n        this.paginaActual++;\n      }\n      this.ObtenerDatosPag(this.paginaActual);\n    },\n    activo(noPoag) {\n      return noPoag === this.paginaActual ? \"active\" : \"\";\n    },\n\n    obtenerAdmin(Admin) {\n      this.empleadoEditar.nombre = Admin.nombre;\n      this.empleadoEditar.id = Admin.id;\n      this.empleadoEditar.usuario = Admin.nombre;\n      this.empleadoEditar.password = Admin.password;\n      this.empleadoEditar.cargo = Admin.cargo;\n      this.empleadoEditar.idSubsede=Admin.idSubsede;\n\n     \n\n    },\n    actualizar() {\n      if(this.empleadoEditar.password==this.empleadoEditar.password2){\n\n    \n      axios\n        .put(RUTA_SERVIDOR_LIBROS+\"/empleados/\" + this.empleadoEditar.id, {\n          nombre: this.empleadoEditar.nombre,\n          idEmpleado: parseInt(localStorage.getItem('id')),\n          activo: 1,\n          usuario:this.empleadoEditar.usuario,\n          cargo:this.empleadoEditar.cargo,\n          password:this.empleadoEditar.password,\n          idSubsede:this.empleadoEditar.idSubsede\n        })\n        .then(function (response) {\n          console.log(response);\n          location.reload();\n        })\n        .then(alert(\"El Administrador se actualizo correctamente\"))\n        .catch(function (error) {\n          console.log(error);\n          // console.log(this.libro);\n        });\n          }\n        else{\n          alert('Las contraseÃ±as no coinciden');\n        }\n    },\n\n    \n  }\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}