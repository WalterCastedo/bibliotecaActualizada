{"ast":null,"code":"const hasOwnProperty = (object, key) => {\n  return Object.prototype.hasOwnProperty.call(object, key);\n};\n\nexport { hasOwnProperty as h };","map":{"version":3,"mappings":"AACa,uBAAiB,CAE5BA,MAF4B,EAEEC,GAFF,KAEwD;EAGpF,OAAOC,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCL,MAArC,EAA6CC,GAA7C,CAAP;AACF,CANa","names":["object","key","Object","prototype","hasOwnProperty","call"],"sources":["../../../../src/utils/has-own-property.ts"],"sourcesContent":["// TODO: @m0ksem: I think this is a thing that nobody will care about and we can delete this\nexport const hasOwnProperty = <\n  KEYS extends string, KEY extends string, Values\n>(object: Record<KEYS, Values>, key: string): object is Record<KEYS | KEY, Values> => {\n  // See https://eslint.org/docs/rules/no-prototype-builtins for explanation\n  // on why we don't use object.hasOwnProperty directly.\n  return Object.prototype.hasOwnProperty.call(object, key)\n}\n"]},"metadata":{},"sourceType":"module"}