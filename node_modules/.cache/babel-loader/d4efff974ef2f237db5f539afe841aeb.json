{"ast":null,"code":"import { defineComponent, computed, useCssVars, openBlock, createElementBlock, createElementVNode, renderSlot } from \"vue\";\nimport { u as useColors } from \"../../composables/useColors.js\";\nimport { _ as _export_sfc } from \"../../../plugin-vue_export-helper.js\";\n\nvar VaScrollContainer_vue_vue_type_style_index_0_lang = /* @__PURE__ */(() => \".va-scroll-container{scrollbar-color:var(--3df6be13) transparent;scrollbar-width:thin;overflow-x:var(--95f9955a);overflow-y:var(--95f99558);width:100%;height:100%;scrollbar-width:var(--f572b6ba)}.va-scroll-container::-webkit-scrollbar{width:4px;height:4px}.va-scroll-container::-webkit-scrollbar-track{box-shadow:none;border-radius:10px}.va-scroll-container::-webkit-scrollbar-thumb{background:var(--3df6be13);opacity:.3;border-radius:2px}.va-scroll-container__content{height:-webkit-max-content;height:-moz-max-content;height:max-content;width:-webkit-max-content;width:-moz-max-content;width:max-content}\\n\")();\n\nconst __default__ = defineComponent({\n  name: \"VaScrollContainer\",\n  props: {\n    vertical: {\n      type: Boolean,\n      default: false\n    },\n    horizontal: {\n      type: Boolean,\n      default: false\n    },\n    color: {\n      type: String,\n      default: \"secondary\"\n    },\n    size: {\n      type: String,\n      default: \"thin\"\n    }\n  },\n\n  setup(props) {\n    const {\n      getColor\n    } = useColors();\n    return {\n      overflowX: computed(() => props.horizontal ? \"auto\" : \"hidden\"),\n      overflowY: computed(() => props.vertical ? \"auto\" : \"hidden\"),\n      scrollColor: computed(() => getColor(props.color)),\n      scrollbarWidth: computed(() => props.size === \"default\" ? \"auto\" : props.size)\n    };\n  }\n\n});\n\nconst __injectCSSVars__ = () => {\n  useCssVars(_ctx => ({\n    \"3df6be13\": _ctx.scrollColor,\n    \"95f9955a\": _ctx.overflowX,\n    \"95f99558\": _ctx.overflowY,\n    \"f572b6ba\": _ctx.scrollbarWidth\n  }));\n};\n\nconst __setup__ = __default__.setup;\n__default__.setup = __setup__ ? (props, ctx) => {\n  __injectCSSVars__();\n\n  return __setup__(props, ctx);\n} : __injectCSSVars__;\nconst _sfc_main = __default__;\nconst _hoisted_1 = {\n  class: \"va-scroll-container\"\n};\nconst _hoisted_2 = {\n  class: \"va-scroll-container__content\"\n};\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", _hoisted_1, [createElementVNode(\"div\", _hoisted_2, [renderSlot(_ctx.$slots, \"default\")])]);\n}\n\nvar _VaScrollContainer = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { _VaScrollContainer as _ };\nimport './VaScrollContainer.css';","map":{"version":3,"mappings":";;;;;;AAYA,MAAKA,cAAeC,gBAAW;EAC7BC,MAAM,mBADuB;EAG7BC,OAAO;IACLC,UAAU;MACRC,MAAMC,OADE;MAERC,SAAS;IAFD,CADL;IAKLC,YAAY;MACVH,MAAMC,OADI;MAEVC,SAAS;IAFC,CALP;IASLE,OAAO;MACLJ,MAAMK,MADD;MAELH,SAAS;IAFJ,CATF;IAcLI,MAAM;MACJN,MAAMK,MADF;MAEJH,SAAS;IAFL;EAdD,CAHsB;;EAuB7BK,MAAOT,KAAP,EAAc;IACN;MAAEU;IAAF,IAAeC,WAAf;IAEC;MACLC,WAAWC,SAAS,MAAMb,MAAMK,UAAN,GAAmB,MAAnB,GAA4B,QAA3C,CADN;MAELS,WAAWD,SAAS,MAAMb,MAAMC,QAAN,GAAiB,MAAjB,GAA0B,QAAzC,CAFN;MAGLc,aAAaF,SAAS,MAAMH,SAASV,MAAMM,KAAf,CAAf,CAHR;MAILU,gBAAgBH,SAAS,MAAMb,MAAMQ,IAAN,KAAe,SAAf,GAA2B,MAA3B,GAAoCR,MAAMQ,IAAzD;IAJX;EAMT;;AAhC6B,CAAX,CAApB;;;;;;;;;;;;;;;;;;AAXO;EAAAS,OAAM;AAAN;AACE;EAAAA,OAAM;AAAN;;;EADP,uCAIM,KAJNC,cAIM,CAHJC,mBAEM,KAFNA,cAEM,CADJC,WAAQC,WAARD,EAAQ,SAARA,CACI,CAFND,CAGI,CAJND","names":["__default__","defineComponent","name","props","vertical","type","Boolean","default","horizontal","color","String","size","setup","getColor","useColors","overflowX","computed","overflowY","scrollColor","scrollbarWidth","class","_createElementBlock","_createElementVNode","_renderSlot","_ctx"],"sources":["../../../../../src/components/va-scroll-container/VaScrollContainer.vue"],"sourcesContent":["<template>\n  <div class=\"va-scroll-container\">\n    <div class=\"va-scroll-container__content\">\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType } from 'vue'\nimport { useColors } from '../../composables'\n\nexport default defineComponent({\n  name: 'VaScrollContainer',\n\n  props: {\n    vertical: {\n      type: Boolean,\n      default: false,\n    },\n    horizontal: {\n      type: Boolean,\n      default: false,\n    },\n    color: {\n      type: String,\n      default: 'secondary',\n    },\n    /** Proxy for scrollbar-width css property. Can be changed in global config. */\n    size: {\n      type: String as PropType<'default' | 'thin' | 'none'>,\n      default: 'thin',\n    },\n  },\n\n  setup (props) {\n    const { getColor } = useColors()\n\n    return {\n      overflowX: computed(() => props.horizontal ? 'auto' : 'hidden'),\n      overflowY: computed(() => props.vertical ? 'auto' : 'hidden'),\n      scrollColor: computed(() => getColor(props.color)),\n      scrollbarWidth: computed(() => props.size === 'default' ? 'auto' : props.size),\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import '../../styles/resources';\n\n.va-scroll-container {\n  @include va-scroll(v-bind(scrollColor));\n\n  overflow-x: v-bind(overflowX);\n  overflow-y: v-bind(overflowY);\n  width: 100%;\n  height: 100%;\n  scrollbar-width: v-bind(scrollbarWidth);\n\n  &__content {\n    height: max-content;\n    width: max-content;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}