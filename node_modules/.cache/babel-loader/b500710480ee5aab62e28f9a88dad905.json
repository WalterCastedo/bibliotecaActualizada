{"ast":null,"code":"import { defineComponent, resolveComponent, openBlock, createElementBlock, renderSlot, Fragment, renderList, createBlock, createSlots, withCtx, normalizeProps, guardReactiveProps, createTextVNode } from \"vue\";\nimport { u as useTreeView } from \"./hooks/useTreeView.js\";\nimport { u as useTreeViewProps, a as useTreeViewEmits } from \"./hooks/useTreeHelpers.js\";\nimport { V as VaTreeNode } from \"./components/VaTreeNode/index.js\";\nimport { _ as _export_sfc } from \"../../../plugin-vue_export-helper.js\";\n\nvar VaTreeView_vue_vue_type_style_index_0_lang = /* @__PURE__ */(() => \":root{--va-tree-view-padding: .3125rem}.va-tree-view{padding:var(--va-tree-view-padding);font-family:var(--va-font-family)}\\n\")();\n\nconst _sfc_main = defineComponent({\n  name: \"VaTreeView\",\n  props: { ...useTreeViewProps\n  },\n  emits: [...useTreeViewEmits],\n  components: {\n    VaTreeNode\n  },\n  setup: (props, {\n    emit\n  }) => {\n    const {\n      treeItems,\n      getTrackBy\n    } = useTreeView(props, emit);\n    return {\n      treeItems,\n      getTrackBy\n    };\n  }\n});\n\nconst _hoisted_1 = {\n  class: \"va-tree-view\",\n  role: \"tree\"\n};\n\nconst _hoisted_2 = /* @__PURE__ */createTextVNode(\"No matching nodes found\");\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_va_tree_node = resolveComponent(\"va-tree-node\");\n\n  return openBlock(), createElementBlock(\"div\", _hoisted_1, [_ctx.$props.filter && !_ctx.treeItems.length ? renderSlot(_ctx.$slots, \"not-found\", {\n    key: 0\n  }, () => [_hoisted_2]) : (openBlock(true), createElementBlock(Fragment, {\n    key: 1\n  }, renderList(_ctx.treeItems, nodeItem => {\n    return openBlock(), createBlock(_component_va_tree_node, {\n      key: _ctx.getTrackBy(nodeItem),\n      node: nodeItem\n    }, createSlots({\n      _: 2\n    }, [renderList(_ctx.$slots, (_, name) => {\n      return {\n        name,\n        fn: withCtx(slotScope => [renderSlot(_ctx.$slots, name, normalizeProps(guardReactiveProps(slotScope)))])\n      };\n    })]), 1032, [\"node\"]);\n  }), 128))]);\n}\n\nvar _VaTreeView = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { _VaTreeView as _ };\nimport './VaTreeView.css';","map":{"version":3,"mappings":";;;;;;;;AA2BA,MAAKA,YAAaC,gBAAa;EAC7BC,MAAM,YADuB;EAG7BC,OAAO,EAAE,GAAGC;EAAL,CAHsB;EAK7BC,OAAO,CAAC,GAAGC,gBAAJ,CALsB;EAO7BC,YAAY;IAAEC;EAAF,CAPiB;EAS7BC,OAAO,CAACN,KAAD,EAAQ;IAAEO;EAAF,CAAR,KAAqB;IAC1B,MAAM;MAAEC,SAAF;MAAaC;IAAb,IAA4BC,YAAYV,KAAZ,EAAmBO,IAAnB,CAAlC;IAEO;MAAEC,SAAF;MAAaC;IAAb;EACT;AAb6B,CAAb,CAAlB;;;EA1BOE,OAAM;EAAeC,MAAK;;;kDAEJ;;;;;EAF3B,uCAeM,KAfNC,cAeM,CAdYC,YAAOC,MAAP,IAAa,CAAKD,eAAUE,MAA5B,GACdC,WAAqDH,WAArDG,EAAqD,WAArDA,EAAqD;IAAAC;EAAA,CAArDD,QAAqD,YAArDA,CADc,IACuCE,iBAGrDN,mBAQeO,QARfP,EAQe;IAAAK;EAAA,CARfL,EAQeQ,WAPMP,KAASN,SAOfa,EAPNC,QAAqB,IAAb;wBADjBC,YAQeC,uBARfD,EAQe;MANZL,KAAKJ,gBAAWQ,QAAX,CAMO;MALZG,MAAMH;IAKM,CARfC,EAGSG;MAAAC;IAAA,eAEuBb,KAAMc,MAF7B,EAE6B,CAAlBD,CAAkB,EAAf5B,IAAe,KAAX;;;QACvB8B,YAD+DC,SAC/D,IADwE,CACxEb,WAAwCH,WAAxCG,EAAalB,IAAbkB,EAAiBc,kCAAUD,SAAVE,EAAjBf,CADwE,CACxEgB;;KAHK,GAHTV;GAQeF,CARfR,MAJc,CAcZ,CAfNA","names":["_sfc_main","defineComponent","name","props","useTreeViewProps","emits","useTreeViewEmits","components","VaTreeNode","setup","emit","treeItems","getTrackBy","useTreeView","class","role","_createElementBlock","_ctx","filter","length","_renderSlot","key","openBlock","_Fragment","_renderList","nodeItem","_createBlock","_component_va_tree_node","node","_createSlots","_","$slots","fn","slotScope","_normalizeProps","_guardReactiveProps","_withCtx"],"sources":["../../../../../src/components/va-tree-view/VaTreeView.vue"],"sourcesContent":["<template>\n  <div class=\"va-tree-view\" role=\"tree\">\n    <template v-if=\"$props.filter && !treeItems.length\">\n      <slot name=\"not-found\">No matching nodes found</slot>\n    </template>\n    <template v-else>\n      <va-tree-node\n        v-for=\"nodeItem in treeItems\"\n        :key=\"getTrackBy(nodeItem)\"\n        :node=\"nodeItem\"\n      >\n        <template v-for=\"(_, name) in $slots\" :key=\"name\" v-slot:[name]=\"slotScope\">\n          <slot :name=\"name\" v-bind=\"slotScope\" />\n        </template>\n      </va-tree-node>\n    </template>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\nimport useTreeView from './hooks/useTreeView'\nimport { useTreeViewProps, useTreeViewEmits } from './hooks/useTreeHelpers'\n\nimport { VaTreeNode } from './components/VaTreeNode'\n\nexport default defineComponent({\n  name: 'VaTreeView',\n\n  props: { ...useTreeViewProps },\n\n  emits: [...useTreeViewEmits],\n\n  components: { VaTreeNode },\n\n  setup: (props, { emit }) => {\n    const { treeItems, getTrackBy } = useTreeView(props, emit)\n\n    return { treeItems, getTrackBy }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-tree-view {\n  padding: var(--va-tree-view-padding);\n  font-family: var(--va-font-family);\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}