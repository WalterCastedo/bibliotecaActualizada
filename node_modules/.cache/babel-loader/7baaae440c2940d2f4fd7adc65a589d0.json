{"ast":null,"code":"export const RUTA_SERVIDOR_ALUMNOS = process.env.VUE_APP_RUTA_API_ALUMNOS;\nexport const RUTA_SERVIDOR_LIBROS = process.env.VUE_APP_RUTA_API_LIBROS;\nimport axios from \"axios\";\nexport default {\n  name: \"ListarEditorial\",\n\n  data() {\n    return {\n      totalEditoriales: [],\n      nombreEditorial: \"\",\n      editoriales: [],\n      elementosPorPagina: 8,\n      datosPaginados: [],\n      paginaActual: 1,\n      editorialEditar: {\n        nombre: \"\",\n        id: 0\n      }\n    };\n  },\n\n  created: function () {\n    this.consultarEditoriales();\n  },\n\n  mounted() {\n    this.ObtenerDatosPag(1);\n  },\n\n  methods: {\n    consultarEditoriales() {\n      fetch(RUTA_SERVIDOR_LIBROS + \"/editoriales\").then(respuesta => respuesta.json()).then(datosRespuesta => {\n        this.libros = [];\n\n        if (typeof datosRespuesta[0].success === \"undefined\") {\n          datosRespuesta.sort((a, b) => {\n            if (a.nombreEditorial.toUpperCase() == b.nombreEditorial.toUpperCase()) {\n              return 0;\n            }\n\n            if (a.nombreEditorial.toUpperCase() > b.nombreEditorial.toUpperCase()) {\n              return 1;\n            }\n\n            if (a.nombreEditorial.toUpperCase() < b.nombreEditorial.toUpperCase()) {\n              return -1;\n            }\n          });\n          this.editoriales = datosRespuesta;\n          this.filtrarEditoriales();\n        }\n      }).catch(console.log);\n    },\n\n    filtrarEditoriales() {\n      this.totalEditoriales = [];\n\n      for (let index = 0; index < this.editoriales.length; index++) {\n        if (this.editoriales[index].activo === 1 && this.editoriales[index].nombreEditorial.toUpperCase().includes(this.nombreEditorial.toUpperCase())) {\n          this.totalEditoriales = this.totalEditoriales.concat(this.editoriales[index]);\n          this.ObtenerDatosPag(1);\n        }\n      }\n\n      if (this.totalEditoriales.length === 0) {\n        this.paginaPrevia(); //this.paginaActual=0;\n      }\n    },\n\n    eliminar(editorial) {\n      console.log(editorial);\n      axios.put(RUTA_SERVIDOR_LIBROS + \"/editoriales/\" + editorial.id, {\n        nombreEditorial: editorial.nombreEditorial,\n        idEmpleado: editorial.idEmpleado,\n        activo: 0\n      }).then(function (response) {\n        console.log(response);\n        location.reload();\n      }).catch(function (error) {\n        console.log(error); // console.log(this.libro);\n      });\n    },\n\n    totalPaginas() {\n      return Math.ceil(this.totalEditoriales.length / this.elementosPorPagina);\n    },\n\n    ObtenerDatosPag(noPag) {\n      this.paginaActual = noPag;\n      this.datosPaginados = [];\n      let ini = noPag * this.elementosPorPagina - this.elementosPorPagina;\n      let fin = noPag * this.elementosPorPagina;\n      this.datosPaginados = this.totalEditoriales.slice(ini, fin);\n    },\n\n    paginaPrevia() {\n      if (this.paginaActual > 1) {\n        this.paginaActual--;\n      }\n\n      this.ObtenerDatosPag(this.paginaActual);\n    },\n\n    paginaSiguiente() {\n      if (this.paginaActual < this.totalPaginas()) {\n        this.paginaActual++;\n      }\n\n      this.ObtenerDatosPag(this.paginaActual);\n    },\n\n    activo(noPoag) {\n      return noPoag === this.paginaActual ? \"active\" : \"\";\n    },\n\n    obtenerAutor(idEditorial) {\n      this.editorialEditar.nombre = idEditorial.nombreEditorial;\n      this.editorialEditar.id = idEditorial.id;\n    },\n\n    actualizar() {\n      axios.put(RUTA_SERVIDOR_LIBROS + \"/editoriales/\" + this.editorialEditar.id, {\n        nombreEditorial: this.editorialEditar.nombre,\n        idEmpleado: parseInt(localStorage.getItem('id')),\n        activo: 1\n      }).then(function (response) {\n        console.log(response);\n        location.reload();\n      }).then(alert(\"La editorial se actualizo correctamente\")).catch(function (error) {\n        console.log(error); // console.log(this.libro);\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAmGA;AACA;AAEA;AAEA;EACAA,uBADA;;EAEAC;IACA;MACAC,oBADA;MAEAC,mBAFA;MAGAC,eAHA;MAIAC,qBAJA;MAKAC,kBALA;MAMAC,eANA;MAOAC;QACAC,UADA;QAEAC;MAFA;IAPA;EAYA,CAfA;;EAiBAC;IACA;EACA,CAnBA;;EAoBAC;IACA;EACA,CAtBA;;EAuBAC;IACAC;MACAC,6CACAC,IADA,CACAC,6BADA,EAEAD,IAFA,CAEAE;QACA;;QACA;UACAA;YACA,IACAC,mCACAC,+BAFA,EAGA;cACA;YACA;;YACA,IACAD,kCACAC,+BAFA,EAGA;cACA;YACA;;YACA,IACAD,kCACAC,+BAFA,EAGA;cACA;YACA;UACA,CAnBA;UAoBA;UACA;QACA;MACA,CA5BA,EA6BAC,KA7BA,CA6BAC,WA7BA;IA8BA,CAhCA;;IAkCAC;MACA;;MACA;QACA,IACA,wCACA,wCACAC,WADA,GAEAC,QAFA,CAEA,kCAFA,CAFA,EAKA;UACA,qDACA,uBADA;UAGA;QACA;MACA;;MACA;QACA,oBADA,CAEA;MACA;IACA,CArDA;;IAuDAC;MACAJ;MACAK,MACAC,GADA,CACAC,qDADA,EACA;QACA1B,0CADA;QAEA2B,gCAFA;QAGAC;MAHA,CADA,EAMAf,IANA,CAMA;QACAM;QACAU;MACA,CATA,EAUAX,KAVA,CAUA;QACAC,mBADA,CAEA;MACA,CAbA;IAcA,CAvEA;;IAyEAW;MACA;IACA,CA3EA;;IA6EAC;MACA;MACA;MACA;MACA;MACA;IACA,CAnFA;;IAqFAC;MACA;QACA;MACA;;MACA;IACA,CA1FA;;IA4FAC;MACA;QACA;MACA;;MACA;IACA,CAjGA;;IAkGAL;MACA;IACA,CApGA;;IAsGAM;MACA;MACA;IACA,CAzGA;;IA0GAC;MACAX,MACAC,GADA,CAEAC,gEAFA,EAGA;QACA1B,4CADA;QAEA2B,gDAFA;QAGAC;MAHA,CAHA,EASAf,IATA,CASA;QACAM;QACAU;MACA,CAZA,EAaAhB,IAbA,CAaAuB,gDAbA,EAcAlB,KAdA,CAcA;QACAC,mBADA,CAEA;MACA,CAjBA;IAkBA;;EA7HA;AAvBA","names":["name","data","totalEditoriales","nombreEditorial","editoriales","elementosPorPagina","datosPaginados","paginaActual","editorialEditar","nombre","id","created","mounted","methods","consultarEditoriales","fetch","then","respuesta","datosRespuesta","a","b","catch","console","filtrarEditoriales","toUpperCase","includes","eliminar","axios","put","RUTA_SERVIDOR_LIBROS","idEmpleado","activo","location","totalPaginas","ObtenerDatosPag","paginaPrevia","paginaSiguiente","obtenerAutor","actualizar","alert"],"sourceRoot":"src/components","sources":["ListarEditorial.vue"],"sourcesContent":["<template class=\"fondo\">\n  <div class=\"row align-items-center\">\n    <div class=\"col\">\n      <div class=\"container align-items-center\">\n        <div class=\"form-group\">\n          <label for=\"\">Ingresa el nombre de la editorial</label>\n          <input\n            v-on:keyup=\"filtrarEditoriales()\"\n            v-model=\"nombreEditorial\"\n            type=\"text\"\n            class=\"form-control\"\n            placeholder=\"Nombre de la editorial\"\n          />\n        </div>\n\n        <div class=\"d-none d-sm-none d-md-block table-responsive\">\n          <table class=\"table able-striped border text-center\">\n            <thead>\n              <tr>\n                <!-- <th>ID</th> -->\n                <th>NOMBRE</th>\n                <th>ACCIONES</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"editorial in datosPaginados\" :key=\"editorial.id\">\n                <!-- <td>{{ libro.id }}</td> -->\n                <td>{{ editorial.nombreEditorial }}</td>\n                <!-- <td>{{ libro.codigo }}</td>\n                    <td>{{ libro.copias }}</td>\n                    <td>{{ libro.categoria }}</td>\n                    <td>{{ libro.edicion }}</td>\n                    <td>{{ autor[[libro.idAutor] - 1].nombre }}</td>\n                    <td>{{ editoriales[[libro.idEditorial] - 1].nombreEditorial }}</td>\n                    <td>{{ carreras[[libro.idCarrera] - 1].nombreCarrera }}</td>\n                    <td>{{ libro.observacion }}</td> -->\n                <td>\n                  <div class=\"btn-group\" role=\"group\" aria-label=\"\">\n                    <button\n                      v-b-modal.modal-center\n                      @click=\"obtenerAutor(editorial)\"\n                      class=\"btn btn-info\"\n                    >\n                      Editar\n                    </button>\n                    <button\n                      type=\"button\"\n                      @click=\"eliminar(editorial)\"\n                      class=\"btn btn-danger\"\n                    >\n                      Eliminar\n                    </button>\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n\n    <nav aria-label=\"Page navigation example\">\n      <ul class=\"pagination\">\n        <li class=\"page-item\" v-on:click=\"paginaPrevia()\">\n          <a class=\"page-link\" href=\"#\">Previous</a>\n        </li>\n        <li\n          v-for=\"paginaE in totalPaginas()\"\n          :key=\"paginaE\"\n          class=\"page-item\"\n          v-bind:class=\"activo(paginaE)\"\n        >\n          <a class=\"page-link\" href=\"#\" v-on:click=\"ObtenerDatosPag(paginaE)\">{{\n            paginaE\n          }}</a>\n        </li>\n        <li class=\"page-item\" v-on:click=\"paginaSiguiente()\">\n          <a class=\"page-link\" href=\"#\">Next</a>\n        </li>\n      </ul>\n    </nav>\n\n    <b-modal id=\"modal-center\" centered title=\"Modificar autor\">\n      <div class=\"form-group\">\n        <label for=\"\">nombre de la editorial</label>\n        <input\n          v-model=\"editorialEditar.nombre\"\n          type=\"text\"\n          class=\"form-control\"\n          placeholder=\"editorialEditar.nombre\"\n          aria-describedby=\"helpId\"\n        />\n        <button @click=\"actualizar()\"></button>\n      </div>\n    </b-modal>\n  </div>\n</template>\n\n<script>\n  export const RUTA_SERVIDOR_ALUMNOS = process.env.VUE_APP_RUTA_API_ALUMNOS;\nexport const RUTA_SERVIDOR_LIBROS = process.env.VUE_APP_RUTA_API_LIBROS;\n\nimport axios from \"axios\";\n\nexport default {\n  name: \"ListarEditorial\",\n  data() {\n    return {\n      totalEditoriales: [],\n      nombreEditorial: \"\",\n      editoriales: [],\n      elementosPorPagina: 8,\n      datosPaginados: [],\n      paginaActual: 1,\n      editorialEditar: {\n        nombre: \"\",\n        id: 0,\n      },\n    };\n  },\n\n  created: function () {\n    this.consultarEditoriales();\n  },\n  mounted() {\n    this.ObtenerDatosPag(1);\n  },\n  methods: {\n    consultarEditoriales() {\n      fetch(RUTA_SERVIDOR_LIBROS+\"/editoriales\")\n        .then((respuesta) => respuesta.json())\n        .then((datosRespuesta) => {\n          this.libros = [];\n          if (typeof datosRespuesta[0].success === \"undefined\") {\n            datosRespuesta.sort((a, b) => {\n              if (\n                a.nombreEditorial.toUpperCase() ==\n                b.nombreEditorial.toUpperCase()\n              ) {\n                return 0;\n              }\n              if (\n                a.nombreEditorial.toUpperCase() >\n                b.nombreEditorial.toUpperCase()\n              ) {\n                return 1;\n              }\n              if (\n                a.nombreEditorial.toUpperCase() <\n                b.nombreEditorial.toUpperCase()\n              ) {\n                return -1;\n              }\n            });\n            this.editoriales = datosRespuesta;\n            this.filtrarEditoriales();\n          }\n        })\n        .catch(console.log);\n    },\n\n    filtrarEditoriales() {\n      this.totalEditoriales = [];\n      for (let index = 0; index < this.editoriales.length; index++) {\n        if (\n          this.editoriales[index].activo === 1 &&\n          this.editoriales[index].nombreEditorial\n            .toUpperCase()\n            .includes(this.nombreEditorial.toUpperCase())\n        ) {\n          this.totalEditoriales = this.totalEditoriales.concat(\n            this.editoriales[index]\n          );\n          this.ObtenerDatosPag(1);\n        }\n      }\n      if (this.totalEditoriales.length === 0) {\n        this.paginaPrevia();\n        //this.paginaActual=0;\n      }\n    },\n\n    eliminar(editorial) {\n      console.log(editorial);\n      axios\n        .put(RUTA_SERVIDOR_LIBROS+\"/editoriales/\" + editorial.id, {\n          nombreEditorial: editorial.nombreEditorial,\n          idEmpleado: editorial.idEmpleado,\n          activo: 0,\n        })\n        .then(function (response) {\n          console.log(response);\n          location.reload();\n        })\n        .catch(function (error) {\n          console.log(error);\n          // console.log(this.libro);\n        });\n    },\n\n    totalPaginas() {\n      return Math.ceil(this.totalEditoriales.length / this.elementosPorPagina);\n    },\n\n    ObtenerDatosPag(noPag) {\n      this.paginaActual = noPag;\n      this.datosPaginados = [];\n      let ini = noPag * this.elementosPorPagina - this.elementosPorPagina;\n      let fin = noPag * this.elementosPorPagina;\n      this.datosPaginados = this.totalEditoriales.slice(ini, fin);\n    },\n\n    paginaPrevia() {\n      if (this.paginaActual > 1) {\n        this.paginaActual--;\n      }\n      this.ObtenerDatosPag(this.paginaActual);\n    },\n\n    paginaSiguiente() {\n      if (this.paginaActual < this.totalPaginas()) {\n        this.paginaActual++;\n      }\n      this.ObtenerDatosPag(this.paginaActual);\n    },\n    activo(noPoag) {\n      return noPoag === this.paginaActual ? \"active\" : \"\";\n    },\n\n    obtenerAutor(idEditorial) {\n      this.editorialEditar.nombre = idEditorial.nombreEditorial;\n      this.editorialEditar.id = idEditorial.id;\n    },\n    actualizar() {\n      axios\n        .put(\n          RUTA_SERVIDOR_LIBROS+\"/editoriales/\" + this.editorialEditar.id,\n          {\n            nombreEditorial: this.editorialEditar.nombre,\n           idEmpleado: parseInt(localStorage.getItem('id')),\n            activo: 1,\n          }\n        )\n        .then(function (response) {\n          console.log(response);\n          location.reload();\n        })\n        .then(alert(\"La editorial se actualizo correctamente\"))\n        .catch(function (error) {\n          console.log(error);\n          // console.log(this.libro);\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}