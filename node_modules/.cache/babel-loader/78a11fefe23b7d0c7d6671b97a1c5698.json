{"ast":null,"code":"import axios from \"axios\";\nexport const RUTA_SERVIDOR_ALUMNOS = process.env.VUE_APP_RUTA_API_ALUMNOS;\nexport const RUTA_SERVIDOR_LIBROS = process.env.VUE_APP_RUTA_API_LIBROS;\nexport default {\n  data() {\n    return {\n      nombreEditorial: \"\"\n    };\n  },\n\n  props: {\n    variable: {\n      type: Number,\n      default: 0\n    }\n  },\n\n  beforeMount() {},\n\n  methods: {\n    // consultarAutor() {\n    //   if (this.variable > 0) {\n    //     fetch(RUTA_SERVIDOR_LIBROS+\"/autor/\" + this.variable)\n    //       .then((respuesta) => respuesta.json())\n    //       .then((datosRespuesta) => {\n    //         this.nombreEditorial = datosRespuesta.nombre;\n    //       })\n    //       .catch(console.log);\n    //   }\n    // },\n    agregarEditorial() {\n      if (this.nombreEditorial.trim() === \"\") {\n        alert('Por favor, El campo de nombre no pueden estar vacios.');\n        return;\n      }\n\n      axios.post(RUTA_SERVIDOR_LIBROS + \"/editoriales/\", {\n        nombreEditorial: this.nombreEditorial,\n        idEmpleado: parseInt(localStorage.getItem('id')),\n        activo: 1\n      }).then(function (response) {\n        console.log(response);\n        location.reload();\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n\n    reset() {\n      Object.assign(this.$data, this.$options.data());\n      this.consultarEditorial();\n      this.consultarCarreras();\n    },\n\n    volver() {\n      location.reload();\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAsCA;AACA;AACA;AAEA;EACAA;IACA;MACAC;IADA;EAGA,CALA;;EAMAC;IACAC;MACAC,YADA;MAEAC;IAFA;EADA,CANA;;EAaAC,gBAbA;;EAeAC;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IAEAC;MACA,IACA,kCADA,EAGA;QACAC;QACA;MACA;;MACAC,MACAC,IADA,CACAC,sCADA,EACA;QACAX,qCADA;QAEAY,gDAFA;QAGAC;MAHA,CADA,EAMAC,IANA,CAMA;QACAC;QACAC;MACA,CATA,EAUAC,KAVA,CAUA;QACAF;MACA,CAZA;IAaA,CAnCA;;IAqCAG;MACAC;MACA;MAEA;IACA,CA1CA;;IA2CAC;MACAJ;IACA;;EA7CA;AAfA","names":["data","nombreEditorial","props","variable","type","default","beforeMount","methods","agregarEditorial","alert","axios","post","RUTA_SERVIDOR_LIBROS","idEmpleado","activo","then","console","location","catch","reset","Object","volver"],"sourceRoot":"src/components","sources":["CrearEditorial.vue"],"sourcesContent":["<template>\n  <div class=\"container row\" ref=\"accionEditar\">\n  \n    <form v-on:submit.prevent=\"agregarEditorial\" class=\"col\">\n      <div class=\"row align-items-center\">\n        <div class=\"form-group col-sm\">\n          <label for=\"titulo\">nombre del editorial</label>\n          <input\n            required\n            type=\"text\"\n            name=\"nombre\"\n            v-model=\"nombreEditorial\"\n            id=\"titulo\"\n            class=\"form-control\"\n            placeholder=\"Nombre de la editorail\"\n            aria-describedby=\"titulo\"\n          />\n        </div>\n      </div>\n\n      <br />\n      <div class=\"container row justify-content-md-center\" raria-label=\"\">\n        <a \n          v-if=\"variable < 0\"\n          v-on:click.stop=\"agregarEditorial()\"\n          class=\"btn btn-success col-3\"\n        >\n          Agregar\n        </a>\n     \n      \n        <a v-on:click.stop=\"volver()\" class=\"btn btn-danger col-3\">Cancelar</a>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport const RUTA_SERVIDOR_ALUMNOS = process.env.VUE_APP_RUTA_API_ALUMNOS;\nexport const RUTA_SERVIDOR_LIBROS = process.env.VUE_APP_RUTA_API_LIBROS;\n\nexport default {\n  data() {\n    return {\n      nombreEditorial: \"\",\n    };\n  },\n  props: {\n    variable: {\n      type: Number,\n      default: 0,\n    },\n  },\n\n  beforeMount() {},\n\n  methods: {\n    // consultarAutor() {\n    //   if (this.variable > 0) {\n\n    //     fetch(RUTA_SERVIDOR_LIBROS+\"/autor/\" + this.variable)\n    //       .then((respuesta) => respuesta.json())\n    //       .then((datosRespuesta) => {\n    //         this.nombreEditorial = datosRespuesta.nombre;\n    //       })\n    //       .catch(console.log);\n\n    //   }\n    // },\n\n    agregarEditorial() {\n      if (\n    this.nombreEditorial.trim() === \"\" \n  \n  ) {\n    alert('Por favor, El campo de nombre no pueden estar vacios.');\n    return;\n  }\n      axios\n        .post(RUTA_SERVIDOR_LIBROS+\"/editoriales/\", {\n          nombreEditorial: this.nombreEditorial,\n          idEmpleado: parseInt(localStorage.getItem('id')),\n          activo: 1,\n        })\n        .then(function (response) {\n          console.log(response);\n          location.reload();\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    },\n\n    reset() {\n      Object.assign(this.$data, this.$options.data());\n      this.consultarEditorial();\n\n      this.consultarCarreras();\n    },\n    volver() {\n      location.reload();\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}