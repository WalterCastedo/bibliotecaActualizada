{"ast":null,"code":"import { defineComponent, computed, openBlock, createElementBlock, normalizeStyle, renderSlot } from \"vue\";\nimport { u as useColors } from \"../../composables/useColors.js\";\nimport { u as useComponentPresetProp } from \"../../composables/useComponentPreset.js\";\nimport { u as useFixedBarProps, a as useFixedBar } from \"../../composables/useFixedBar.js\";\nimport { s as setupScroll } from \"../../composables/useScroll.js\";\nimport { _ as _export_sfc } from \"../../../plugin-vue_export-helper.js\";\n\nvar VaAppBar_vue_vue_type_style_index_0_lang = /* @__PURE__ */(() => \":root{--va-app-bar-position: relative;--va-app-bar-height: auto;--va-app-bar-shadow: 0 0 12px 2px;--va-app-bar-z-index: calc(var(--va-z-index-teleport-overlay) - 100);--va-app-bar-transition: transform .5s ease}.va-app-bar{display:flex;align-items:center;position:var(--va-app-bar-position);transition:all .5s ease;top:0;left:0;width:100%;height:var(--va-app-bar-height);min-height:var(--va-app-bar-height);min-width:100%;font-family:var(--va-font-family);z-index:var(--va-app-bar-z-index)}.va-app-bar--bottom{top:100%;transform:translateY(-100%)}\\n\")();\n\nconst _sfc_main = defineComponent({\n  name: \"VaAppBar\",\n  props: { ...useFixedBarProps,\n    ...useComponentPresetProp,\n    gradient: {\n      type: Boolean,\n      default: false\n    },\n    target: {\n      type: [Object, String],\n      default: \"\"\n    },\n    shadowOnScroll: {\n      type: Boolean,\n      default: false\n    },\n    shadowColor: {\n      type: String,\n      default: \"\"\n    },\n    color: {\n      type: String,\n      default: void 0\n    }\n  },\n\n  setup(props) {\n    const {\n      scrollRoot,\n      isScrolledDown\n    } = setupScroll(props.fixed, props.target);\n    const {\n      fixedBarStyleComputed\n    } = useFixedBar(props, isScrolledDown);\n    const {\n      getColor,\n      getGradientBackground,\n      getBoxShadowColor\n    } = useColors();\n    const colorComputed = computed(() => getColor(props.color));\n    const showShadowComputed = computed(() => isScrolledDown.value ? !!props.shadowOnScroll : false);\n    const shadowColorComputed = computed(() => getColor(props.shadowColor, colorComputed.value));\n    const computedShadow = computed(() => {\n      const shadow = getBoxShadowColor(props.shadowColor ? shadowColorComputed.value : colorComputed.value);\n      return showShadowComputed.value ? `var(--va-app-bar-shadow) ${shadow}` : \"\";\n    });\n    const computedStyle = computed(() => ({ ...fixedBarStyleComputed.value,\n      background: props.gradient ? getGradientBackground(colorComputed.value) : colorComputed.value,\n      boxShadow: computedShadow.value\n    }));\n    return {\n      scrollRoot,\n      computedStyle\n    };\n  }\n\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"header\", {\n    ref: \"scrollRoot\",\n    role: \"toolbar\",\n    class: \"va-app-bar\",\n    style: normalizeStyle(_ctx.computedStyle)\n  }, [renderSlot(_ctx.$slots, \"default\")], 4);\n}\n\nvar _VaAppBar = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { _VaAppBar as _ };\nimport './VaAppBar.css';","map":{"version":3,"mappings":";;;;;;;;;AAgBA,MAAKA,YAAaC,gBAAa;EAC7BC,MAAM,UADuB;EAE7BC,OAAO,EACL,GAAGC,gBADE;IAEL,GAAGC,sBAFE;IAGLC,UAAU;MAAEC,MAAMC,OAAR;MAAiBC,SAAS;IAA1B,CAHL;IAILC,QAAQ;MAAEH,MAAM,CAACI,MAAD,EAASC,MAAT,CAAR;MAA4DH,SAAS;IAArE,CAJH;IAKLI,gBAAgB;MAAEN,MAAMC,OAAR;MAAiBC,SAAS;IAA1B,CALX;IAMLK,aAAa;MAAEP,MAAMK,MAAR;MAAgBH,SAAS;IAAzB,CANR;IAOLM,OAAO;MAAER,MAAMK,MAAR;MAAgBH,SAAS;IAAzB;EAPF,CAFsB;;EAY7BO,MAAOb,KAAP,EAAc;IACZ,MAAM;MAAEc,UAAF;MAAcC;IAAd,IAAiCC,YAAYhB,MAAMiB,KAAlB,EAAyBjB,MAAMO,MAA/B,CAAvC;IACA,MAAM;MAAEW;IAAF,IAA4BC,YAAYnB,KAAZ,EAAmBe,cAAnB,CAAlC;IAEA,MAAM;MAAEK,QAAF;MAAYC,qBAAZ;MAAmCC;IAAnC,IAAyDC,WAA/D;IACA,MAAMC,gBAAgBC,SAAS,MAAML,SAASpB,MAAMY,KAAf,CAAf,CAAtB;IACM,2BAAqBa,SAAS,MAAMV,eAAeW,KAAf,GAAuB,CAAC,CAAC1B,MAAMU,cAA/B,GAAgD,KAA/D,CAArB;IACA,4BAAsBe,SAAS,MAAML,SAASpB,MAAMW,WAAf,EAA4Ba,cAAcE,KAA1C,CAAf,CAAtB;IAEA,uBAAiBD,SAAS,MAAM;MACpC,MAAME,SAASL,kBAAkBtB,MAAMW,WAAN,GAAoBiB,oBAAoBF,KAAxC,GAAgDF,cAAcE,KAAhF,CAAf;MACO,0BAAmBA,KAAnB,GAA2B,4BAA4BC,QAAvD,GAAkE,EAAlE;IACR,CAHsB,CAAjB;IAKA,sBAAgBF,SAAS,OAAO,EACpC,GAAGP,sBAAsBQ,KADW;MAEpCG,YAAY7B,MAAMG,QAAN,GAAiBkB,sBAAsBG,cAAcE,KAApC,CAAjB,GAA8DF,cAAcE,KAFpD;MAGpCI,WAAWC,eAAeL;IAHU,CAAP,CAAT,CAAhB;IAMC;MAAEZ,UAAF;MAAckB;IAAd;EACT;;AAjC6B,CAAb,CAAlB;;;sBAfEC,mBAOS,QAPTA,EAOS;IANPC,KAAI,YAMG;IALPC,MAAK,SAKE;IAJPC,OAAM,YAIC;IAHNC,OAAKC,eAAEC,KAAaP,aAAfM;EAGC,CAPTL,EAIuB,CAErBO,WAAQD,WAARC,EAAQ,SAARA,CAFqB,CAJvBP,EAMU,CANVA","names":["_sfc_main","defineComponent","name","props","useFixedBarProps","useComponentPresetProp","gradient","type","Boolean","default","target","Object","String","shadowOnScroll","shadowColor","color","setup","scrollRoot","isScrolledDown","setupScroll","fixed","fixedBarStyleComputed","useFixedBar","getColor","getGradientBackground","getBoxShadowColor","useColors","colorComputed","computed","value","shadow","shadowColorComputed","background","boxShadow","computedShadow","computedStyle","_createElementBlock","ref","role","class","style","_normalizeStyle","_ctx","_renderSlot"],"sources":["../../../../../src/components/va-app-bar/VaAppBar.vue"],"sourcesContent":["<template>\n  <header\n    ref=\"scrollRoot\"\n    role=\"toolbar\"\n    class=\"va-app-bar\"\n    :style=\"computedStyle\"\n  >\n    <slot />\n  </header>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed } from 'vue'\n\nimport { setupScroll, useColors, useFixedBar, useFixedBarProps, useComponentPresetProp } from '../../composables'\n\nexport default defineComponent({\n  name: 'VaAppBar',\n  props: {\n    ...useFixedBarProps,\n    ...useComponentPresetProp,\n    gradient: { type: Boolean, default: false },\n    target: { type: [Object, String] as PropType<string | HTMLElement>, default: '' },\n    shadowOnScroll: { type: Boolean, default: false },\n    shadowColor: { type: String, default: '' },\n    color: { type: String, default: undefined },\n  },\n\n  setup (props) {\n    const { scrollRoot, isScrolledDown } = setupScroll(props.fixed, props.target)\n    const { fixedBarStyleComputed } = useFixedBar(props, isScrolledDown)\n\n    const { getColor, getGradientBackground, getBoxShadowColor } = useColors()\n    const colorComputed = computed(() => getColor(props.color))\n    const showShadowComputed = computed(() => isScrolledDown.value ? !!props.shadowOnScroll : false)\n    const shadowColorComputed = computed(() => getColor(props.shadowColor, colorComputed.value))\n\n    const computedShadow = computed(() => {\n      const shadow = getBoxShadowColor(props.shadowColor ? shadowColorComputed.value : colorComputed.value)\n      return showShadowComputed.value ? `var(--va-app-bar-shadow) ${shadow}` : ''\n    })\n\n    const computedStyle = computed(() => ({\n      ...fixedBarStyleComputed.value,\n      background: props.gradient ? getGradientBackground(colorComputed.value) : colorComputed.value,\n      boxShadow: computedShadow.value,\n    }))\n\n    return { scrollRoot, computedStyle }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-app-bar {\n  display: flex;\n  align-items: center;\n  position: var(--va-app-bar-position);\n  transition: all 0.5s ease;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: var(--va-app-bar-height);\n  min-height: var(--va-app-bar-height);\n  min-width: 100%;\n  font-family: var(--va-font-family);\n  z-index: var(--va-app-bar-z-index);\n\n  &--bottom {\n    top: 100%;\n    transform: translateY(-100%);\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}