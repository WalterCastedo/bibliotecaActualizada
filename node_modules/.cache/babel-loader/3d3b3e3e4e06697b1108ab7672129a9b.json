{"ast":null,"code":"import { defineComponent, computed, openBlock, createElementBlock, normalizeClass, renderSlot, createCommentVNode } from \"vue\";\nimport { u as useComponentPresetProp } from \"../../composables/useComponentPreset.js\";\nimport { _ as _export_sfc } from \"../../../plugin-vue_export-helper.js\";\n\nvar VaDivider_vue_vue_type_style_index_0_lang = /* @__PURE__ */(() => ':root{--va-divider-display: flex;--va-divider-color: var(--va-background-border);--va-divider-margin: .5rem;--va-divider-line-width: 1px;--va-divider-border-top-style: solid;--va-divider-border-top-color: var(--va-divider-color);--va-divider-text-font-size: .875rem;--va-divider-text-line-height: 0;--va-divider-text-height: 0;--va-divider-text-vertical-align: middle;--va-divider-text-transform: translateY(-50%);--va-divider-text-horizontal-offset: 1.25rem;--va-divider-vertical-border-top: 0;--va-divider-vertical-border-right-width: 1px;--va-divider-vertical-border-right-style: solid;--va-divider-vertical-border-right-color: var(--va-divider-color);--va-divider-vertical-display: inline-flex;--va-divider-inset-horizontal-margin: 1rem;--va-divider-inset-margin: .5rem var(--va-divider-inset-horizontal-margin);--va-divider-dashed-border-top-style: dashed}.va-divider{display:var(--va-divider-display);margin:var(--va-divider-margin) 0;font-family:var(--va-font-family)}.va-divider--vertical{margin:0 var(--va-divider-margin);border-top:var(--va-divider-vertical-border-top);border-right-width:var(--va-divider-vertical-border-right-width);border-right-style:var(--va-divider-vertical-border-right-style);border-right-color:var(--va-divider-vertical-border-right-color);display:var(--va-divider-vertical-display);vertical-align:top}.va-divider--vertical.va-divider--dashed{border-right-style:dashed}.va-divider--inset{margin:var(--va-divider-inset-margin)}.va-divider--inset.va-divider--vertical{margin:var(--va-divider-inset-horizontal-margin) var(--va-divider-margin)}.va-divider:before,.va-divider:after{content:\"\";flex:1;border-top-width:var(--va-divider-line-width);border-top-style:var(--va-divider-border-top-style);border-top-color:var(--va-divider-border-top-color)}.va-divider--dashed:before,.va-divider--dashed:after{border-top-style:var(--va-divider-dashed-border-top-style)}.va-divider--left:before{flex:0 var(--va-divider-text-horizontal-offset)}.va-divider--right:after{flex:0 var(--va-divider-text-horizontal-offset)}.va-divider__text{font-size:var(--va-divider-text-font-size);line-height:var(--va-divider-text-line-height);height:var(--va-divider-text-height);vertical-align:var(--va-divider-text-vertical-align);transform:var(--va-divider-text-transform)}\\n')();\n\nconst prefixClass = \"va-divider\";\n\nconst _sfc_main = defineComponent({\n  name: \"VaDivider\",\n  props: { ...useComponentPresetProp,\n    vertical: {\n      type: Boolean,\n      default: false\n    },\n    dashed: {\n      type: Boolean,\n      default: false\n    },\n    inset: {\n      type: Boolean,\n      default: false\n    },\n    orientation: {\n      type: String,\n      default: \"center\",\n      validator: value => [\"left\", \"right\", \"center\"].includes(value)\n    }\n  },\n  setup: (props, {\n    slots\n  }) => ({\n    hasSlot: computed(() => !!slots.default),\n    classComputed: computed(() => ({\n      [`${prefixClass}--vertical`]: props.vertical,\n      [`${prefixClass}--inset`]: props.inset,\n      [`${prefixClass}--${props.orientation}`]: props.orientation && !props.vertical,\n      [`${prefixClass}--dashed`]: props.dashed\n    }))\n  })\n});\n\nconst _hoisted_1 = [\"aria-orientation\"];\nconst _hoisted_2 = {\n  key: 0,\n  class: \"va-divider__text\"\n};\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", {\n    role: \"separator\",\n    class: normalizeClass([\"va-divider\", _ctx.classComputed]),\n    \"aria-orientation\": _ctx.vertical ? \"vertical\" : \"horizontal\"\n  }, [_ctx.hasSlot && !_ctx.vertical ? (openBlock(), createElementBlock(\"div\", _hoisted_2, [renderSlot(_ctx.$slots, \"default\")])) : createCommentVNode(\"\", true)], 10, _hoisted_1);\n}\n\nvar _VaDivider = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { _VaDivider as _ };\nimport './VaDivider.css';","map":{"version":3,"mappings":";;;;;;AAoBA,MAAMA,cAAc,YAApB;;AAEA,MAAKC,YAAaC,gBAAa;EAC7BC,MAAM,WADuB;EAE7BC,OAAO,EACL,GAAGC,sBADE;IAELC,UAAU;MAAEC,MAAMC,OAAR;MAAiBC,SAAS;IAA1B,CAFL;IAGLC,QAAQ;MAAEH,MAAMC,OAAR;MAAiBC,SAAS;IAA1B,CAHH;IAILE,OAAO;MAAEJ,MAAMC,OAAR;MAAiBC,SAAS;IAA1B,CAJF;IAKLG,aAAa;MACXL,MAAMM,MADK;MAEXJ,SAAS,QAFE;MAGXK,WAAYC,KAAD,IAAmB,CAAC,MAAD,EAAS,OAAT,EAAkB,QAAlB,EAA4BC,QAA5B,CAAqCD,KAArC;IAHnB;EALR,CAFsB;EAa7BE,OAAO,CAACb,KAAD,EAAQ;IAAEc;EAAF,CAAR,MAAuB;IAC5BC,SAASC,SAAS,MAAM,CAAC,CAACF,MAAMT,OAAvB,CADmB;IAE5BY,eAAeD,SAAS,OAAO;MAC7B,CAAC,GAAGpB,uBAAJ,GAA8BI,MAAME,QADP;MAE7B,CAAC,GAAGN,oBAAJ,GAA2BI,MAAMO,KAFJ;MAG7B,CAAC,GAAGX,gBAAgBI,MAAMQ,aAA1B,GAA0CR,MAAMQ,WAAN,IAAqB,CAACR,MAAME,QAHzC;MAI7B,CAAC,GAAGN,qBAAJ,GAA4BI,MAAMM;IAJL,CAAP,CAAT;EAFa,CAAvB;AAbsB,CAAb,CAAlB;;;;;EAbMY,OAAM;;;;sBARVC,mBAYM,KAZNA,EAYM;IAXJC,MAAK,WAWD;IAVJF,OAAKG,eAAC,eACEC,KAAaL,aADf,CAADI,CAUD;IARH,oBAAkBC,KAAQpB,QAAR,GAAQ,UAAR,GAAQ;EAQvB,CAZNiB,EAI6B,CAGnBG,gBAAO,CAAKA,aAAZ,IAAYC,aADpBJ,mBAKM,KALNA,cAKM,CADJK,WAAQF,WAARE,EAAQ,SAARA,CACI,CALNL,CACQ,IAGEM,4BANiB,CAJ7BN,EAUY,EAVZA,EAUYO,UAVZP","names":["prefixClass","_sfc_main","defineComponent","name","props","useComponentPresetProp","vertical","type","Boolean","default","dashed","inset","orientation","String","validator","value","includes","setup","slots","hasSlot","computed","classComputed","class","_createElementBlock","role","_normalizeClass","_ctx","_openBlock","_renderSlot","_createCommentVNode","_hoisted_1"],"sources":["../../../../../src/components/va-divider/VaDivider.vue"],"sourcesContent":["<template>\n  <div\n    role=\"separator\"\n    class=\"va-divider\"\n    :class=\"classComputed\"\n    :aria-orientation=\"vertical ? 'vertical' : 'horizontal'\"\n  >\n    <div\n      v-if=\"hasSlot && !vertical\"\n      class=\"va-divider__text\"\n    >\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, PropType } from 'vue'\nimport { useComponentPresetProp } from '../../composables/useComponentPreset'\n\nconst prefixClass = 'va-divider'\n\nexport default defineComponent({\n  name: 'VaDivider',\n  props: {\n    ...useComponentPresetProp,\n    vertical: { type: Boolean, default: false },\n    dashed: { type: Boolean, default: false },\n    inset: { type: Boolean, default: false },\n    orientation: {\n      type: String as PropType<'left' | 'right' | 'center'>,\n      default: 'center',\n      validator: (value: string) => ['left', 'right', 'center'].includes(value),\n    },\n  },\n  setup: (props, { slots }) => ({\n    hasSlot: computed(() => !!slots.default),\n    classComputed: computed(() => ({\n      [`${prefixClass}--vertical`]: props.vertical,\n      [`${prefixClass}--inset`]: props.inset,\n      [`${prefixClass}--${props.orientation}`]: props.orientation && !props.vertical,\n      [`${prefixClass}--dashed`]: props.dashed,\n    })),\n  }),\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-divider {\n  display: var(--va-divider-display);\n  margin: var(--va-divider-margin) 0;\n  font-family: var(--va-font-family);\n\n  &--vertical {\n    margin: 0 var(--va-divider-margin);\n    border-top: var(--va-divider-vertical-border-top);\n    border-right-width: var(--va-divider-vertical-border-right-width);\n    border-right-style: var(--va-divider-vertical-border-right-style);\n    border-right-color: var(--va-divider-vertical-border-right-color);\n    display: var(--va-divider-vertical-display);\n    vertical-align: top;\n\n    &.va-divider--dashed {\n      border-right-style: dashed;\n    }\n  }\n\n  &--inset {\n    margin: var(--va-divider-inset-margin);\n\n    &.va-divider--vertical {\n      margin: var(--va-divider-inset-horizontal-margin) var(--va-divider-margin);\n    }\n  }\n\n  &::before,\n  &::after {\n    content: \"\";\n    flex: 1;\n    border-top-width: var(--va-divider-line-width);\n    border-top-style: var(--va-divider-border-top-style);\n    border-top-color: var(--va-divider-border-top-color);\n  }\n\n  &--dashed {\n    &::before,\n    &::after {\n      border-top-style: var(--va-divider-dashed-border-top-style);\n    }\n  }\n\n  &--left {\n    &::before {\n      flex: 0 var(--va-divider-text-horizontal-offset);\n    }\n  }\n\n  &--right {\n    &::after {\n      flex: 0 var(--va-divider-text-horizontal-offset);\n    }\n  }\n\n  &__text {\n    font-size: var(--va-divider-text-font-size);\n    line-height: var(--va-divider-text-line-height);\n    height: var(--va-divider-text-height);\n    vertical-align: var(--va-divider-text-vertical-align);\n    transform: var(--va-divider-text-transform);\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}