{"ast":null,"code":"import { defineComponent, shallowRef, computed, ref, onMounted, nextTick, onBeforeUnmount, openBlock, createElementBlock, createElementVNode, normalizeStyle, renderSlot, normalizeClass, createCommentVNode } from \"vue\";\nimport { n as noop_1 } from \"../../../vendor.js\";\nimport { g as getWindow } from \"../../utils/ssr.js\";\nimport { u as useComponentPresetProp } from \"../../composables/useComponentPreset.js\";\nimport { u as useEventsHandlerWithThrottle, h as handleThrottledEvent, g as getWindowHeight } from \"./VaAffix-utils.js\";\nimport { _ as _export_sfc } from \"../../../plugin-vue_export-helper.js\";\n\nvar VaAffix_vue_vue_type_style_index_0_lang = /* @__PURE__ */(() => \":root{--va-affix-affixed-z-index: 10;--va-affix-affixed-position: fixed}.va-affix{font-family:var(--va-font-family)}.va-affix--affixed{position:var(--va-affix-affixed-position);z-index:var(--va-affix-affixed-z-index)}\\n\")();\n\nconst _sfc_main = defineComponent({\n  name: \"VaAffix\",\n  emits: [\"change\"],\n  props: { ...useComponentPresetProp,\n    offsetTop: {\n      type: Number,\n      default: void 0\n    },\n    offsetBottom: {\n      type: Number,\n      default: void 0\n    },\n    target: {\n      type: [Object, Function],\n      default: getWindow\n    }\n  },\n\n  setup(props, {\n    emit\n  }) {\n    const element = shallowRef();\n\n    const getTargetElement = () => typeof props.target === \"function\" ? props.target() : props.target;\n\n    const isAffixed = computed(() => state.value.isTopAffixed || state.value.isBottomAffixed);\n    const state = ref({\n      isTopAffixed: false,\n      isBottomAffixed: false\n    });\n\n    const getState = () => state.value;\n\n    const setState = newState => {\n      state.value = newState;\n      emit(\"change\", isAffixed);\n    };\n\n    const calculateTop = () => {\n      const target = getTargetElement();\n\n      if (!target) {\n        return 0;\n      }\n\n      if (props.offsetTop === void 0) {\n        return;\n      }\n\n      if (!(target instanceof Window)) {\n        const {\n          top\n        } = target.getBoundingClientRect();\n        return top + props.offsetTop;\n      }\n\n      return props.offsetTop;\n    };\n\n    const calculateBottom = () => {\n      const target = getTargetElement();\n\n      if (!target) {\n        return 0;\n      }\n\n      if (props.offsetBottom === void 0) {\n        return;\n      }\n\n      if (!(target instanceof Window)) {\n        const {\n          bottom\n        } = target.getBoundingClientRect();\n        const {\n          borderTopWidth,\n          borderBottomWidth\n        } = getComputedStyle(target);\n        const {\n          offsetHeight,\n          clientHeight\n        } = target;\n        const scrollBarHeight = offsetHeight - clientHeight - parseInt(borderTopWidth) - parseInt(borderBottomWidth);\n        return getWindowHeight() - (bottom - props.offsetBottom) + scrollBarHeight;\n      }\n\n      return props.offsetBottom;\n    };\n\n    const convertToPixels = calculate => {\n      const result = calculate();\n      return result === void 0 ? void 0 : `${result}px`;\n    };\n\n    const computedClass = computed(() => [{\n      \"va-affix--affixed\": isAffixed\n    }]);\n    const computedStyle = computed(() => ({\n      top: state.value.isTopAffixed ? convertToPixels(calculateTop) : void 0,\n      bottom: state.value.isBottomAffixed ? convertToPixels(calculateBottom) : void 0,\n      width: `${state.value.width}px`\n    }));\n    const initialPosition = ref();\n\n    const throttledEventHandler = (eventName, event) => {\n      const context = { ...props,\n        initialPosition: initialPosition.value,\n        element: element.value,\n        target: getTargetElement(),\n        setState,\n        getState\n      };\n\n      if (!eventName || eventName === \"resize\") {\n        handleThrottledEvent(eventName, context);\n      } else if (event && event.target) {\n        const target = getTargetElement();\n\n        if (target === event.target || target instanceof Window) {\n          handleThrottledEvent(eventName, context);\n        } else {\n          setState({\n            isBottomAffixed: false,\n            isTopAffixed: false\n          });\n        }\n      }\n    };\n\n    let clearEventListeners = noop_1;\n    onMounted(() => {\n      var _a;\n\n      initialPosition.value = (_a = element.value) == null ? void 0 : _a.getBoundingClientRect();\n      const events = [\"scroll\", \"resize\"];\n      clearEventListeners = useEventsHandlerWithThrottle(events, {\n        handler: throttledEventHandler\n      });\n      nextTick(() => {\n        throttledEventHandler(null);\n      });\n    });\n    onBeforeUnmount(clearEventListeners);\n    return {\n      computedClass,\n      computedStyle,\n      isAffixed,\n      element\n    };\n  }\n\n});\n\nconst _hoisted_1 = {\n  ref: \"element\",\n  class: \"va-affix\"\n};\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", _hoisted_1, [createElementVNode(\"div\", {\n    style: normalizeStyle({\n      visibility: _ctx.isAffixed ? \"hidden\" : \"inherit\"\n    })\n  }, [renderSlot(_ctx.$slots, \"default\")], 4), _ctx.isAffixed ? (openBlock(), createElementBlock(\"div\", {\n    key: 0,\n    class: normalizeClass(_ctx.computedClass),\n    style: normalizeStyle(_ctx.computedStyle)\n  }, [renderSlot(_ctx.$slots, \"default\")], 6)) : createCommentVNode(\"\", true)], 512);\n}\n\nvar _VaAffix = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { _VaAffix as _ };\nimport './VaAffix.css';","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","name","emits","props","useComponentPresetProp","offsetTop","type","Number","default","offsetBottom","target","Object","Function","getWindow","setup","emit","element","shallowRef","computed","state","value","isTopAffixed","isBottomAffixed","ref","newState","isAffixed","calculateTop","getTargetElement","Window","top","getBoundingClientRect","calculateBottom","bottom","borderTopWidth","borderBottomWidth","getComputedStyle","offsetHeight","clientHeight","scrollBarHeight","parseInt","getWindowHeight","calculate","result","convertToPixels","width","initialPosition","eventName","event","context","setState","getState","handleThrottledEvent","clearEventListeners","noop","onMounted","useEventsHandlerWithThrottle","events","handler","throttledEventHandler","nextTick","onBeforeUnmount","computedClass","computedStyle","class","_createElementBlock","_createElementVNode","style","_normalizeStyle","_ctx","_renderSlot","key","_normalizeClass","_createCommentVNode"],"sources":["../../../../../src/components/va-affix/VaAffix.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"element\"\n    class=\"va-affix\"\n  >\n    <div :style=\"{ visibility: isAffixed ? 'hidden' : 'inherit' }\">\n      <slot />\n    </div>\n    <div\n      v-if=\"isAffixed\"\n      :class=\"computedClass\"\n      :style=\"computedStyle\"\n    >\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, PropType, ref, nextTick, onMounted, onBeforeUnmount, shallowRef } from 'vue'\nimport noop from 'lodash/noop.js'\n\nimport { getWindow } from '../../utils/ssr'\nimport { useComponentPresetProp } from '../../composables/useComponentPreset'\n\nimport {\n  handleThrottledEvent,\n  useEventsHandlerWithThrottle,\n  getWindowHeight,\n  State,\n  Context,\n} from './VaAffix-utils'\n\nexport default defineComponent({\n  name: 'VaAffix',\n  emits: ['change'],\n  props: {\n    ...useComponentPresetProp,\n    offsetTop: { type: Number, default: undefined },\n    offsetBottom: { type: Number, default: undefined },\n    target: { type: [Object, Function] as PropType<HTMLElement | Window | (() => HTMLElement | Window)>, default: getWindow },\n  },\n  setup (props, { emit }) {\n    const element = shallowRef<HTMLElement>()\n\n    const getTargetElement = () => (typeof props.target === 'function' ? props.target() : props.target)\n\n    const isAffixed = computed(() => state.value.isTopAffixed || state.value.isBottomAffixed)\n\n    const state = ref<State>({\n      isTopAffixed: false,\n      isBottomAffixed: false,\n    })\n    const getState = () => state.value\n    const setState = (newState: State) => {\n      state.value = newState\n      emit('change', isAffixed)\n    }\n\n    const calculateTop = () => {\n      const target = getTargetElement()\n\n      if (!target) {\n        return 0\n      }\n\n      if (props.offsetTop === undefined) { return }\n\n      if (!(target instanceof Window)) {\n        const { top } = target.getBoundingClientRect()\n        return top + props.offsetTop\n      }\n\n      return props.offsetTop\n    }\n\n    const calculateBottom = () => {\n      const target = getTargetElement()\n\n      if (!target) { return 0 }\n\n      if (props.offsetBottom === undefined) { return }\n\n      if (!(target instanceof Window)) {\n        const { bottom } = target.getBoundingClientRect()\n        const { borderTopWidth, borderBottomWidth } = getComputedStyle(target)\n        const { offsetHeight, clientHeight } = target\n\n        const scrollBarHeight = offsetHeight - clientHeight - parseInt(borderTopWidth) - parseInt(borderBottomWidth)\n\n        return getWindowHeight() - (bottom - props.offsetBottom) + scrollBarHeight\n      }\n\n      return props.offsetBottom\n    }\n\n    const convertToPixels = (calculate: () => number | undefined) => {\n      const result = calculate()\n      return result === undefined ? undefined : `${result}px`\n    }\n\n    const computedClass = computed(() => [{ 'va-affix--affixed': isAffixed }])\n    const computedStyle = computed(() => ({\n      top: state.value.isTopAffixed ? convertToPixels(calculateTop) : undefined,\n      bottom: state.value.isBottomAffixed ? convertToPixels(calculateBottom) : undefined,\n      width: `${state.value.width}px`,\n    }))\n\n    const initialPosition = ref<DOMRect>()\n    const throttledEventHandler = (eventName: string | null, event?: Event) => {\n      const context: Context = {\n        ...props,\n        initialPosition: initialPosition.value,\n        element: element.value,\n        target: getTargetElement(),\n        setState,\n        getState,\n      }\n\n      if (!eventName || eventName === 'resize') {\n        handleThrottledEvent(eventName, context)\n      } else if (event && event.target) {\n        const target = getTargetElement()\n\n        if (target === event.target || target instanceof Window) {\n          handleThrottledEvent(eventName, context)\n        } else {\n          // if we have a custom target but keep scrolling on another element,\n          // so just disable the affixed state\n          setState({\n            isBottomAffixed: false,\n            isTopAffixed: false,\n          })\n        }\n      }\n    }\n\n    let clearEventListeners: () => any = noop\n\n    onMounted(() => {\n      initialPosition.value = element.value?.getBoundingClientRect()\n\n      const events = ['scroll', 'resize']\n\n      clearEventListeners = useEventsHandlerWithThrottle(events, {\n        handler: throttledEventHandler,\n      })\n\n      nextTick(() => {\n        // pass `null` here to make sure it is an initial call\n        throttledEventHandler(null)\n      })\n    })\n\n    onBeforeUnmount(clearEventListeners)\n\n    return {\n      computedClass,\n      computedStyle,\n      isAffixed,\n      element,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-affix {\n  font-family: var(--va-font-family);\n\n  &--affixed {\n    position: var(--va-affix-affixed-position);\n    z-index: var(--va-affix-affixed-z-index);\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}