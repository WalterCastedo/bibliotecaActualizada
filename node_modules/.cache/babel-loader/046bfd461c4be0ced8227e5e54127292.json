{"ast":null,"code":"import { computed, ref } from \"vue\";\n\nfunction useSyncProp(propRef, propName, emit, defaultValue) {\n  if (defaultValue === void 0) {\n    return {\n      syncProp: computed({\n        set(value) {\n          emit(`update:${propName}`, value);\n        },\n\n        get() {\n          return propRef.value;\n        }\n\n      })\n    };\n  }\n\n  const statefulValue = ref(defaultValue);\n  return {\n    syncProp: computed({\n      set(value) {\n        statefulValue.value = value;\n        emit(`update:${propName}`, value);\n      },\n\n      get() {\n        return (propRef == null ? void 0 : propRef.value) === void 0 ? statefulValue.value : propRef.value;\n      }\n\n    })\n  };\n}\n\nexport { useSyncProp as u };","map":{"version":3,"mappings":";;AAEyD,8BAA6BA,QAA7B,EAAiDC,IAAjD,EAAyFC,YAAzF,EAA2G;EAClK,IAAIA,iBAAiB,MAArB,EAAgC;IACvB;MACLC,UAAUC,SAAS;QACjBC,IAAKC,KAAL,EAAe;UACRL,eAAUD,UAAV,EAAsBM,KAAtB;QACP,CAHiB;;QAIjBC,MAAU;UACR,OAAOC,QAASF,KAAhB;QACF;;MANiB,CAAT;IADL;EAUT;;EAEM,sBAAgBG,IAAOP,YAAP,CAAhB;EAEC;IACLC,UAAUC,SAAyB;MACjCC,IAAKC,KAAL,EAA4B;QAC1BI,cAAcJ,KAAd,GAAsBA,KAAtB;QACKL,eAAUD,UAAV,EAAsBM,KAAtB;MACP,CAJiC;;MAKjCC,MAAuB;QACrB,OAAQ,oCAASD,KAAT,MAAmB,MAAnB,GAAgCI,cAAcJ,KAA9C,GAAuDE,QAAQF,KAAvE;MACF;;IAPiC,CAAzB;EADL;AAWT","names":["propName","emit","defaultValue","syncProp","computed","set","value","get","propRef","ref","statefulValue"],"sources":["../../../../../../src/components/va-date-picker/hooks/sync-prop.ts"],"sourcesContent":["import { ref, computed, Ref, UnwrapRef } from 'vue'\n\nexport function useSyncProp<T, PropName extends string> (propRef: Ref<T> | undefined, propName: PropName, emit: (event: any, newValue: T) => any, defaultValue?: T) {\n  if (defaultValue === undefined) {\n    return {\n      syncProp: computed({\n        set (value: T) {\n          emit(`update:${propName}`, value)\n        },\n        get (): T {\n          return propRef!.value\n        },\n      }),\n    }\n  }\n\n  const statefulValue = ref<T>(defaultValue)\n\n  return {\n    syncProp: computed<NonNullable<T>>({\n      set (value: NonNullable<T>) {\n        statefulValue.value = value as UnwrapRef<NonNullable<T>>\n        emit(`update:${propName}`, value)\n      },\n      get (): NonNullable<T> {\n        return (propRef?.value === undefined ? (statefulValue.value) : propRef.value) as NonNullable<T>\n      },\n    }),\n  }\n}\n"]},"metadata":{},"sourceType":"module"}