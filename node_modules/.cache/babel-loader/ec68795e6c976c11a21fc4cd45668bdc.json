{"ast":null,"code":"import _defineProperty from \"/Applications/MAMP/htdocs/vue2 biblioteca/proyectoFinal/bibliotecauno/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.unshift.js\";\n\n/*!\n * Chart.js v4.2.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nexport { aL as Ticks, d as defaults } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n\n        this._notify(chart, anims, date, 'complete');\n\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n\n    return anims;\n  }\n\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n\n    this._getAnims(chart).items.push(...items);\n  }\n\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  start(chart) {\n    const anims = this._charts.get(chart);\n\n    if (!anims) {\n      return;\n    }\n\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n\n    const anims = this._charts.get(chart);\n\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n\n    return true;\n  }\n\n  stop(chart) {\n    const anims = this._charts.get(chart);\n\n    if (!anims || !anims.items.length) {\n      return;\n    }\n\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n\n    anims.items = [];\n\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n\n}\n\nvar animator = /* #__PURE__ */new Animator();\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n\n};\n\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || elapsed < duration);\n\n    if (!this._active) {\n      this._target[prop] = to;\n\n      this._notify(true);\n\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = elapsed / duration % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({\n        res,\n        rej\n      });\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n\n}\n\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n\n      if (!isObject(cfg)) {\n        return;\n      }\n\n      const resolved = {};\n\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach(prop => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {});\n    }\n\n    return animations;\n  }\n\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n\n    return animations;\n  }\n\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n\n  let options = target.options;\n\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n\n      break;\n    }\n\n    otherValue = stack.values[datasetIndex];\n\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n\n    if (positive && value > 0 || !positive && value < 0) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {\n    chart,\n    _cachedMeta: meta\n  } = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {\n    iScale,\n    vScale,\n    index: datasetIndex\n  } = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {\n      [iAxis]: index,\n      [vAxis]: value\n    } = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent, {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n\n    delete stacks[axis][datasetIndex];\n\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = mode => mode === 'reset' || mode === 'none';\n\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\n\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked && {\n  keys: getSortedDatasetIndices(chart, true),\n  values: null\n};\n\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale ? meta.vScale : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  _destroy() {\n    const meta = this._cachedMeta;\n\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    this._resyncElements(resetNewElements);\n\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  parse(start, count) {\n    const {\n      _cachedMeta: meta,\n      _data: data\n    } = this;\n    const {\n      iScale,\n      _stacked\n    } = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n\n          prev = cur;\n        }\n      }\n\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  parsePrimitiveData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n\n    return parsed;\n  }\n\n  parseArrayData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n\n    return parsed;\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n\n    return parsed;\n  }\n\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {\n      mode\n    });\n  }\n\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n\n    const otherScale = this._getOtherScale(scale);\n\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    const {\n      min: otherMin,\n      max: otherMax\n    } = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n\n      if (sorted) {\n        break;\n      }\n    }\n\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n\n    return values;\n  }\n\n  getMaxOverflow() {\n    return false;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  update(mode) {}\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || elements.length - start;\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n\n      if (element.hidden) {\n        continue;\n      }\n\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n\n    const context = () => this.getContext(index, active, mode);\n\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n\n    if (cached) {\n      return cached;\n    }\n\n    let options;\n\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n\n    const animations = new Animations(chart, options && options.animations);\n\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {\n      sharedOptions,\n      includeOptions\n    };\n  }\n\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: !active && this.getSharedOptions(options) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = arr => {\n      arr.length += count;\n\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {}\n\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n\n    meta.data.splice(start, count);\n  }\n\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n\n    const newCount = arguments.length - 2;\n\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n\n}\n\n_defineProperty(DatasetController, \"defaults\", {});\n\n_defineProperty(DatasetController, \"datasetElementType\", null);\n\n_defineProperty(DatasetController, \"dataElementType\", null);\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n\n  return scale._cache.$bar;\n}\n\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\n\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n\n  return {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  };\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {\n      top: true,\n      right: true,\n      bottom: true,\n      left: true\n    };\n    return;\n  }\n\n  const {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  } = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {\n  inflateAmount\n}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\n\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n\n    return parsed;\n  }\n\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  getMaxOverflow() {\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      index,\n      _cachedMeta: {\n        vScale\n      }\n    } = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n\n    const ruler = this._getRuler();\n\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n        base,\n        head: base\n      } : this._calculateBarValuePixels(i);\n\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  _getStacks(last, dataIndex) {\n    const {\n      iScale\n    } = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type).filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = meta => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n        stacks.push(meta.stack);\n      }\n\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n\n    const index = name !== undefined ? stacks.indexOf(name) : -1;\n    return index === -1 ? stacks.length - 1 : index;\n  }\n\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  _calculateBarValuePixels(index) {\n    const {\n      _cachedMeta: {\n        vScale,\n        _stacked,\n        index: datasetIndex\n      },\n      options: {\n        base: baseValue,\n        minBarLength\n      }\n    } = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n\n      center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n\n_defineProperty(BarController, \"id\", 'bar');\n\n_defineProperty(BarController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n});\n\n_defineProperty(BarController, \"overrides\", {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n});\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n\n    return parsed;\n  }\n\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n\n    return parsed;\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n\n    return parsed;\n  }\n\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n\n    return max > 0 && max;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale\n    } = this._cachedMeta;\n\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    if (values.$shared) {\n      values = Object.assign({}, values, {\n        $shared: false\n      });\n    }\n\n    const radius = values.radius;\n\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n\n}\n\n_defineProperty(BubbleController, \"id\", 'bubble');\n\n_defineProperty(BubbleController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n});\n\n_defineProperty(BubbleController, \"overrides\", {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n});\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n\n  return {\n    ratioX,\n    ratioY,\n    offsetX,\n    offsetY\n  };\n}\n\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = i => +data[i];\n\n      if (isObject(data[start])) {\n        const {\n          key = 'value'\n        } = this._parsing;\n\n        getter = i => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n\n        const rotation = controller._getRotation();\n\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min\n    };\n  }\n\n  update(mode) {\n    const chart = this.chart;\n    const {\n      chartArea\n    } = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n\n    const chartWeight = this._getRingWeight(this.index);\n\n    const {\n      circumference,\n      rotation\n    } = this._getRotationExtents();\n\n    const {\n      ratioX,\n      ratioY,\n      offsetX,\n      offsetY\n    } = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n\n    const circumference = this._getCircumference();\n\n    if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n\n    let startAngle = this._getRotation();\n\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n\n    return max;\n  }\n\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n\n}\n\n_defineProperty(DoughnutController, \"id\", 'doughnut');\n\n_defineProperty(DoughnutController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n});\n\n_defineProperty(DoughnutController, \"descriptors\", {\n  _scriptable: name => name !== 'spacing',\n  _indexable: name => name !== 'spacing'\n});\n\n_defineProperty(DoughnutController, \"overrides\", {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            const {\n              labels: {\n                pointStyle,\n                color\n              }\n            } = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                fontColor: color,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n\n      },\n\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n\n    }\n  }\n});\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {\n      dataset: line,\n      data: points = [],\n      _dataset\n    } = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n\n    let {\n      start,\n      count\n    } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale,\n      _stacked,\n      _dataset\n    } = this._cachedMeta;\n\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {\n      spanGaps,\n      segment\n    } = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n\n}\n\n_defineProperty(LineController, \"id\", 'line');\n\n_defineProperty(LineController, \"defaults\", {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n});\n\n_defineProperty(LineController, \"overrides\", {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n});\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - radiusLength * this.index;\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n  }\n\n}\n\n_defineProperty(PolarAreaController, \"id\", 'polarArea');\n\n_defineProperty(PolarAreaController, \"defaults\", {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n});\n\n_defineProperty(PolarAreaController, \"overrides\", {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            const {\n              labels: {\n                pointStyle,\n                color\n              }\n            } = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                fontColor: color,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n\n      },\n\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n});\n\nclass PieController extends DoughnutController {}\n\n_defineProperty(PieController, \"id\", 'pie');\n\n_defineProperty(PieController, \"defaults\", {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n});\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n}\n\n_defineProperty(RadarController, \"id\", 'radar');\n\n_defineProperty(RadarController, \"defaults\", {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n});\n\n_defineProperty(RadarController, \"overrides\", {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n});\n\nclass ScatterController extends DatasetController {\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {\n      data: points = []\n    } = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n\n    let {\n      start,\n      count\n    } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n      const {\n        dataset: line,\n        _dataset\n      } = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {\n      showLine\n    } = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale,\n      _stacked,\n      _dataset\n    } = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {\n      spanGaps,\n      segment\n    } = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n}\n\n_defineProperty(ScatterController, \"id\", 'scatter');\n\n_defineProperty(ScatterController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n});\n\n_defineProperty(ScatterController, \"overrides\", {\n  interaction: {\n    mode: 'point'\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n});\n\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\n\n\nclass DateAdapterBase {\n  /**\n  * Override default date adapter methods.\n  * Accepts type parameter to define options type.\n  * @example\n  * Chart._adapters._date.override<{myAdapterOption: string}>({\n  *   init() {\n  *     console.log(this.options.myAdapterOption);\n  *   }\n  * })\n  */\n  static override(members) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  constructor(options) {\n    this.options = options || {};\n  } // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n\n  init() {}\n\n  formats() {\n    return abstract();\n  }\n\n  parse() {\n    return abstract();\n  }\n\n  format() {\n    return abstract();\n  }\n\n  add() {\n    return abstract();\n  }\n\n  diff() {\n    return abstract();\n  }\n\n  startOf() {\n    return abstract();\n  }\n\n  endOf() {\n    return abstract();\n  }\n\n}\n\nvar adapters = {\n  _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {\n    controller,\n    data,\n    _sorted\n  } = metaset;\n  const iScale = controller._cachedMeta.iScale;\n\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\n\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {\n      index,\n      data\n    } = metasets[i];\n    const {\n      lo,\n      hi\n    } = binarySearch(metasets[i], axis, value, intersect);\n\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {\n      startAngle,\n      endAngle\n    } = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {\n      angle\n    } = getAngleFromPoint(element, {\n      x: position.x,\n      y: position.y\n    });\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      items = [{\n        element,\n        datasetIndex,\n        index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n\n  return items;\n}\n\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach(meta => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        if (element && !element.skip) {\n          elements.push({\n            element,\n            datasetIndex: meta.index,\n            index\n          });\n        }\n      });\n      return elements;\n    },\n\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n\n        for (let i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex,\n            index: i\n          });\n        }\n      }\n\n      return items;\n    },\n\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n\n  }\n};\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({\n      position: pos,\n      options: {\n        stack,\n        stackWeight = 1\n      }\n    } = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight\n    });\n  }\n\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n\n  for (const wrap of layouts) {\n    const {\n      stack,\n      pos,\n      stackWeight\n    } = wrap;\n\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n\n    const _stack = stacks[stack] || (stacks[stack] = {\n      count: 0,\n      placed: 0,\n      weight: 0,\n      size: 0\n    });\n\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n\n  return stacks;\n}\n\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {\n    vBoxMaxWidth,\n    hBoxMaxHeight\n  } = params;\n  let i, ilen, layout;\n\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {\n      fullSize\n    } = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {\n    pos,\n    box\n  } = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n\n    const stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(pos => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    const {\n      same,\n      other\n    } = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {\n    x,\n    y\n  } = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {\n      count: 1,\n      placed: 0,\n      weight: 1\n    };\n    const weight = layout.stackWeight / stack.weight || 1;\n\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height1 = chartArea.h * weight;\n      const width1 = stack.size || box.width;\n\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width1, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width1, height1);\n      }\n\n      stack.start = x;\n      stack.placed += height1;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) => wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, layout => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      });\n    });\n  }\n\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n\n  releaseContext(context) {\n    return false;\n  }\n\n  addEventListener(chart, type, listener) {}\n\n  removeEventListener(chart, type, listener) {}\n\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  isAttached(canvas) {\n    return true;\n  }\n\n  updateConfig(config) {}\n\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\nconst eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {\n    x,\n    y\n  } = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n\n  const container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n\n    if (width === 0 && height === 0) {\n      return;\n    }\n\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled(event => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n  addListener(canvas, type, proxy);\n  return proxy;\n}\n\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  releaseContext(context) {\n    const canvas = context.canvas;\n\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(prop => {\n      const value = initial[prop];\n\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach(key => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n\n    return !!(container && container.isConnected);\n  }\n\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    _defineProperty(this, \"active\", false);\n  }\n\n  tooltipPosition(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  getProps(props, final) {\n    const anims = this.$animations;\n\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this;\n    }\n\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n\n}\n\n_defineProperty(Element, \"defaults\", {});\n\n_defineProperty(Element, \"defaultRoutes\", undefined);\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n\n  const tickLength = scale._tickSize();\n\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n\n  return Math.max(spacing, 1);\n}\n\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n\n  return result;\n}\n\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n\n  return diff;\n}\n\nconst reverseAlign = align => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n\n  return result;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n\n    lineValue += validIndex < index ? offset : -offset;\n\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction garbageCollect(caches, length) {\n  each(caches, cache => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {\n    top,\n    left,\n    bottom,\n    right,\n    chart\n  } = scale;\n  const {\n    chartArea,\n    scales\n  } = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID1 = Object.keys(position)[0];\n      const value1 = position[positionAxisID1];\n      titleX = scales[positionAxisID1].getPixelForValue(value1) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n\n  return {\n    titleX,\n    titleY,\n    maxWidth,\n    rotation\n  };\n}\n\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  parse(raw, index) {\n    return raw;\n  }\n\n  getUserBounds() {\n    let {\n      _userMin,\n      _userMax,\n      _suggestedMin,\n      _suggestedMax\n    } = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n\n  getMinMax(canStack) {\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {\n        min,\n        max\n      };\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  getTicks() {\n    return this.ticks;\n  }\n\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n\n    return items;\n  }\n\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    const {\n      beginAtZero,\n      grace,\n      ticks: tickOpts\n    } = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n\n  determineDataLimits() {}\n\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n\n  buildTicks() {\n    return [];\n  }\n\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n\n  afterAutoSkip() {}\n\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {\n      chart,\n      options: {\n        ticks: tickOpts,\n        title: titleOpts,\n        grid: gridOpts\n      }\n    } = this;\n\n    const display = this._isVisible();\n\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      if (tickOpts.display && this.ticks.length) {\n        const {\n          first,\n          last,\n          widest,\n          highest\n        } = this._getLabelSizes();\n\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {\n      ticks: {\n        align,\n        padding\n      },\n      position\n    } = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n\n  isHorizontal() {\n    const {\n      axis,\n      position\n    } = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  _computeLabelSizes(ticks, length) {\n    const {\n      ctx,\n      _longestTextCache: caches\n    } = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {\n        data: {},\n        gc: []\n      };\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = idx => ({\n      width: widths[idx] || 0,\n      height: heights[idx] || 0\n    });\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights\n    };\n  }\n\n  getLabelForValue(value) {\n    return value;\n  }\n\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n\n  getValueForPixel(pixel) {}\n\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  getBaseValue() {\n    const {\n      min,\n      max\n    } = this;\n    return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  }\n\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n\n    return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {\n      grid,\n      position,\n      border\n    } = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n\n    const alignBorderValue = function (pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID1 = Object.keys(position)[0];\n        const value1 = position[positionAxisID1];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID1].getPixelForValue(value1));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {\n      position,\n      ticks: optionTicks\n    } = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {\n      align,\n      crossAlign,\n      padding,\n      mirror\n    } = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret1 = this._getYAxisLabelAlignment(tl);\n\n      textAlign = ret1.textAlign;\n      x = ret1.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID1 = Object.keys(position)[0];\n        const value1 = position[positionAxisID1];\n        x = this.chart.scales[positionAxisID1].getPixelForValue(value1);\n      }\n\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n\n        if (mirror) {\n          textOffset *= -1;\n        }\n\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += lineHeight / 2 * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n          case 'middle':\n            top -= height / 2;\n            break;\n\n          case 'bottom':\n            top -= height;\n            break;\n        }\n\n        switch (textAlign) {\n          case 'center':\n            left -= width / 2;\n            break;\n\n          case 'right':\n            left -= width;\n            break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {\n      position,\n      ticks\n    } = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {\n      position,\n      ticks: {\n        crossAlign,\n        mirror,\n        padding\n      }\n    } = this.options;\n\n    const labelSizes = this._getLabelSizes();\n\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {\n      textAlign,\n      x\n    };\n  }\n\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {\n        top: 0,\n        left: this.left,\n        bottom: chart.height,\n        right: this.right\n      };\n    }\n\n    if (position === 'top' || position === 'bottom') {\n      return {\n        top: this.top,\n        left: 0,\n        bottom: this.bottom,\n        right: chart.width\n      };\n    }\n  }\n\n  drawBackground() {\n    const {\n      ctx,\n      options: {\n        backgroundColor\n      },\n      left,\n      top,\n      width,\n      height\n    } = this;\n\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n\n    return 0;\n  }\n\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine({\n            x: item.x1,\n            y: item.y1\n          }, {\n            x: item.x2,\n            y: item.y2\n          }, item);\n        }\n\n        if (grid.drawTicks) {\n          drawLine({\n            x: item.tx1,\n            y: item.ty1\n          }, {\n            x: item.tx2,\n            y: item.ty2\n          }, {\n            color: item.tickColor,\n            width: item.tickWidth,\n            borderDash: item.tickBorderDash,\n            borderDashOffset: item.tickBorderDashOffset\n          });\n        }\n      }\n    }\n  }\n\n  drawBorder() {\n    const {\n      chart,\n      ctx,\n      options: {\n        border,\n        grid\n      }\n    } = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n\n    if (!axisWidth) {\n      return;\n    }\n\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  drawTitle() {\n    const {\n      ctx,\n      options: {\n        position,\n        title,\n        reverse\n      }\n    } = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: chartArea => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: chartArea => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: chartArea => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  get(id) {\n    return this.items[id];\n  }\n\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n\n      if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n\n    return this.plugins;\n  }\n\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n\n    return item;\n  }\n\n}\n\nvar registry = /* #__PURE__ */new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n\n      this._notify(this._init, chart, 'uninstall');\n    }\n\n    return result;\n  }\n\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n\n}\n\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n\n  for (let i1 = 0; i1 < local.length; i1++) {\n    const plugin = local[i1];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {\n    plugins,\n    localIds\n  };\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n\n  if (options === true) {\n    return {};\n  }\n\n  return options;\n}\n\nfunction createDescriptors(chart, {\n  plugins,\n  localIds\n}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n\n    if (opts === null) {\n      continue;\n    }\n\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {\n        plugin,\n        local: localIds[id]\n      }, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {\n  plugin,\n  local\n}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{\n      axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n\n    this._resolverCache.clear();\n  }\n\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType, () => [[`datasets.${datasetType}`, '']]);\n  }\n\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`, () => [[`datasets.${datasetType}.transitions.${transition}`, `transitions.${transition}`], [`datasets.${datasetType}`, '']]);\n  }\n\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`, () => [[`datasets.${datasetType}.elements.${elementType}`, `datasets.${datasetType}`, `elements.${elementType}`, '']]);\n  }\n\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`, () => [[`plugins.${id}`, ...(plugin.additionalOptionScopes || [])]]);\n  }\n\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n\n    let cache = _scopeCache.get(mainScope);\n\n    if (!cache || resetCache) {\n      cache = new Map();\n\n      _scopeCache.set(mainScope, cache);\n    }\n\n    return cache;\n  }\n\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {\n      options,\n      type\n    } = this;\n\n    const cache = this._cachedScopes(mainScope, resetCache);\n\n    const cached = cache.get(keyLists);\n\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n\n    return array;\n  }\n\n  chartOptionScopes() {\n    const {\n      options,\n      type\n    } = this;\n    return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n      type\n    }, defaults, descriptors];\n  }\n\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {\n      $shared: true\n    };\n    const {\n      resolver,\n      subPrefixes\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n\n    return result;\n  }\n\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {\n      resolver\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n  }\n\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n\n  return cached;\n}\n\nconst hasFunction = value => isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {\n    isScriptable,\n    isIndexable\n  } = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n\n    if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar version = \"4.2.0\";\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\n\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\n\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n\n  return item;\n}\n\nconst instances = {};\n\nconst getChart = key => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter(c => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n\n  for (const key of keys) {\n    const intKey = +key;\n\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n\n  if (isClick) {\n    return lastEvent;\n  }\n\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {\n    xScale,\n    yScale\n  } = meta;\n\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {\n      options: {\n        aspectRatio,\n        maintainAspectRatio\n      },\n      width,\n      height,\n      _aspectRatio\n    } = this;\n\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {\n        width,\n        height\n      };\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {\n      size: newSize\n    });\n    callback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(Object.keys(scaleOpts).map(id => {\n        const scaleOptions = scaleOpts[id];\n        const axis = determineAxis(id, scaleOptions);\n        const isRadial = axis === 'r';\n        const isHorizontal = axis === 'x';\n        return {\n          options: scaleOptions,\n          dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n          dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n        };\n      }));\n    }\n\n    each(items, item => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, scale => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n\n      metasets.splice(numData, numMeta - numData);\n    }\n\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  _removeUnreferencedMetasets() {\n    const {\n      _metasets: metasets,\n      data: {\n        datasets\n      }\n    } = this;\n\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n\n        meta = this.getDatasetMeta(i);\n      }\n\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {\n          datasetElementType,\n          dataElementType\n        } = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n\n    return newControllers;\n  }\n\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  reset() {\n    this._resetElements();\n\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n\n    this._checkEventBindings();\n\n    this._updateHiddenIndices();\n\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {\n        controller\n      } = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n\n    this._updateLayout(minPadding);\n\n    if (!animsDisabled) {\n      each(newControllers, controller => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    this.notifyPlugins('afterUpdate', {\n      mode\n    });\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    const {\n      _active,\n      _lastEvent\n    } = this;\n\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  _updateScales() {\n    each(this.scales, scale => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  _updateHiddenIndices() {\n    const {\n      _hiddenIndices\n    } = this;\n    const changes = this._getUniformDataChanges() || [];\n\n    for (const {\n      method,\n      start,\n      count\n    } of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n\n    const makeSet = idx => new Set(_dataChanges.filter(c => c[0] === idx).map((c, i) => i + ',' + c.splice(1).join(',')));\n\n    const changeSet = makeSet(0);\n\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n\n    return Array.from(changeSet).map(c => c.split(',')).map(a => ({\n      method: a[1],\n      start: +a[2],\n      count: +a[3]\n    }));\n  }\n\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, box => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n\n      if (box.configure) {\n        box.configure();\n      }\n\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i1 = 0, ilen1 = this.data.datasets.length; i1 < ilen1; ++i1) {\n      this._updateDataset(i1, isFunction(mode) ? mode({\n        datasetIndex: i1\n      }) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {\n      mode\n    });\n  }\n\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {\n      meta,\n      index,\n      mode,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({\n        chart: this\n      });\n    }\n  }\n\n  draw() {\n    let i;\n\n    if (this._resizeBeforeDraw) {\n      const {\n        width,\n        height\n      } = this._resizeBeforeDraw;\n\n      this._resize(width, height);\n\n      this._resizeBeforeDraw = null;\n    }\n\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const layers = this._layers;\n\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {\n      chart: this,\n      type: 'chart'\n    }));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {\n        visible\n      });\n      this.update(ctx => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {\n      canvas,\n      ctx\n    } = this;\n\n    this._stop();\n\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  bindEvents() {\n    this.bindUserEvents();\n\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, type => _add(type, listener));\n  }\n\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached;\n\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      this._stop();\n\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({\n      datasetIndex,\n      index\n    }) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n\n    const eventFilter = plugin => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  _handleEvent(e, replay, inChartArea) {\n    const {\n      _active: lastActive = [],\n      options\n    } = this;\n    const useFinalPosition = replay;\n\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n\n    const isClick = _isClickEvent(e);\n\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed || replay) {\n      this._active = active;\n\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n\n}\n\n_defineProperty(Chart, \"defaults\", defaults);\n\n_defineProperty(Chart, \"instances\", instances);\n\n_defineProperty(Chart, \"overrides\", overrides);\n\n_defineProperty(Chart, \"registry\", registry);\n\n_defineProperty(Chart, \"version\", version);\n\n_defineProperty(Chart, \"getChart\", getChart);\n\nfunction invalidatePlugins() {\n  return each(Chart.instances, chart => chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n  const {\n    startAngle,\n    pixelMargin,\n    x,\n    y,\n    outerRadius,\n    innerRadius\n  } = element;\n  let angleMargin = pixelMargin / outerRadius; // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n/**\n * Parse border radius from the provided options\n */\n\n\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2); // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n\n  const computeOuterLimit = val => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */\n\n\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\n\n\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {\n    x,\n    y,\n    startAngle: start,\n    pixelMargin,\n    innerRadius: innerR\n  } = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {\n    outerStart,\n    outerEnd,\n    innerStart,\n    innerEnd\n  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle); // The corner segment from point 2 to point 3\n\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    } // The line from point 3 to point 4\n\n\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y); // The corner segment from point 4 to point 5\n\n    if (innerEnd > 0) {\n      const pCenter1 = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter1.x, pCenter1.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    } // The inner arc from point 5 to point b to point 6\n\n\n    const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true); // The corner segment from point 6 to point 7\n\n    if (innerStart > 0) {\n      const pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter2.x, pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    } // The line from point 7 to point 8\n\n\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y); // The corner segment from point 8 to point 1\n\n    if (outerStart > 0) {\n      const pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter3.x, pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {\n    fullCircles,\n    startAngle,\n    circumference\n  } = element;\n  let endAngle = element.endAngle;\n\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n  const {\n    fullCircles,\n    startAngle,\n    circumference,\n    options\n  } = element;\n  const {\n    borderWidth,\n    borderJoinStyle\n  } = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {\n      angle,\n      distance\n    } = getAngleFromPoint(point, {\n      x: chartX,\n      y: chartY\n    });\n    const {\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius,\n      circumference\n    } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return betweenAngles && withinRadius;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius\n    } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const {\n      offset,\n      spacing\n    } = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {\n      options,\n      circumference\n    } = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n    ctx.restore();\n  }\n\n}\n\n_defineProperty(ArcElement, \"id\", 'arc');\n\n_defineProperty(ArcElement, \"defaults\", {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true\n});\n\n_defineProperty(ArcElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor'\n});\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {\n    start: paramsStart = 0,\n    end: paramsEnd = count - 1\n  } = params;\n  const {\n    start: segmentStart,\n    end: segmentEnd\n  } = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\nfunction pathSegment(ctx, line, segment, params) {\n  const {\n    points,\n    options\n  } = line;\n  const {\n    count,\n    start,\n    loop,\n    ilen\n  } = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {\n    move = true,\n    reverse\n  } = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {\n    count,\n    start,\n    ilen\n  } = pathVars(points, segment, params);\n  const {\n    move = true,\n    reverse\n  } = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = index => (start + (reverse ? ilen - index : index)) % count;\n\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n\n    lastY = y;\n  }\n\n  drawX();\n}\n\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n\n  if (!path) {\n    path = line._path = new Path2D();\n\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {\n    segments,\n    options\n  } = line;\n\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n\n    if (segmentMethod(ctx, line, segment, {\n      start,\n      end: start + count - 1\n    })) {\n      ctx.closePath();\n    }\n\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n\n    const segments = _boundSegments(this, {\n      property,\n      start: value,\n      end: value\n    });\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n\n    const _interpolate = _getInterpolationMethod(options);\n\n    let i, ilen;\n\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {\n        start,\n        end\n      } = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n\n    return result.length === 1 ? result[0] : result;\n  }\n\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  path(ctx, start, count) {\n    const segments = this.segments;\n\n    const segmentMethod = _getSegmentMethod(this);\n\n    let loop = this._loop;\n    start = start || 0;\n    count = count || this.points.length - start;\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {\n        start,\n        end: start + count - 1\n      });\n    }\n\n    return !!loop;\n  }\n\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n\n}\n\n_defineProperty(LineElement, \"id\", 'line');\n\n_defineProperty(LineElement, \"defaults\", {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n});\n\n_defineProperty(LineElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n});\n\n_defineProperty(LineElement, \"descriptors\", {\n  _scriptable: true,\n  _indexable: name => name !== 'borderDash' && name !== 'fill'\n});\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {\n    [axis]: value\n  } = el.getProps([axis], useFinalPosition);\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\n\nclass PointElement extends Element {\n  /**\n  * @type {any}\n  */\n\n  /**\n  * @type {any}\n  */\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx, area) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {}; // @ts-expect-error Fallbacks should never be hit in practice\n\n    return options.radius + options.hitRadius;\n  }\n\n}\n\n_defineProperty(PointElement, \"id\", 'point');\n\n_defineProperty(PointElement, \"defaults\", {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n});\n\n_defineProperty(PointElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n});\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {\n    x,\n    y,\n    base,\n    width,\n    height\n  } = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {\n    enableBorderRadius\n  } = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {\n      inflateAmount,\n      options: {\n        borderColor,\n        backgroundColor\n      }\n    } = this;\n    const {\n      inner,\n      outer\n    } = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      base,\n      horizontal\n    } = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n\n}\n\n_defineProperty(BarElement, \"id\", 'bar');\n\n_defineProperty(BarElement, \"defaults\", {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n});\n\n_defineProperty(BarElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n});\n\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\nconst BORDER_COLORS = ['rgb(54, 162, 235)', 'rgb(255, 99, 132)', 'rgb(255, 159, 64)', 'rgb(255, 205, 86)', 'rgb(75, 192, 192)', 'rgb(153, 102, 255)', 'rgb(201, 203, 207)' // grey\n]; // Border colors with 50% transparency\n\nconst BACKGROUND_COLORS = /* #__PURE__ */BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset, i) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset, i) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset, i) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n  return i;\n}\n\nfunction getColorizer(chart) {\n  let i = 0;\n  return (dataset, datasetIndex) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(descriptors) {\n  let k;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(descriptor) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nvar plugin_colors = {\n  id: 'colors',\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  },\n\n  beforeLayout(chart, _args, options) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {\n        datasets\n      },\n      options: chartOptions\n    } = chart.config;\n    const {\n      elements\n    } = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n    datasets.forEach(colorizer);\n  }\n\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {\n      x: pointAx,\n      y: pointAy\n    } = data[a];\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({ ...data[intermediateIndex1],\n            x: avgX\n          });\n        }\n\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({ ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(dataset => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {\n    iScale\n  } = meta;\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {\n    start,\n    count\n  };\n}\n\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {\n        _data,\n        indexAxis\n      } = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n\n      if (chart.options.parsing) {\n        return;\n      }\n\n      let {\n        start,\n        count\n      } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function () {\n            return this._decimated;\n          },\n          set: function (d) {\n            this._data = d;\n          }\n        });\n      }\n\n      let decimated;\n\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n\n        default:\n          throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {\n      start,\n      end\n    } = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n\n  return parts;\n}\n\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n\n  return {\n    property,\n    start,\n    end\n  };\n}\n\nfunction _pointsFromSegments(boundary, line) {\n  const {\n    x = null,\n    y = null\n  } = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({\n    start,\n    end\n  }) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y\n      });\n      points.push({\n        x: last.x,\n        y\n      });\n    } else if (x !== null) {\n      points.push({\n        x,\n        y: first.y\n      });\n      points.push({\n        x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\n\nfunction _findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    const point = points[end];\n\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {\n      tension: 0\n    },\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n\n  return pixel;\n}\n\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n\n  return value;\n}\n\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {\n    scale,\n    index,\n    line\n  } = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n\n  return new LineElement({\n    points,\n    options: {}\n  });\n}\n\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n\n    if (meta.index === index) {\n      break;\n    }\n\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n\n  return below;\n}\n\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {\n      first,\n      last,\n      point\n    } = findPoint(line, sourcePoint, 'x');\n\n    if (!point || first && last) {\n      continue;\n    }\n\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n\n      if (!last) {\n        break;\n      }\n    }\n  }\n\n  points.push(...postponed);\n}\n\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n\n  return {\n    first,\n    last,\n    point\n  };\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    bounds = bounds || {\n      start: 0,\n      end: TAU\n    };\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n\n}\n\nfunction _getTarget(source) {\n  const {\n    chart,\n    fill,\n    line\n  } = source;\n\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n\n  return computeLinearBoundary(source);\n}\n\nfunction computeLinearBoundary(source) {\n  const {\n    scale = {},\n    fill\n  } = source;\n\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {\n    scale,\n    fill\n  } = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n\n  const value = _getTargetValue(fill, scale, start);\n\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n\n  const {\n    line,\n    scale,\n    axis\n  } = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {\n    above = color,\n    below = color\n  } = fillOption || {};\n\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line,\n      target,\n      above,\n      below,\n      area,\n      scale,\n      axis\n    });\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {\n    line,\n    target,\n    above,\n    below,\n    area,\n    scale\n  } = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {\n      line,\n      target,\n      color: above,\n      scale,\n      property\n    });\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n\n  fill(ctx, {\n    line,\n    target,\n    color: below,\n    scale,\n    property\n  });\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {\n    segments,\n    points\n  } = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n\n  for (const segment of segments) {\n    const {\n      start,\n      end\n    } = segment;\n    const firstPoint = points[start];\n\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n\n    lineLoop = !!target.pathSegment(ctx, segment, {\n      move: lineLoop\n    });\n\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {\n    line,\n    target,\n    property,\n    color,\n    scale\n  } = cfg;\n\n  const segments = _segments(line, target, property);\n\n  for (const {\n    source: src,\n    target: tgt,\n    start,\n    end\n  } of segments) {\n    const {\n      style: {\n        backgroundColor = color\n      } = {}\n    } = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {\n        move: lineLoop,\n        reverse: true\n      });\n      loop = lineLoop && targetLoop;\n\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {\n    top,\n    bottom\n  } = scale.chart.chartArea;\n  const {\n    property,\n    start,\n    end\n  } = bounds || {};\n\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {\n    boxHeight = fontSize,\n    boxWidth = fontSize\n  } = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(item => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {\n      options,\n      ctx\n    } = this;\n\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n\n    const titleHeight = this._computeTitleHeight();\n\n    const {\n      boxWidth,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {\n      ctx,\n      maxWidth,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {\n        left: 0,\n        top,\n        row,\n        width: itemWidth,\n        height: itemHeight\n      };\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {\n      ctx,\n      maxHeight,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const {\n        itemWidth,\n        itemHeight\n      } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({\n          width: currentColWidth,\n          height: currentColHeight\n        });\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      hitboxes[i] = {\n        left,\n        top: currentColHeight,\n        col,\n        width: itemWidth,\n        height: itemHeight\n      };\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({\n      width: currentColWidth,\n      height: currentColHeight\n    });\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n\n    const titleHeight = this._computeTitleHeight();\n\n    const {\n      legendHitBoxes: hitboxes,\n      options: {\n        align,\n        labels: {\n          padding\n        },\n        rtl\n      }\n    } = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n\n    if (this.isHorizontal()) {\n      let row = 0;\n\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n\n      for (const hitbox1 of hitboxes) {\n        if (hitbox1.col !== col) {\n          col = hitbox1.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n\n        hitbox1.top = top;\n        hitbox1.left += this.left + padding;\n        hitbox1.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox1.left), hitbox1.width);\n        top += hitbox1.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  _draw() {\n    const {\n      options: opts,\n      columnSizes,\n      lineWidths,\n      ctx\n    } = this;\n    const {\n      align,\n      labels: labelOpts\n    } = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {\n      padding\n    } = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {\n      boxWidth,\n      boxHeight,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n\n    const drawLegendBox = function (x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function (x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    const isHorizontal = this.isHorizontal();\n\n    const titleHeight = this._computeTitleHeight();\n\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor;\n      ctx.fillStyle = legendItem.fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  handleEvent(e) {\n    const opts = this.options;\n\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {\n    itemWidth,\n    itemHeight\n  };\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n\n  return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n\n  return false;\n}\n\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: ctx => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {\n          labels: {\n            usePointStyle,\n            pointStyle,\n            textAlign,\n            color,\n            useBorderRadius,\n            borderRadius\n          }\n        } = chart.legend.options;\n        return chart._getSortedDatasetMetas().map(meta => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n\n    },\n    title: {\n      color: ctx => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: name => !name.startsWith('on'),\n    labels: {\n      _scriptable: name => !['generateLabels', 'filter', 'sort'].includes(name)\n    }\n  }\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {\n      top,\n      left,\n      bottom,\n      right,\n      options\n    } = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n\n      maxWidth = bottom - top;\n    }\n\n    return {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    };\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n\n};\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n}\n\nfunction createTooltipItem(chart, item) {\n  const {\n    element,\n    datasetIndex,\n    index\n  } = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {\n    label,\n    value\n  } = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {\n    body,\n    footer,\n    title\n  } = tooltip;\n  const {\n    boxWidth,\n    boxHeight\n  } = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  let widthPadding = 0;\n\n  const maxLineWidth = function (line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n  each(body, bodyItem => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width,\n    height\n  };\n}\n\nfunction determineYAlign(chart, size) {\n  const {\n    y,\n    height\n  } = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {\n    x,\n    width\n  } = size;\n  const caret = options.caretSize + options.caretPadding;\n\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {\n    x,\n    width\n  } = size;\n  const {\n    width: chartWidth,\n    chartArea: {\n      left,\n      right\n    }\n  } = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {\n    x,\n    width\n  } = size;\n\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {\n    y,\n    height\n  } = size;\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n\n  return y;\n}\n\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {\n    caretSize,\n    caretPadding,\n    cornerRadius\n  } = options;\n  const {\n    xAlign,\n    yAlign\n  } = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {\n    topLeft,\n    topRight,\n    bottomLeft,\n    bottomRight\n  } = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  beforeTitle: noop,\n\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n\n  afterTitle: noop,\n  beforeBody: noop,\n  beforeLabel: noop,\n\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n\n    const value = tooltipItem.formattedValue;\n\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n\n    return label;\n  },\n\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0\n    };\n  },\n\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation\n    };\n  },\n\n  afterLabel: noop,\n  afterBody: noop,\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {\n      callbacks\n    } = options;\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n  }\n\n  getBody(tooltipItems, options) {\n    const {\n      callbacks\n    } = options;\n    const bodyItems = [];\n    each(tooltipItems, context => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n  }\n\n  getFooter(tooltipItems, options) {\n    const {\n      callbacks\n    } = options;\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    each(tooltipItems, context => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {\n        chart: this.chart,\n        tooltip: this,\n        replay\n      });\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      caretSize,\n      cornerRadius\n    } = options;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(cornerRadius);\n    const {\n      x: ptX,\n      y: ptY\n    } = tooltipPoint;\n    const {\n      width,\n      height\n    } = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n\n      y3 = y1;\n    }\n\n    return {\n      x1,\n      x2,\n      x3,\n      y1,\n      y2,\n      y3\n    };\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {\n      boxHeight,\n      boxWidth,\n      boxPadding\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {\n      body\n    } = this;\n    const {\n      bodySpacing,\n      bodyAlign,\n      displayColors,\n      boxHeight,\n      boxWidth,\n      boxPadding\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function (line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      x,\n      y\n    } = pt;\n    const {\n      width,\n      height\n    } = tooltipSize;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n\n      if (!position) {\n        return;\n      }\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({\n      datasetIndex,\n      index\n    }) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    const positionChanged = this._positionChanged(active, e);\n\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      return lastActive;\n    }\n\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  _positionChanged(active, e) {\n    const {\n      caretX,\n      caretY,\n      options\n    } = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n\n}\n\n_defineProperty(Tooltip, \"positioners\", positioners);\n\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        chart,\n        options\n      });\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', { ...args,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: name => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Colors: plugin_colors,\n  Decimation: plugin_decimation,\n  Filler: index,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({\n      index,\n      label: raw\n    });\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n\n  return value;\n}\n\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n\n    if (added.length) {\n      const labels = this.getLabels();\n\n      for (const {\n        index,\n        label\n      } of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n\n      this._addedLabels = [];\n    }\n\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let {\n      min,\n      max\n    } = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({\n        value\n      });\n    }\n\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n\n}\n\n_defineProperty(CategoryScale, \"id\", 'category');\n\n_defineProperty(CategoryScale, \"defaults\", {\n  ticks: {\n    callback: _getLabelForValue\n  }\n});\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {\n    bounds,\n    step,\n    min,\n    max,\n    precision,\n    count,\n    maxTicks,\n    maxDigits,\n    includeBounds\n  } = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {\n    min: rmin,\n    max: rmax\n  } = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n\n      if (niceMin < min) {\n        j++;\n      }\n\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {\n  horizontal,\n  minRotation\n}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {\n      beginAtZero\n    } = this.options;\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let {\n      min,\n      max\n    } = this;\n\n    const setMin = v => min = minDefined ? min : v;\n\n    const setMax = v => max = maxDefined ? max : v;\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {\n      maxTicksLimit,\n      stepSize\n    } = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n\n    const tickFont = this._resolveTickFontOptions(0);\n\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n\n}\n\n_defineProperty(LinearScale, \"id\", 'linear');\n\n_defineProperty(LinearScale, \"defaults\", {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n});\n\nconst log10Floor = v => Math.floor(log10(v));\n\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n\n  return Math.min(rangeExp, log10Floor(min));\n}\n\nfunction generateTicks(generationOptions, {\n  min,\n  max\n}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n\n  while (value < max) {\n    ticks.push({\n      value,\n      major: isMajor(value),\n      significand\n    });\n\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(lastTick),\n    significand\n  });\n  return ticks;\n}\n\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => min = minDefined ? min : v;\n\n    const setMax = v => max = maxDefined ? max : v;\n\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n\n    if (max <= 0) {\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n\n    return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n\n}\n\n_defineProperty(LogarithmicScale, \"id\", 'logarithmic');\n\n_defineProperty(LogarithmicScale, \"defaults\", {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n});\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {\n    ctx,\n    options: {\n      pointLabels\n    }\n  } = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {\n      x,\n      y,\n      textAlign,\n      left,\n      top,\n      right,\n      bottom\n    } = scale._pointLabelItems[i];\n    const {\n      backdropColor\n    } = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {\n    ctx\n  } = scale;\n\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {\n    color,\n    lineWidth\n  } = gridLineOpts;\n\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels().map((value, index) => {\n      const label = callback(this.options.pointLabels.callback, [value, index], this);\n      return label || label === 0 ? label : '';\n    }).filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {\n      left,\n      top,\n      right,\n      bottom\n    } = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom\n    };\n  }\n\n  drawBackground() {\n    const {\n      backgroundColor,\n      grid: {\n        circular\n      }\n    } = this.options;\n\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {\n      angleLines,\n      grid,\n      border\n    } = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {\n          color,\n          lineWidth\n        } = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  drawBorder() {}\n\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color\n      });\n    });\n    ctx.restore();\n  }\n\n  drawTitle() {}\n\n}\n\n_defineProperty(RadialLinearScale, \"id\", 'radialLinear');\n\n_defineProperty(RadialLinearScale, \"defaults\", {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n\n    callback(label) {\n      return label;\n    },\n\n    padding: 5,\n    centerPointLabels: false\n  }\n});\n\n_defineProperty(RadialLinearScale, \"defaultRoutes\", {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n});\n\n_defineProperty(RadialLinearScale, \"descriptors\", {\n  angleLines: {\n    _fallback: 'grid'\n  }\n});\n\nconst INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nconst UNITS = /* #__PURE__ */Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {\n    parser,\n    round,\n    isoWeekday\n  } = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {\n      lo,\n      hi\n    } = _lookup(timestamps, time);\n\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n\n  return ticks;\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n\n    return {\n      min,\n      max\n    };\n  }\n\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {\n      start,\n      end,\n      factor: 1 / (start + 1 + end)\n    };\n  }\n\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return callback(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n      h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n    };\n  }\n\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n\n    const size = this._getLabelSize(exampleLabel);\n\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return this._cache.data = metas[0].controller.getAllParsedValues(this);\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return this._cache.data = this.normalize(timestamps);\n  }\n\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n  }\n\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n\n}\n\n_defineProperty(TimeScale, \"id\", 'time');\n\n_defineProperty(TimeScale, \"defaults\", {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    callback: false,\n    major: {\n      enabled: false\n    }\n  }\n});\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'pos', val));\n    }\n\n    ({\n      pos: prevSource,\n      time: prevTarget\n    } = table[lo]);\n    ({\n      pos: nextSource,\n      time: nextTarget\n    } = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'time', val));\n    }\n\n    ({\n      time: prevSource,\n      pos: prevTarget\n    } = table[lo]);\n    ({\n      time: nextSource,\n      pos: nextTarget\n    } = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  buildLookupTable(timestamps) {\n    const {\n      min,\n      max\n    } = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  }\n\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n\n}\n\n_defineProperty(TimeSeriesScale, \"id\", 'timeseries');\n\n_defineProperty(TimeSeriesScale, \"defaults\", TimeScale.defaults);\n\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nconst registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"mappings":"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","names":["Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","requestAnimFrame","call","window","_update","Date","now","remaining","running","items","length","i","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","transparent","interpolators","boolean","from","to","factor","color","c0","helpersColor","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","resolve","_fn","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","isObject","animationOptions","Object","keys","defaults","animation","animatedProps","getOwnPropertyNames","key","option","isArray","properties","_animateOptions","values","newOptions","options","resolveTargetOptions","animations","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","animator","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","x","y","top","right","bottom","left","toClip","t","r","b","l","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isFinite","sign","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","createContext","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","new","dataElementType","initialize","linkScales","addElements","fill","isPluginEnabled","console","warn","updateIndex","getDataset","chooseId","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","isExtensible","listenArrayEvents","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","elementType","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","_arrayUnique","sort","a","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","isNullOrUndef","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","v","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","obj","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","skipNull","val","isNaN","indexOf","_getStackCount","_getStackIndex","name","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","numbers","_index_","offset","grid","_value_","beginAtZero","BubbleController","radius","points","point","iPixel","vPixel","skip","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","TAU","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","DoughnutController","innerRadius","outerRadius","getter","_getRotation","toRadians","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","formatNumber","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","_scriptable","_indexable","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","onClick","e","legendItem","toggleDataVisibility","LineController","line","_dataset","animationsDisabled","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","_parseObjectDataRadialScale","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","interaction","abstract","Error","DateAdapterBase","members","override","prototype","init","formats","format","diff","startOf","endOf","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","evaluationFunc","_isPointInArea","inRange","getNearestRadialItems","getProps","getAngleFromPoint","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","eventListenerOptions","supportsEventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","_isDomSupported","OffscreenCanvas","Element","tooltipPosition","hasValue","final","ret","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","_factorize","result","ceil","majorStart","majorEnd","len","reverseAlign","align","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","toFont","lines","lineHeight","createScaleContext","createTickContext","titleAlign","_toLeftRightCenter","titleArgs","titleX","titleY","_alignStartEnd","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","finiteOrDefault","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","callback","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","title","toDegrees","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","_measureText","valueAt","idx","pixel","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","optionTicks","rot","autoSkipPadding","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","tickTextAlign","showLabelBackdrop","backdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","clipArea","renderTextOptions","renderText","unclipArea","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","overrides","unregister","itemDefaults","merge","defaultRoutes","routeDefaults","descriptors","describe","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","_capitalize","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","defaultId","defaultScaleOptions","mergeIf","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","isFunction","subResolver","_attachContext","descriptorDefaults","resolverCache","_createResolver","p","hasFunction","isScriptable","isIndexable","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","c","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_elementsEqual","pluginId","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","_isClickEvent","onHover","version","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","_readValueToProps","parseBorderRadius","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","borderJoinStyle","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","_isBetween","halfAngle","halfRadius","translate","fix","radiusOffset","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","_steppedInterpolation","_bezierInterpolation","_pointInLine","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_updateBezierControlPoints","_computeSegments","interpolate","_boundSegments","_interpolate","interpolated","capBezierPoints","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","drawPoint","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","toTRBL","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","bounds","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","addRectPath","addRoundedRectPath","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","k","containsColorsDefinition","forceOverride","_args","chartOptions","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","pointCount","algorithm","beforeElementsUpdate","xAxis","threshold","configurable","enumerable","d","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","_boundSegment","fillSource","_getEdge","_normalizeAngle","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","getRtlAdapter","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","fillText","strikethrough","overrideTextDirection","textDirection","textWidth","setWidth","realX","_textX","fontLineHeight","calculateLegendItemHeight","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","_element","afterEvent","ci","useBorderRadius","startsWith","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","WeakMap","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","noop","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","_fallback","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceNum","niceMin","niceMax","numSpaces","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","relativeLabelSize","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","_setMinAndMaxByKey","LinearScale","Ticks","formatters","numeric","log10Floor","log10","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","minExp","exp","significand","lastTick","LogarithmicScale","_zero","logarithmic","getTickBackdropHeight","measureLabelSize","_longestText","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","animate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","_lookup","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","adapters","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"sources":["../src/core/core.animator.js","../src/core/core.animation.js","../src/core/core.animations.js","../src/core/core.datasetController.js","../src/controllers/controller.bar.js","../src/controllers/controller.bubble.js","../src/controllers/controller.doughnut.js","../src/controllers/controller.line.js","../src/controllers/controller.polarArea.js","../src/controllers/controller.pie.js","../src/controllers/controller.radar.js","../src/controllers/controller.scatter.js","../src/core/core.adapters.ts","../src/core/core.interaction.js","../src/core/core.layouts.js","../src/platform/platform.base.js","../src/platform/platform.basic.js","../src/platform/platform.dom.js","../src/platform/index.js","../src/core/core.element.ts","../src/core/core.scale.autoskip.js","../src/core/core.scale.js","../src/core/core.typedRegistry.js","../src/core/core.registry.js","../src/core/core.plugins.js","../src/core/core.config.js","../src/core/core.controller.js","../src/elements/element.arc.ts","../src/elements/element.line.js","../src/elements/element.point.ts","../src/elements/element.bar.js","../src/plugins/plugin.colors.ts","../src/plugins/plugin.decimation.js","../src/plugins/plugin.filler/filler.segment.js","../src/plugins/plugin.filler/filler.helper.js","../src/plugins/plugin.filler/filler.options.js","../src/plugins/plugin.filler/filler.target.stack.js","../src/plugins/plugin.filler/simpleArc.js","../src/plugins/plugin.filler/filler.target.js","../src/plugins/plugin.filler/filler.drawing.js","../src/plugins/plugin.filler/index.js","../src/plugins/plugin.legend.js","../src/plugins/plugin.title.js","../src/plugins/plugin.subtitle.js","../src/plugins/plugin.tooltip.js","../src/scales/scale.category.js","../src/scales/scale.linearbase.js","../src/scales/scale.linear.js","../src/scales/scale.logarithmic.js","../src/scales/scale.radialLinear.js","../src/scales/scale.time.js","../src/scales/scale.timeseries.js","../src/index.ts"],"sourcesContent":["import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing',\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis\n    || axisFromPosition(scaleOptions.position)\n    || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guestimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n"]},"metadata":{},"sourceType":"module"}