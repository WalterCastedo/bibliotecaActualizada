{"ast":null,"code":"import { defineComponent, shallowRef, computed, resolveComponent, openBlock, createElementBlock, createVNode, withCtx, withKeys, withDirectives, createElementVNode, vModelText } from \"vue\";\nimport { u as useComponentPresetProp } from \"../../composables/useComponentPreset.js\";\nimport { u as useStatefulEmits, a as useStatefulProps, b as useStateful } from \"../../composables/useStateful.js\";\nimport { u as useTranslation } from \"../../composables/useTranslation.js\";\nimport { V as VaColorIndicator } from \"../va-color-indicator/index.js\";\nimport { V as VaInput } from \"../va-input/index.js\";\nimport { _ as _export_sfc } from \"../../../plugin-vue_export-helper.js\";\n\nvar VaColorInput_vue_vue_type_style_index_0_lang = /* @__PURE__ */(() => \".va-color-input{display:flex;align-items:center!important}.va-color-input .form-group{margin-bottom:0}.va-color-input__input{margin-bottom:0;margin-left:.25rem;min-width:5.6rem}.va-color-input__input__pointer{cursor:pointer}\\n\")();\n\nconst _sfc_main = defineComponent({\n  name: \"VaColorInput\",\n  components: {\n    VaInput,\n    VaColorIndicator\n  },\n  emits: useStatefulEmits,\n  props: { ...useStatefulProps,\n    ...useComponentPresetProp,\n    modelValue: {\n      type: String,\n      default: null\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    indicator: {\n      type: String,\n      default: \"dot\",\n      validator: value => [\"dot\", \"square\"].includes(value)\n    }\n  },\n  setup: (props, {\n    emit\n  }) => {\n    const colorPicker = shallowRef();\n    const {\n      valueComputed\n    } = useStateful(props, emit);\n\n    const callPickerDialog = () => {\n      var _a;\n\n      return !props.disabled && ((_a = colorPicker.value) == null ? void 0 : _a.click());\n    };\n\n    const tabIndexComputed = computed(() => props.disabled ? -1 : 0);\n    return { ...useTranslation(),\n      valueComputed,\n      callPickerDialog,\n      colorPicker,\n      tabIndexComputed\n    };\n  }\n});\n\nconst _hoisted_1 = {\n  class: \"va-color-input\"\n};\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_va_color_indicator = resolveComponent(\"va-color-indicator\");\n\n  const _component_va_input = resolveComponent(\"va-input\");\n\n  return openBlock(), createElementBlock(\"div\", _hoisted_1, [createVNode(_component_va_input, {\n    class: \"va-color-input__input\",\n    placeholder: \"input color\",\n    modelValue: _ctx.valueComputed,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.valueComputed = $event),\n    tabindex: _ctx.tabIndexComputed,\n    disabled: _ctx.$props.disabled\n  }, {\n    appendInner: withCtx(() => [createVNode(_component_va_color_indicator, {\n      class: \"va-color-input__dot\",\n      role: \"button\",\n      \"aria-label\": _ctx.t(\"openColorPicker\"),\n      \"aria-disabled\": _ctx.$props.disabled,\n      tabindex: _ctx.tabIndexComputed,\n      color: _ctx.valueComputed,\n      indicator: _ctx.$props.indicator,\n      onClick: _ctx.callPickerDialog,\n      onKeydown: [withKeys(_ctx.callPickerDialog, [\"space\"]), withKeys(_ctx.callPickerDialog, [\"enter\"])]\n    }, null, 8, [\"aria-label\", \"aria-disabled\", \"tabindex\", \"color\", \"indicator\", \"onClick\", \"onKeydown\"])]),\n    _: 1\n  }, 8, [\"modelValue\", \"tabindex\", \"disabled\"]), withDirectives(createElementVNode(\"input\", {\n    ref: \"colorPicker\",\n    type: \"color\",\n    class: \"visually-hidden\",\n    \"aria-hidden\": \"true\",\n    tabindex: \"-1\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.valueComputed = $event)\n  }, null, 512), [[vModelText, _ctx.valueComputed]])]);\n}\n\nvar _VaColorInput = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { _VaColorInput as _ };\nimport './VaColorInput.css';","map":{"version":3,"mappings":";;;;;;;;;;AA0CA,MAAKA,YAAaC,gBAAa;EAC7BC,MAAM,cADuB;EAE7BC,YAAY;IACVC,OADU;IAEVC;EAFU,CAFiB;EAM7BC,OAAOC,gBANsB;EAO7BC,OAAO,EACL,GAAGC,gBADE;IAEL,GAAGC,sBAFE;IAGLC,YAAY;MAAEC,MAAMC,MAAR;MAAgBC,SAAS;IAAzB,CAHP;IAILC,UAAU;MAAEH,MAAMI,OAAR;MAAiBF,SAAS;IAA1B,CAJL;IAKLG,WAAW;MACTL,MAAMC,MADG;MAETC,SAAS,KAFA;MAGTI,WAAYC,KAAD,IAAmB,CAAC,KAAD,EAAQ,QAAR,EAAkBC,QAAlB,CAA2BD,KAA3B;IAHrB;EALN,CAPsB;EAkB7BE,OAAO,CAACb,KAAD,EAAQ;IAAEc;EAAF,CAAR,KAAqB;IAC1B,MAAMC,cAAcC,YAApB;IAEA,MAAM;MAAEC;IAAF,IAAoBC,YAAYlB,KAAZ,EAAmBc,IAAnB,CAA1B;;IAEA,MAAMK,mBAAmB;;;MAAM,QAACnB,MAAMO,QAAP,KAAmB,kBAAYI,KAAZ,wBAAmBS,KAAnB,EAAnB;IAAsC,CAArE;;IAEA,MAAMC,mBAAmBC,SAAS,MAAMtB,MAAMO,QAAN,GAAiB,EAAjB,GAAsB,CAArC,CAAzB;IAEO,SACL,GAAGgB,gBADE;MAELN,aAFK;MAGLE,gBAHK;MAILJ,WAJK;MAKLM;IALK;EAOT;AAlC6B,CAAb,CAAlB;;AAzCO;EAAAG,OAAM;AAAN;;;;;;;EAAL,uCA8BM,KA9BNC,cA8BM,CA7BJC,YAqBWC,mBArBXD,EAqBW;IApBTF,OAAM,uBAoBG;IAnBTI,aAAY,aAmBH;IAlBAzB,8BAkBA;IAlBa,uFAkBb;IAjBR0B,UAAUC,qBAiBF;IAhBRvB,UAAUuB,KAAOC,MAAP,CAAOxB;EAgBT,CArBXmB,EAKoB;IAEPM,aAAWC,QACpB,MAWE,CAXFP,YAWEQ,6BAXFR,EAWE;MAVAF,OAAM,qBAUN;MATAW,MAAK,QASL;MARC,cAAYL,KAACM,CAAD,CAAC,iBAAD,CAQb;MAPC,iBAAeN,KAAOC,MAAP,CAAOxB,QAOvB;MANCsB,UAAUC,qBAMX;MALCO,OAAOP,kBAKR;MAJCrB,WAAWqB,KAAOC,MAAP,CAAOtB,SAInB;MAHC6B,SAAOR,qBAGR;MAFCS,WAAO,UAAQT,KAAgBX,gBAAxBqB,EAAwB,SAAxBA,GAAwBA,SAChBV,KAAgBX,gBADAqB,EACA,SADAA,CAAxB;IAER,CAXFd,EAUkC,IAVlCA,EAUkC,CAVlCA,EAUkC,yFAVlCA,CAWE,CAZkBO,CAFJ;;EAAA,CALpBP,4CA6BI,iBAPJe,mBAM4B,OAN5BA,EAM4B;IAL1BC,KAAI,aAKsB;IAJ1BtC,MAAK,OAIqB;IAH1BoB,OAAM,iBAGoB;IAF1B,eAAY,MAEc;IAD1BK,UAAS,IACiB;IADjB,2DACAC,KAAab,aAAb,GAAa0B,MADb;EACiB,CAN5BF,EAMwB,IANxBA,EAMwB,GANxBA,GAMwB,cAAbX,KAAab,gBACpB,CA9BNQ","names":["_sfc_main","defineComponent","name","components","VaInput","VaColorIndicator","emits","useStatefulEmits","props","useStatefulProps","useComponentPresetProp","modelValue","type","String","default","disabled","Boolean","indicator","validator","value","includes","setup","emit","colorPicker","shallowRef","valueComputed","useStateful","callPickerDialog","click","tabIndexComputed","computed","useTranslation","class","_createElementBlock","_createVNode","_component_va_input","placeholder","tabindex","_ctx","$props","appendInner","_withCtx","_component_va_color_indicator","role","t","color","onClick","onKeydown","_withKeys","_createElementVNode","ref","$event"],"sources":["../../../../../src/components/va-color-input/VaColorInput.vue"],"sourcesContent":["<template>\n  <div class=\"va-color-input\">\n    <va-input\n      class=\"va-color-input__input\"\n      placeholder=\"input color\"\n      v-model=\"valueComputed\"\n      :tabindex=\"tabIndexComputed\"\n      :disabled=\"$props.disabled\"\n    >\n      <template #appendInner>\n        <va-color-indicator\n          class=\"va-color-input__dot\"\n          role=\"button\"\n          :aria-label=\"t('openColorPicker')\"\n          :aria-disabled=\"$props.disabled\"\n          :tabindex=\"tabIndexComputed\"\n          :color=\"valueComputed\"\n          :indicator=\"$props.indicator\"\n          @click=\"callPickerDialog\"\n          @keydown.space=\"callPickerDialog\"\n          @keydown.enter=\"callPickerDialog\"\n        />\n      </template>\n    </va-input>\n    <input\n      ref=\"colorPicker\"\n      type=\"color\"\n      class=\"visually-hidden\"\n      aria-hidden=\"true\"\n      tabindex=\"-1\"\n      v-model=\"valueComputed\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, shallowRef, computed } from 'vue'\n\nimport { useComponentPresetProp, useStateful, useStatefulProps, useStatefulEmits, useTranslation } from '../../composables'\n\nimport { VaColorIndicator } from '../va-color-indicator'\nimport { VaInput } from '../va-input'\n\nexport default defineComponent({\n  name: 'VaColorInput',\n  components: {\n    VaInput,\n    VaColorIndicator,\n  },\n  emits: useStatefulEmits,\n  props: {\n    ...useStatefulProps,\n    ...useComponentPresetProp,\n    modelValue: { type: String, default: null },\n    disabled: { type: Boolean, default: false },\n    indicator: {\n      type: String as PropType<'dot' | 'square'>,\n      default: 'dot',\n      validator: (value: string) => ['dot', 'square'].includes(value),\n    },\n  },\n  setup: (props, { emit }) => {\n    const colorPicker = shallowRef<HTMLInputElement>()\n\n    const { valueComputed } = useStateful(props, emit)\n\n    const callPickerDialog = () => !props.disabled && colorPicker.value?.click()\n\n    const tabIndexComputed = computed(() => props.disabled ? -1 : 0)\n\n    return {\n      ...useTranslation(),\n      valueComputed,\n      callPickerDialog,\n      colorPicker,\n      tabIndexComputed,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-color-input {\n  display: flex;\n  align-items: center !important;\n\n  .form-group {\n    margin-bottom: 0;\n  }\n\n  &__input {\n    margin-bottom: 0;\n    margin-left: 0.25rem;\n    min-width: 5.6rem;\n\n    &__pointer {\n      cursor: pointer;\n    }\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}