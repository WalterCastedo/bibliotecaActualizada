{"ast":null,"code":"import axios from \"axios\";\nexport const RUTA_SERVIDOR_ALUMNOS = process.env.VUE_APP_RUTA_API_ALUMNOS;\nexport const RUTA_SERVIDOR_LIBROS = process.env.VUE_APP_RUTA_API_LIBROS;\nexport default {\n  data() {\n    return {\n      nombreEditorial: \"\",\n      pdf: '',\n      carreras: [],\n      autor: [],\n      tipos: [],\n      material: {\n        titulo: \"\",\n        copias: \"\",\n        copiasDisponibles: \"\",\n        idTipomaterial: 1,\n        edicion: \"\",\n        codigo: \"\",\n        observacion: \"\",\n        idAutor: 1,\n        idEmpleado: \"\",\n        idSubsede: 0,\n        urlPortada: \"\",\n        idCarrera: 1,\n        idEditorial: \"\",\n        activo: 1\n      },\n      nautor: {\n        nombre: \"\",\n        id: 0\n      },\n      editoriales: [{\n        nombreEditorial: \"\"\n      }],\n      preNombre: \"\"\n    };\n  },\n\n  props: {\n    variable: {\n      type: Number,\n      default: 0\n    }\n  },\n\n  beforeMount() {\n    this.consultarEditorial();\n    this.consultarAutor();\n    this.consultarCarreras();\n    this.consultarMaterial();\n    this.consultarTipo();\n    this.resetMaterial();\n  },\n\n  methods: {\n    resetMaterial() {\n      this.nombreEditorial = \"\", this.pdf = '', this.carreras = [], this.autor = [], this.tipos = [], this.material = {\n        titulo: \"\",\n        copias: \"\",\n        copiasDisponibles: \"\",\n        idTipomaterial: 1,\n        edicion: \"\",\n        codigo: \"\",\n        observacion: \"\",\n        idAutor: 1,\n        idEmpleado: \"\",\n        idSubsede: 0,\n        urlPortada: \"\",\n        idCarrera: 1,\n        idEditorial: \"\",\n        activo: 1\n      };\n    },\n\n    consultarMaterial() {\n      if (this.variable > 0) {\n        fetch(RUTA_SERVIDOR_LIBROS + \"/materiales/\" + this.variable).then(respuesta => respuesta.json()).then(datosRespuesta => {\n          this.material = [];\n          this.material.id = datosRespuesta.id;\n          this.material.titulo = datosRespuesta.titulo;\n          this.material.copias = datosRespuesta.copias;\n          this.material.copiasDisponibles = datosRespuesta.copiasDisponibles;\n          this.material.idTipomaterial = datosRespuesta.idTipomaterial;\n          this.material.edicion = datosRespuesta.edicion;\n          this.material.codigo = datosRespuesta.codigo;\n          this.material.observacion = datosRespuesta.observacion;\n          this.material.idAutor = datosRespuesta.idAutor;\n          this.material.idEmpleado = datosRespuesta.idEmpleado;\n          this.material.idCarrera = datosRespuesta.idCarrera;\n          this.material.urlPortada = datosRespuesta.urlPortada;\n          this.material.idEditorial = datosRespuesta.idEditorial;\n          this.material.activo = datosRespuesta.activo;\n          this.obterAutor();\n        }).catch(console.log);\n      } else {\n        this.consultarEditorial();\n        this.consultarAutor();\n        this.consultarCarreras();\n      }\n    },\n\n    agregarMaterial() {\n      if (this.material.copias < this.material.copiasDisponibles) {\n        alert('Por favor, La cantidad de cópias disponibles no puede ser mayor a la cantidad de copías.');\n        return;\n      }\n\n      if (this.material.copias < 0 || this.material.copiasDisponibles < 0) {\n        alert('Por favor, La cantidad de cópias disponibles y la cantidad de copías no pueden ser negativas.');\n        return;\n      }\n\n      if (this.material.titulo.trim() === \"\" || this.material.copias === \"\" || this.material.copiasDisponibles === \"\" || this.material.idTipomaterial === \"\" || this.material.edicion === \"\" || this.material.codigo.trim() === \"\" || this.material.idAutor === \"\" || this.material.idEditorial === \"\" || this.material.idCarrera === \"\") {\n        alert('Por favor, complete todos los campos obligatorios marcados con * antes de agregar material.');\n        return;\n      }\n\n      let formData = new FormData();\n      formData.append(\"titulo\", this.material.titulo);\n      formData.append(\"copias\", this.material.copias);\n      formData.append(\"copiasDisponibles\", this.material.copiasDisponibles);\n      formData.append(\"idTipomaterial\", this.material.idTipomaterial);\n      formData.append(\"edicion\", this.material.edicion);\n      formData.append(\"codigo\", this.material.codigo);\n      formData.append(\"observacion\", this.material.observacion);\n      formData.append(\"idAutor\", this.material.idAutor);\n      formData.append(\"idEmpleado\", localStorage.getItem('id'));\n      formData.append(\"idCarrera\", this.material.idCarrera);\n      formData.append(\"urlPortada\", this.material.urlPortada);\n      formData.append(\"idEditorial\", this.material.idEditorial);\n      formData.append(\"activo\", this.material.activo);\n      formData.append(\"documento\", this.pdf);\n      formData.append(\"idSubsede\", localStorage.getItem(\"idSubsede\"));\n      axios.post(RUTA_SERVIDOR_LIBROS + \"/materiales/\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(function (response) {\n        location.reload();\n      }).then(alert(\"El material se creó correctamente\")).catch(function (error) {\n        console.log(error);\n      });\n    },\n\n    actualizar() {\n      if (this.material.copias < this.material.copiasDisponibles) {\n        alert('Por favor, La cantidad de cópias disponibles no puede ser mayor a la cantidad de cópias.');\n        return;\n      }\n\n      if (this.material.copias < 0 || this.material.copiasDisponibles < 0) {\n        alert('Por favor, La cantidad de cópias disponibles y la cantidad de cópias no pueden ser negativas.');\n        return;\n      }\n\n      if (this.material.titulo.trim() === \"\" || this.material.copias === \"\" || this.material.copiasDisponibles === \"\" || this.material.idTipomaterial === \"\" || this.material.edicion === \"\" || this.material.codigo.trim() === \"\" || this.material.idAutor === \"\" || this.material.idEditorial === \"\" || this.material.idCarrera === \"\") {\n        alert('Por favor, complete todos los campos obligatorios marcados con * antes de actualizar el material.');\n        return;\n      }\n\n      const confirmacion = window.confirm('¿Estás seguro de que deseas actualizar estos datos?');\n\n      if (confirmacion) {\n        axios.put(RUTA_SERVIDOR_LIBROS + \"/materiales/\" + this.material.id, {\n          titulo: this.material.titulo,\n          copias: this.material.copias,\n          copiasDisponibles: this.material.copiasDisponibles,\n          idTipomaterial: this.material.idTipomaterial,\n          edicion: this.material.edicion,\n          codigo: this.material.codigo,\n          idAutor: parseInt(this.material.idAutor),\n          idEmpleado: this.material.idEmpleado,\n          idSubsede: localStorage.getItem(\"idSubsede\"),\n          idEditorial: parseInt(this.material.idEditorial),\n          idCarrera: parseInt(this.material.idCarrera),\n          urlPortada: this.material.urlPortada.trim(),\n          observacion: this.material.observacion,\n          activo: 1\n        }).then(function (response) {\n          location.reload();\n        }).then(alert(\"El material se actualizo correctamente\")).catch(function (error) {\n          console.log(error); // console.log(this.material);\n        });\n      }\n    },\n\n    consultarTipo() {\n      fetch(RUTA_SERVIDOR_LIBROS + \"/tipos/\").then(respuesta => respuesta.json()).then(datosRespuesta => {\n        if (typeof datosRespuesta[0].success === \"undefined\") {\n          datosRespuesta.sort((a, b) => {\n            if (a.tipo.toUpperCase() == b.tipo.toUpperCase()) {\n              return 0;\n            }\n\n            if (a.tipo.toUpperCase() > b.tipo.toUpperCase()) {\n              return 1;\n            }\n\n            if (a.tipo.toUpperCase() < b.tipo.toUpperCase()) {\n              return -1;\n            }\n          });\n          this.tipos = datosRespuesta;\n          console.log(this.tipos);\n        }\n      }).catch(console.log);\n    },\n\n    consultarAutor() {\n      fetch(RUTA_SERVIDOR_LIBROS + \"/autor/\").then(respuesta => respuesta.json()).then(datosRespuesta => {\n        if (typeof datosRespuesta[0].success === \"undefined\") {\n          datosRespuesta.sort((a, b) => {\n            if (a.nombre.toUpperCase() == b.nombre.toUpperCase()) {\n              return 0;\n            }\n\n            if (a.nombre.toUpperCase() > b.nombre.toUpperCase()) {\n              return 1;\n            }\n\n            if (a.nombre.toUpperCase() < b.nombre.toUpperCase()) {\n              return -1;\n            }\n          });\n          this.autor = datosRespuesta;\n          this.material.idAutor = this.autor[0].id;\n          this.material.idEditorial = this.editoriales[0].id;\n        }\n      }).catch(console.log);\n    },\n\n    consultarCarreras() {\n      fetch(RUTA_SERVIDOR_LIBROS + \"/carreras\").then(respuesta => respuesta.json()).then(datosRespuesta => {\n        this.carreras = [];\n\n        if (typeof datosRespuesta[0].success === \"undefined\") {\n          this.carreras = datosRespuesta;\n        }\n      }).catch(console.log);\n    },\n\n    consultarEditorial() {\n      fetch(RUTA_SERVIDOR_LIBROS + \"/editoriales/\").then(respuesta => respuesta.json()).then(datosRespuesta => {\n        if (typeof datosRespuesta[0].success === \"undefined\") {\n          datosRespuesta.sort((a, b) => {\n            if (a.nombreEditorial.toUpperCase() == b.nombreEditorial.toUpperCase()) {\n              return 0;\n            }\n\n            if (a.nombreEditorial.toUpperCase() > b.nombreEditorial.toUpperCase()) {\n              return 1;\n            }\n\n            if (a.nombreEditorial.toUpperCase() < b.nombreEditorial.toUpperCase()) {\n              return -1;\n            }\n          });\n          this.editoriales = datosRespuesta;\n        }\n      }).catch(console.log);\n    },\n\n    reset() {\n      Object.assign(this.$data, this.$options.data());\n      this.consultarEditorial();\n      this.consultarAutor();\n      this.consultarCarreras();\n    },\n\n    volver() {\n      location.reload();\n    },\n\n    obterAutor() {\n      this.preNombre = this.autor.find(x => x.id == this.material.idAutor).nombre;\n    },\n\n    Previa() {\n      let index = 0;\n\n      while (index != this.material.idAutor) {\n        if (this.material.idAutor == this.autor[index].id) {\n          this.preNombre = this.autor[index].nombre;\n          index = this.material.idAutor;\n        } else {\n          index++;\n        }\n      }\n    },\n\n    buscarArchivo(event) {\n      this.pdf = event.target.files[0];\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAuOA;AACA;AACA;AAEA;EACAA;IACA;MACAC,mBADA;MAEAC,OAFA;MAGAC,YAHA;MAIAC,SAJA;MAKAC,SALA;MAMAC;QACAC,UADA;QAEAC,UAFA;QAGAC,qBAHA;QAIAC,iBAJA;QAKAC,WALA;QAMAC,UANA;QAOAC,eAPA;QAQAC,UARA;QASAC,cATA;QAUAC,YAVA;QAWAC,cAXA;QAYAC,YAZA;QAaAC,eAbA;QAcAC;MAdA,CANA;MAuBAC;QACAC,UADA;QAEAC;MAFA,CAvBA;MA2BAC,cACA;QACAvB;MADA,CADA,CA3BA;MAgCAwB;IAhCA;EAkCA,CApCA;;EAqCAC;IACAC;MACAC,YADA;MAEAC;IAFA;EADA,CArCA;;EA4CAC;IACA;IACA;IACA;IACA;IACA;IACA;EACA,CAnDA;;EAqDAC;IACAC;MAEA,2BACA,aADA,EAEA,kBAFA,EAGA,eAHA,EAIA,eAJA,EAKA;QACAzB,UADA;QAEAC,UAFA;QAGAC,qBAHA;QAIAC,iBAJA;QAKAC,WALA;QAMAC,UANA;QAOAC,eAPA;QAQAC,UARA;QASAC,cATA;QAUAC,YAVA;QAWAC,cAXA;QAYAC,YAZA;QAaAC,eAbA;QAcAC;MAdA,CALA;IAqBA,CAxBA;;IAyBAa;MACA;QACAC,6DACAC,IADA,CACAC,6BADA,EAEAD,IAFA,CAEAE;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;QACA,CAnBA,EAoBAC,KApBA,CAoBAC,WApBA;MAqBA,CAtBA,MAsBA;QACA;QACA;QACA;MACA;IACA,CArDA;;IAuDAC;MACA;QACAC;QACA;MACA;;MACA;QACAA;QACA;MACA;;MACA,IACA,sCACA,2BADA,IAEA,sCAFA,IAGA,mCAHA,IAIA,4BAJA,IAKA,kCALA,IAMA,4BANA,IAOA,gCAPA,IAQA,8BATA,EAWA;QACAA;QACA;MACA;;MAEA;MACAC;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAC,MACAC,IADA,CACAC,qCADA,EACAH,QADA,EACA;QACAI;UACA;QADA;MADA,CADA,EAMAX,IANA,CAMA;QACAY;MACA,CARA,EASAZ,IATA,CASAM,0CATA,EAUAH,KAVA,CAUA;QACAC;MACA,CAZA;IAcA,CA9GA;;IAgHAS;MACA;QACAP;QACA;MACA;;MACA;QACAA;QACA;MACA;;MACA,IACA,sCACA,2BADA,IAEA,sCAFA,IAGA,mCAHA,IAIA,4BAJA,IAKA,kCALA,IAMA,4BANA,IAOA,gCAPA,IAQA,8BATA,EAWA;QACAA;QACA;MACA;;MACA,oCACA,qDADA;;MAIA;QACAE,MACAM,GADA,CACAJ,wDADA,EACA;UACAtC,4BADA;UAEAC,4BAFA;UAGAC,kDAHA;UAIAC,4CAJA;UAKAC,8BALA;UAMAC,4BANA;UAOAE,wCAPA;UAQAC,oCARA;UASAC,4CATA;UAUAG,gDAVA;UAWAD,4CAXA;UAYAD,2CAZA;UAaAJ,sCAbA;UAcAO;QAdA,CADA,EAiBAe,IAjBA,CAiBA;UACAY;QACA,CAnBA,EAmBAZ,IAnBA,CAmBAM,+CAnBA,EAoBAH,KApBA,CAoBA;UACAC,mBADA,CAEA;QACA,CAvBA;MAuBA;IACA,CArKA;;IAsKAW;MACAhB,wCACAC,IADA,CACAC,6BADA,EAEAD,IAFA,CAEAE;QACA;UACAA;YACA;cACA;YACA;;YACA;cACA;YACA;;YACA;cACA;YACA;UACA,CAVA;UAWA;UAEAE;QAEA;MACA,CApBA,EAqBAD,KArBA,CAqBAC,WArBA;IAsBA,CA7LA;;IA8LAY;MACAjB,wCACAC,IADA,CACAC,6BADA,EAEAD,IAFA,CAEAE;QACA;UACAA;YACA;cACA;YACA;;YACA;cACA;YACA;;YACA;cACA;YACA;UACA,CAVA;UAWA;UACA;UACA;QACA;MACA,CAnBA,EAoBAC,KApBA,CAoBAC,WApBA;IAqBA,CApNA;;IAqNAa;MACAlB,0CACAC,IADA,CACAC,6BADA,EAEAD,IAFA,CAEAE;QACA;;QACA;UACA;QACA;MACA,CAPA,EAQAC,KARA,CAQAC,WARA;IASA,CA/NA;;IAgOAc;MACAnB,8CACAC,IADA,CACAC,6BADA,EAEAD,IAFA,CAEAE;QACA;UACAA;YACA,IACAiB,mCACAC,+BAFA,EAGA;cACA;YACA;;YACA,IACAD,kCACAC,+BAFA,EAGA;cACA;YACA;;YACA,IACAD,kCACAC,+BAFA,EAGA;cACA;YACA;UACA,CAnBA;UAoBA;QACA;MACA,CA1BA,EA2BAjB,KA3BA,CA2BAC,WA3BA;IA4BA,CA7PA;;IA+PAiB;MACAC;MACA;MACA;MACA;IACA,CApQA;;IAqQAC;MACAX;IACA,CAvQA;;IAwQAY;MACA,iCACAC,kCADA,EAEAtC,MAFA;IAGA,CA5QA;;IA6QAuC;MACA;;MACA;QACA;UACA;UACAC;QACA,CAHA,MAGA;UACAA;QACA;MACA;IACA,CAvRA;;IAyRAC;MACA;IAEA;;EA5RA;AArDA","names":["data","nombreEditorial","pdf","carreras","autor","tipos","material","titulo","copias","copiasDisponibles","idTipomaterial","edicion","codigo","observacion","idAutor","idEmpleado","idSubsede","urlPortada","idCarrera","idEditorial","activo","nautor","nombre","id","editoriales","preNombre","props","variable","type","default","beforeMount","methods","resetMaterial","consultarMaterial","fetch","then","respuesta","datosRespuesta","catch","console","agregarMaterial","alert","formData","axios","post","RUTA_SERVIDOR_LIBROS","headers","location","actualizar","put","consultarTipo","consultarAutor","consultarCarreras","consultarEditorial","a","b","reset","Object","volver","obterAutor","x","Previa","index","buscarArchivo"],"sourceRoot":"src/components","sources":["CrearMaterial.vue"],"sourcesContent":["<template>\n  <div class=\"container row\" ref=\"accionEditar\">\n    \n    <form v-on:submit.prevent=\"agregarMaterial\" class=\"col-sm-12\">\n      <div class=\"row align-items-center\">\n        <div class=\"form-group col-sm\">\n          <label for=\"titulo\">Titulo *</label>\n          <input\n            required\n            type=\"text\"\n            name=\"titulo\"\n            v-model=\"material.titulo\"\n            id=\"titulo\"\n            class=\"form-control\"\n            placeholder=\"Titulo del material\"\n            aria-describedby=\"titulo\"\n          />\n        </div>\n\n        <div class=\"form-group col-sm\">\n          <label for=\"autor\">Autor *</label>\n          <select\n            required\n            class=\"form-select\"\n            v-model=\"material.idAutor\"\n            aria-label=\"Default select example\"\n            id=\"autor\"\n            @change=\"obterAutor()\"\n          >\n            <option v-for=\"nautor in autor\" :key=\"nautor.id\" :value=\"nautor.id\">\n              {{ nautor.nombre }}\n            </option>\n          </select>\n        </div>\n\n        <div class=\"form-group col-sm\">\n          <!-- <div class=\"form-group\">\n                      <label for=\"autor\">Autor</label> \n                      <input v-model=\"libro.idAutor\" type=\"text\" required\n                        class=\"form-control\" name=\"autor\" id=\"autor\" aria-describedby=\"helpId\" placeholder=\"selecciona el autor\"  list=\"my-list-id\">\n                      \n                      <datalist required  id=\"my-list-id\" >\n                    <option  required v-for=\"nautor in autor \" :key=\"nautor.id\" >{{nautor.nombre}}</option>\n                    </datalist>\n                    </div> -->\n          <label for=\"\">Carrera *</label>\n          <select\n            v-model=\"material.idCarrera\"\n            required\n            class=\"form-select\"\n            name=\"carrera\"\n            id=\"carrera\"\n          >\n            <option\n              v-for=\"carrera in carreras\"\n              :key=\"carrera.id\"\n              :value=\"carrera.id\"\n            >\n              {{ carrera.nombreCarrera }}\n            </option>\n          </select>\n        </div>\n      </div>\n\n      <div class=\"row align-items-center\">\n        <div class=\"form-group col-sm\">\n          <label for=\"editorial\">Editorial *</label>\n          <select\n            required\n            class=\"form-select\"\n            v-model=\"material.idEditorial\"\n            aria-label=\"Default select example\"\n          >\n            <option\n              v-for=\"editorial in editoriales\"\n              :key=\"editorial.id\"\n              :value=\"editorial.id\"\n            >\n              {{ editorial.nombreEditorial }}\n            </option>\n          </select>\n        </div>\n\n        <div class=\"form-group col-sm\">\n          <label for=\"edicion\">Edicion *</label>\n          <input\n            required\n            type=\"number\"\n            name=\"edicion\"\n            v-model=\"material.edicion\"\n            id=\"edicion\"\n            class=\"form-control\"\n            placeholder=\"Edicion del material\"\n            aria-describedby=\"edicion\"\n          />\n        </div>\n\n        <div class=\"form-group col-sm\">\n          <label for=\"tipo\">Tipo *</label>\n          <select\n            required\n            class=\"form-select\"\n            v-model=\"material.idTipomaterial\"\n            aria-label=\"Default select example\"\n          >\n            <option\n              v-for=\"tipo in tipos\"\n              :key=\"tipo.id\"\n              :value=\"tipo.id\"\n            >\n              {{ tipo.tipo}}\n            </option>\n          </select>\n        </div>\n      </div>\n\n      <div class=\"row align-items-center\">\n        <div class=\"col-sm\">\n          <label for=\"codigo\">Código *</label>\n          <input\n            required\n            type=\"text\"\n            name=\"codigo\"\n            v-model=\"material.codigo\"\n            id=\"codigo\"\n            class=\"form-control\"\n            placeholder=\"Codigo del material\"\n            aria-describedby=\"codigo\"\n          />\n        </div>\n\n        <div class=\"col-sm\">\n          <label for=\"copias\">Cópias *</label>\n          <input\n            required\n            type=\"number\"\n            name=\"copias\"\n            v-model=\"material.copias\"\n            id=\"copias\"\n            class=\"form-control\"\n            placeholder=\"Cantidad de copias\"\n            aria-describedby=\"copias\"\n          />\n        </div>\n\n        <div class=\"col-sm\">\n          <label for=\"copias\">Cópias disponibles *</label>\n          <input\n            required\n            type=\"number\"\n            name=\"copias\"\n            v-model=\"material.copiasDisponibles\"\n            id=\"copias\"\n            class=\"form-control\"\n            placeholder=\"Cantidad de copias\"\n            aria-describedby=\"copias\"\n          />\n        </div>\n      </div>\n\n      <div class=\"form-group col-sm\">\n  <label for=\"copias\">Url portada</label>\n  \n    <input\n      \n      type=\"text\"\n      name=\"copias\"\n      v-model=\"material.urlPortada\"\n      id=\"url\"\n      class=\"form-control\"\n      placeholder=\"Imagen portada\"\n      aria-describedby=\"url\"\n    />\n  \n    <br>\n    <img :src=\"material.urlPortada\" alt=\"\" style=\"width: 180px; height: 250px;\">\n\n<div class=\"col-sm\">\n          <label for=\"pdf\">agraga un documento pdf</label>\n          \n          <input\n            \n            type=\"file\"\n            name=\"pdf\"\n            enctype=\"multipart/form-data\"\n            \n            @change=\"buscarArchivo\"\n            accept=\"application/pdf\"\n          />\n        </div>\n\n        <label for=\"observacion\">Observacion</label>\n        <textarea\n          required\n          class=\"form-control\"\n          id=\"observacion\"\n          v-model=\"material.observacion\"\n          rows=\"4\"\n          placeholder=\"Observacion del material\"\n          aria-describedby=\"observacion\"\n        ></textarea>\n      </div>\n      <br />\n\n      <div class=\"container row mx-1\" align=\"center\" raria-label=\"\">\n        <a \n          v-if=\"variable < 0\"\n          v-on:click.stop=\"agregarMaterial()\"\n          class=\"btn btn-success col-5\"\n        >\n        Agregar </a>\n        <a v-else v-on:click.stop=\"actualizar()\" class=\"btn btn-success col-5\">\n          Actualizar        </a>\n        <span class=\"col-2\"></span>\n        <!-- <a\n          v-if=\"variable < 0\"\n          v-on:click.stop=\"reset()\"\n          class=\"btn btn-danger col-5\"\n          >Resetear Formulario</a\n        > -->\n        <a v-on:click.stop=\"volver()\" class=\"btn btn-danger col-5\"\n          >Cancelar</a\n        >\n      </div>\n    </form>\n\n    \n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport const RUTA_SERVIDOR_ALUMNOS = process.env.VUE_APP_RUTA_API_ALUMNOS;\nexport const RUTA_SERVIDOR_LIBROS = process.env.VUE_APP_RUTA_API_LIBROS;\n\nexport default {\n  data() {\n    return {\n      nombreEditorial: \"\",\n      pdf:'',\n      carreras: [],\n      autor: [],\n      tipos:[],\n      material: {\n        titulo: \"\",\n        copias: \"\",\n        copiasDisponibles: \"\",\n        idTipomaterial: 1,\n        edicion: \"\",\n        codigo: \"\",\n        observacion: \"\",\n        idAutor: 1,\n        idEmpleado: \"\",\n        idSubsede: 0,\n        urlPortada: \"\",\n        idCarrera: 1,\n        idEditorial: \"\",\n        activo: 1,\n      },\n\n      nautor: {\n        nombre: \"\",\n        id: 0,\n      },\n      editoriales: [\n        {\n          nombreEditorial: \"\",\n        },\n      ],\n      preNombre: \"\",\n    };\n  },\n  props: {\n    variable: {\n      type: Number,\n      default: 0,\n    },\n  },\n\n  beforeMount() {\n    this.consultarEditorial();\n    this.consultarAutor();\n    this.consultarCarreras();\n    this.consultarMaterial();\n    this.consultarTipo();\n    this.resetMaterial()\n  },\n\n  methods: {\n    resetMaterial() {\n      \n      this.nombreEditorial= \"\",\n      this.pdf='',\n      this.carreras= [],\n      this.autor= [],\n      this.tipos=[],\n      this.material= {\n        titulo: \"\",\n        copias: \"\",\n        copiasDisponibles: \"\",\n        idTipomaterial: 1,\n        edicion: \"\",\n        codigo: \"\",\n        observacion: \"\",\n        idAutor: 1,\n        idEmpleado: \"\",\n        idSubsede: 0,\n        urlPortada: \"\",\n        idCarrera: 1,\n        idEditorial: \"\",\n        activo: 1,\n      };\n    },\n    consultarMaterial() {\n      if (this.variable > 0) {\n        fetch(RUTA_SERVIDOR_LIBROS+\"/materiales/\" + this.variable)\n          .then((respuesta) => respuesta.json())\n          .then((datosRespuesta) => {\n            this.material = [];\n            this.material.id = datosRespuesta.id;\n            this.material.titulo = datosRespuesta.titulo;\n            this.material.copias = datosRespuesta.copias;\n            this.material.copiasDisponibles = datosRespuesta.copiasDisponibles;\n            this.material.idTipomaterial = datosRespuesta.idTipomaterial;\n            this.material.edicion = datosRespuesta.edicion;\n            this.material.codigo = datosRespuesta.codigo;\n            this.material.observacion = datosRespuesta.observacion;\n            this.material.idAutor = datosRespuesta.idAutor;\n            this.material.idEmpleado = datosRespuesta.idEmpleado;\n            this.material.idCarrera = datosRespuesta.idCarrera;\n            this.material.urlPortada = datosRespuesta.urlPortada;\n            this.material.idEditorial = datosRespuesta.idEditorial;\n            this.material.activo = datosRespuesta.activo;\n            this.obterAutor();\n          })\n          .catch(console.log);\n      } else {\n        this.consultarEditorial();\n        this.consultarAutor();\n        this.consultarCarreras();\n      }\n    },\n\n    agregarMaterial() {\n      if(this.material.copias<this.material.copiasDisponibles) {\n    alert('Por favor, La cantidad de cópias disponibles no puede ser mayor a la cantidad de copías.');\n    return;\n  }\n  if(this.material.copias<0 || this.material.copiasDisponibles<0) {\n    alert('Por favor, La cantidad de cópias disponibles y la cantidad de copías no pueden ser negativas.');\n    return;\n  }\n      if (\n    this.material.titulo.trim() === \"\" ||\n    this.material.copias === \"\" ||\n    this.material.copiasDisponibles === \"\" ||\n    this.material.idTipomaterial === \"\" ||\n    this.material.edicion === \"\" ||\n    this.material.codigo.trim() === \"\" ||\n    this.material.idAutor === \"\" ||\n    this.material.idEditorial === \"\" ||\n    this.material.idCarrera === \"\"\n  \n  ) {\n    alert('Por favor, complete todos los campos obligatorios marcados con * antes de agregar material.');\n    return;\n  }\n\n      let formData = new FormData();\n      formData.append(\"titulo\", this.material.titulo);\n      formData.append(\"copias\", this.material.copias);\n      formData.append(\"copiasDisponibles\", this.material.copiasDisponibles);\n      formData.append(\"idTipomaterial\", this.material.idTipomaterial);\n      formData.append(\"edicion\", this.material.edicion);\n      formData.append(\"codigo\", this.material.codigo);\n      formData.append(\"observacion\", this.material.observacion);\n      formData.append(\"idAutor\", this.material.idAutor);\n      formData.append(\"idEmpleado\", localStorage.getItem('id'));\n      formData.append(\"idCarrera\", this.material.idCarrera);\n      formData.append(\"urlPortada\", this.material.urlPortada);\n      formData.append(\"idEditorial\", this.material.idEditorial);\n      formData.append(\"activo\", this.material.activo);\n      formData.append(\"documento\", this.pdf);\n      formData.append(\"idSubsede\", localStorage.getItem(\"idSubsede\"));\n      axios\n        .post(RUTA_SERVIDOR_LIBROS+\"/materiales/\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        })\n        .then(function (response) {\n          location.reload();\n        }) \n        .then(alert(\"El material se creó correctamente\"))\n        .catch(function (error) {\n          console.log(error);\n        });\n      \n    },\n\n    actualizar() {\n      if(this.material.copias<this.material.copiasDisponibles) {\n    alert('Por favor, La cantidad de cópias disponibles no puede ser mayor a la cantidad de cópias.');\n    return;\n  }\n  if(this.material.copias<0 || this.material.copiasDisponibles<0) {\n    alert('Por favor, La cantidad de cópias disponibles y la cantidad de cópias no pueden ser negativas.');\n    return;\n  }\n      if (\n    this.material.titulo.trim() === \"\" ||\n    this.material.copias === \"\" ||\n    this.material.copiasDisponibles === \"\" ||\n    this.material.idTipomaterial === \"\" ||\n    this.material.edicion === \"\" ||\n    this.material.codigo.trim() === \"\" ||\n    this.material.idAutor === \"\" ||\n    this.material.idEditorial === \"\" ||\n    this.material.idCarrera === \"\"\n  \n  ) {\n    alert('Por favor, complete todos los campos obligatorios marcados con * antes de actualizar el material.');\n    return;\n  }\n  const confirmacion = window.confirm(\n    '¿Estás seguro de que deseas actualizar estos datos?'\n  );\n\n  if (confirmacion) {\n      axios\n        .put(RUTA_SERVIDOR_LIBROS+\"/materiales/\" + this.material.id, {\n          titulo: this.material.titulo,\n          copias: this.material.copias,\n          copiasDisponibles: this.material.copiasDisponibles,\n          idTipomaterial: this.material.idTipomaterial,\n          edicion: this.material.edicion,\n          codigo: this.material.codigo,\n          idAutor: parseInt(this.material.idAutor),\n          idEmpleado: this.material.idEmpleado,\n          idSubsede: localStorage.getItem(\"idSubsede\"),\n          idEditorial: parseInt(this.material.idEditorial),\n          idCarrera: parseInt(this.material.idCarrera),\n          urlPortada: this.material.urlPortada.trim(),\n          observacion: this.material.observacion,\n          activo: 1,\n        })\n        .then(function (response) {\n          location.reload();\n        })  .then(alert(\"El material se actualizo correctamente\"))\n        .catch(function (error) {\n          console.log(error);\n          // console.log(this.material);\n        });}\n    },\n    consultarTipo() {\n      fetch(RUTA_SERVIDOR_LIBROS+\"/tipos/\")\n        .then((respuesta) => respuesta.json())\n        .then((datosRespuesta) => {\n          if (typeof datosRespuesta[0].success === \"undefined\") {\n            datosRespuesta.sort((a, b) => {\n              if (a.tipo.toUpperCase() == b.tipo.toUpperCase()) {\n                return 0;\n              }\n              if (a.tipo.toUpperCase() > b.tipo.toUpperCase()) {\n                return 1;\n              }\n              if (a.tipo.toUpperCase() < b.tipo.toUpperCase()) {\n                return -1;\n              }\n            });\n            this.tipos = datosRespuesta;\n         \n            console.log(this.tipos)\n           \n          }\n        })\n        .catch(console.log);\n    },\n    consultarAutor() {\n      fetch(RUTA_SERVIDOR_LIBROS+\"/autor/\")\n        .then((respuesta) => respuesta.json())\n        .then((datosRespuesta) => {\n          if (typeof datosRespuesta[0].success === \"undefined\") {\n            datosRespuesta.sort((a, b) => {\n              if (a.nombre.toUpperCase() == b.nombre.toUpperCase()) {\n                return 0;\n              }\n              if (a.nombre.toUpperCase() > b.nombre.toUpperCase()) {\n                return 1;\n              }\n              if (a.nombre.toUpperCase() < b.nombre.toUpperCase()) {\n                return -1;\n              }\n            });\n            this.autor = datosRespuesta;\n            this.material.idAutor = this.autor[0].id;\n            this.material.idEditorial = this.editoriales[0].id;\n          }\n        })\n        .catch(console.log);\n    },\n    consultarCarreras() {\n      fetch(RUTA_SERVIDOR_LIBROS+\"/carreras\")\n        .then((respuesta) => respuesta.json())\n        .then((datosRespuesta) => {\n          this.carreras = [];\n          if (typeof datosRespuesta[0].success === \"undefined\") {\n            this.carreras = datosRespuesta;\n          }\n        })\n        .catch(console.log);\n    },\n    consultarEditorial() {\n      fetch(RUTA_SERVIDOR_LIBROS+\"/editoriales/\")\n        .then((respuesta) => respuesta.json())\n        .then((datosRespuesta) => {\n          if (typeof datosRespuesta[0].success === \"undefined\") {\n            datosRespuesta.sort((a, b) => {\n              if (\n                a.nombreEditorial.toUpperCase() ==\n                b.nombreEditorial.toUpperCase()\n              ) {\n                return 0;\n              }\n              if (\n                a.nombreEditorial.toUpperCase() >\n                b.nombreEditorial.toUpperCase()\n              ) {\n                return 1;\n              }\n              if (\n                a.nombreEditorial.toUpperCase() <\n                b.nombreEditorial.toUpperCase()\n              ) {\n                return -1;\n              }\n            });\n            this.editoriales = datosRespuesta;\n          }\n        })\n        .catch(console.log);\n    },\n\n    reset() {\n      Object.assign(this.$data, this.$options.data());\n      this.consultarEditorial();\n      this.consultarAutor();\n      this.consultarCarreras();\n    },\n    volver() {\n      location.reload();\n    },\n    obterAutor() {\n      this.preNombre = this.autor.find(\n        (x) => x.id == this.material.idAutor\n      ).nombre;\n    },\n    Previa() {\n      let index = 0;\n      while (index != this.material.idAutor) {\n        if (this.material.idAutor == this.autor[index].id) {\n          this.preNombre = this.autor[index].nombre;\n          index = this.material.idAutor;\n        } else {\n          index++;\n        }\n      }\n    },\n\n    buscarArchivo(event){\n      this.pdf= event.target.files[0];\n      \n    },\n  \n\n\n\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}