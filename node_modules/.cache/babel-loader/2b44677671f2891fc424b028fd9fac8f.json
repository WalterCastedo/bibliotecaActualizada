{"ast":null,"code":"import { computed } from \"vue\";\nconst useFixedBarProps = {\n  hideOnScroll: {\n    type: Boolean,\n    default: false\n  },\n  fixed: {\n    type: Boolean,\n    default: false\n  },\n  bottom: {\n    type: Boolean,\n    default: false\n  }\n};\n\nfunction useFixedBar(props, isScrolledDown) {\n  const isHiddenComputed = computed(() => isScrolledDown.value ? !!props.hideOnScroll : false);\n  const transformComputed = computed(() => {\n    if (!props.bottom && !isHiddenComputed.value) {\n      return;\n    }\n\n    if (props.bottom && isHiddenComputed.value) {\n      return \"translateY(100%)\";\n    }\n\n    if (props.bottom) {\n      return props.fixed ? \"translateY(-100%)\" : \"translateY(0)\";\n    }\n\n    return \"translateY(-100%)\";\n  });\n  const positionComputed = computed(() => {\n    if (props.fixed) {\n      return \"fixed\";\n    }\n\n    return isHiddenComputed.value ? \"absolute\" : void 0;\n  });\n  const fixedBarStyleComputed = computed(() => {\n    const result = {\n      top: props.bottom && (isHiddenComputed.value || props.fixed) ? \"100%\" : void 0,\n      transform: props.hideOnScroll || props.fixed ? transformComputed.value : void 0\n    };\n    positionComputed.value && Object.assign(result, {\n      position: positionComputed.value\n    });\n    return result;\n  });\n  return {\n    fixedBarStyleComputed\n  };\n}\n\nexport { useFixedBar as a, useFixedBarProps as u };","map":{"version":3,"mappings":";AAEO,MAAMA,mBAAmB;EAC9BC,cAAc;IAAEC,MAAMC,OAAR;IAAiBC,SAAS;EAA1B,CADgB;EAE9BC,OAAO;IAAEH,MAAMC,OAAR;IAAiBC,SAAS;EAA1B,CAFuB;EAG9BE,QAAQ;IAAEJ,MAAMC,OAAR;IAAiBC,SAAS;EAA1B;AAHsB,CAAzB;;AAMA,qBAAsBG,KAAtB,EAAwEC,cAAxE,EAAsG;EACrG,yBAAmBC,SAAS,MAAMD,eAAeE,KAAf,GAAuB,CAAC,CAACH,MAAMN,YAA/B,GAA8C,KAA7D,CAAnB;EAEA,0BAAoBQ,SAAS,MAAM;IACvC,IAAI,CAACF,MAAMD,MAAP,IAAiB,CAACK,iBAAiBD,KAAvC,EAA8C;MAAE;IAAO;;IACnD,UAAMJ,MAAN,IAAgBK,iBAAiBD,KAAjC,EAAwC;MAAS;IAAmB;;IACxE,IAAIH,MAAMD,MAAV,EAAkB;MAAS,aAAMD,KAAN,GAAc,mBAAd,GAAoC,eAApC;IAAoD;;IACxE;EACR,CALyB,CAApB;EAOA,yBAAmBI,SAAS,MAAM;IACtC,IAAIF,MAAMF,KAAV,EAAiB;MAAS;IAAQ;;IAC3B,wBAAiBK,KAAjB,GAAyB,UAAzB,GAAsC,MAAtC;EACR,CAHwB,CAAnB;EAKA,8BAAwBD,SAAS,MAAM;IAC3C,MAAMG,SAAS;MACbC,KAAKN,MAAMD,MAAN,KAAMK,iBAA4BD,KAA5B,IAAqCH,MAAMF,KAAjD,IAA0D,MAA1D,GAAmE,MAD3D;MAEbS,WAAWP,MAAMN,YAAN,IAAsBM,MAAMF,KAA5B,GAAoCU,kBAAkBL,KAAtD,GAA8D;IAF5D,CAAf;IAKiBM,0BAASC,OAAOC,MAAP,CAAcN,MAAd,EAAsB;MAAEO,UAAUH,iBAAiBN;IAA7B,CAAtB,CAAT;IAEV;EACR,CAT6B,CAAxB;EAWN,OAAO;IAAEU;EAAF,CAAP;AACF","names":["useFixedBarProps","hideOnScroll","type","Boolean","default","fixed","bottom","props","isScrolledDown","computed","value","isHiddenComputed","result","top","transform","transformComputed","positionComputed","Object","assign","position","fixedBarStyleComputed"],"sources":["../../../../src/composables/useFixedBar.ts"],"sourcesContent":["import { computed, ExtractPropTypes, Ref, StyleValue } from 'vue'\n\nexport const useFixedBarProps = {\n  hideOnScroll: { type: Boolean, default: false },\n  fixed: { type: Boolean, default: false },\n  bottom: { type: Boolean, default: false },\n}\n\nexport function useFixedBar (props: ExtractPropTypes<typeof useFixedBarProps>, isScrolledDown: Ref<boolean>) {\n  const isHiddenComputed = computed(() => isScrolledDown.value ? !!props.hideOnScroll : false)\n\n  const transformComputed = computed(() => {\n    if (!props.bottom && !isHiddenComputed.value) { return }\n    if (props.bottom && isHiddenComputed.value) { return 'translateY(100%)' }\n    if (props.bottom) { return props.fixed ? 'translateY(-100%)' : 'translateY(0)' }\n    return 'translateY(-100%)'\n  })\n\n  const positionComputed = computed(() => {\n    if (props.fixed) { return 'fixed' }\n    return isHiddenComputed.value ? 'absolute' : undefined\n  })\n\n  const fixedBarStyleComputed = computed(() => {\n    const result = {\n      top: props.bottom && (isHiddenComputed.value || props.fixed) ? '100%' : undefined,\n      transform: props.hideOnScroll || props.fixed ? transformComputed.value : undefined,\n    }\n\n    positionComputed.value && Object.assign(result, { position: positionComputed.value })\n\n    return result\n  })\n\n  return { fixedBarStyleComputed }\n}\n"]},"metadata":{},"sourceType":"module"}