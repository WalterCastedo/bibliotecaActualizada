{"ast":null,"code":"import { computed, watch } from \"vue\";\nimport { b as isClient } from \"../../../utils/ssr.js\";\nimport { g as getGlobalProperty } from \"../../vue-plugin/utils/global-properties.js\";\nimport { u as useReactiveComputed } from \"../../../composables/useReactiveComputed.js\";\nimport { u as useDocument } from \"../../../composables/useDocument.js\";\nimport { u as useWindowSize } from \"../../../composables/useWindowSize.js\";\nimport { g as generateUniqueId } from \"../../../utils/uuid.js\";\nimport { a as addOrUpdateStyleElement } from \"../../../utils/dom.js\";\n\nconst createBreakpointConfigPlugin = app => {\n  var _a;\n\n  const globalConfig = (_a = getGlobalProperty(app, \"$vaConfig\")) == null ? void 0 : _a.globalConfig;\n\n  if (!globalConfig) {\n    return {};\n  }\n\n  const breakpointConfig = computed(() => {\n    const breakpoint = globalConfig.value.breakpoint;\n    return breakpoint != null ? breakpoint : {};\n  });\n\n  if (!breakpointConfig.value.enabled) {\n    return {};\n  }\n\n  if (!breakpointConfig.value.thresholds || !Object.values(breakpointConfig.value.thresholds).length) {\n    return {};\n  }\n\n  const {\n    windowSizes\n  } = useWindowSize();\n  const isMounted = computed(isClient);\n  const currentBreakpoint = computed(() => {\n    if (!isMounted.value || !windowSizes.width) {\n      return;\n    }\n\n    return Object.entries(breakpointConfig.value.thresholds).reduce((acc, [key, value]) => {\n      if (windowSizes.width >= value) {\n        acc = key;\n      }\n\n      return acc;\n    }, \"xs\");\n  });\n  const screenClasses = computed(() => Object.keys(breakpointConfig.value.thresholds).reduce((acc, threshold) => {\n    acc[threshold] = `va-screen-${threshold}`;\n    return acc;\n  }, {}));\n\n  const generateHelpersMediaCss = () => {\n    let result = \"\";\n    Object.values(breakpointConfig.value.thresholds).forEach((thresholdValue, index) => {\n      result += `@media screen and (min-width: ${thresholdValue}px) {`;\n      result += `:root { --va-media-ratio: ${(index + 1) * 0.2} }`;\n      result += \"}\\n\";\n    });\n    return result;\n  };\n\n  const uniqueId = computed(generateUniqueId);\n  addOrUpdateStyleElement(`va-helpers-media-${uniqueId.value}`, generateHelpersMediaCss);\n  const getDocument = useDocument();\n  watch(currentBreakpoint, newValue => {\n    if (!newValue || !breakpointConfig.value.bodyClass || !getDocument.value) {\n      return;\n    }\n\n    getDocument.value.body.classList.forEach(className => {\n      if (Object.values(screenClasses.value).includes(className)) {\n        getDocument.value.body.classList.remove(className);\n      }\n    });\n    getDocument.value.body.classList.add(screenClasses.value[newValue]);\n  }, {\n    immediate: true\n  });\n  const breakpointHelpers = computed(() => {\n    const isXs = currentBreakpoint.value === \"xs\";\n    const isSm = currentBreakpoint.value === \"sm\";\n    const isMd = currentBreakpoint.value === \"md\";\n    const isLg = currentBreakpoint.value === \"lg\";\n    const isXl = currentBreakpoint.value === \"xl\";\n    return {\n      xs: isXs,\n      sm: isSm,\n      md: isMd,\n      lg: isLg,\n      xl: isXl,\n      smUp: isSm || isMd || isLg || isXl,\n      mdUp: isMd || isLg || isXl,\n      lgUp: isLg || isXl,\n      smDown: isXs || isSm,\n      mdDown: isXs || isSm || isMd,\n      lgDown: isXs || isSm || isMd || isLg\n    };\n  });\n  return useReactiveComputed(() => ({\n    width: windowSizes.width,\n    height: windowSizes.height,\n    current: currentBreakpoint.value,\n    thresholds: breakpointConfig.value.thresholds,\n    ...breakpointHelpers.value\n  }));\n};\n\nexport { createBreakpointConfigPlugin as c };","map":{"version":3,"mappings":"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","names":["app","globalConfig","computed","value","breakpoint","breakpointConfig","enabled","thresholds","Object","values","length","windowSizes","useWindowSize","isClient","isMounted","width","entries","reduce","acc","key","screenClasses","keys","threshold","generateHelpersMediaCss","result","forEach","thresholdValue","index","generateUniqueId","addOrUpdateStyleElement","uniqueId","getDocument","useDocument","watch","newValue","bodyClass","body","classList","className","includes","remove","add","immediate","currentBreakpoint","xs","isXs","sm","isSm","md","isMd","lg","isLg","xl","isXl","smUp","mdUp","lgUp","smDown","mdDown","lgDown","useReactiveComputed","height","current","breakpointHelpers"],"sources":["../../../../../../src/services/breakpoint/plugin/create-service.ts"],"sourcesContent":["import { App, Ref, computed, watch, ComputedRef } from 'vue'\n\nimport { useDocument, useWindowSize, useReactiveComputed } from '../../../composables'\n\nimport { isClient } from '../../../utils/ssr'\nimport { warn } from '../../../utils/console'\nimport { generateUniqueId } from '../../../utils/uuid'\nimport { getGlobalProperty } from '../../vue-plugin/utils'\nimport { addOrUpdateStyleElement } from '../../../utils/dom'\n\nimport { GlobalConfig } from '../../global-config/types'\nimport { ThresholdsKey, BreakpointConfig, BodyClass, BreakpointServiceObject, BreakpointHelpers } from '../types'\n\nexport const createBreakpointConfigPlugin = (app: App): BreakpointServiceObject => {\n  const globalConfig: Ref<GlobalConfig> | undefined = getGlobalProperty(app, '$vaConfig')?.globalConfig\n  if (!globalConfig) {\n    warn('createBreakpointConfigPlugin: globalConfig is not defined!')\n    return {} as BreakpointServiceObject\n  }\n\n  const breakpointConfig: ComputedRef<BreakpointConfig> = computed(() => {\n    const breakpoint = globalConfig.value.breakpoint\n    if (!breakpoint) { warn('createBreakpointConfigPlugin: breakpointConfig is not defined!') }\n    return breakpoint ?? {} as BreakpointConfig\n  })\n\n  if (!breakpointConfig.value.enabled) {\n    return {} as BreakpointServiceObject\n  }\n\n  if (!breakpointConfig.value.thresholds || !Object.values(breakpointConfig.value.thresholds).length) {\n    warn('createBreakpointConfigPlugin: there are no defined thresholds!')\n    return {} as BreakpointServiceObject\n  }\n\n  const { windowSizes } = useWindowSize()\n\n  const isMounted = computed(isClient)\n  const currentBreakpoint = computed(() => {\n    if (!isMounted.value || !windowSizes.width) { return }\n\n    return Object.entries(breakpointConfig.value.thresholds).reduce((acc: string, [key, value]) => {\n      if (windowSizes.width! >= value) { acc = key }\n      return acc\n    }, 'xs') as unknown as ThresholdsKey\n  })\n\n  const screenClasses = computed(() =>\n    (Object.keys(breakpointConfig.value.thresholds) as ThresholdsKey[])\n      .reduce((acc: Record<ThresholdsKey, BodyClass>, threshold: ThresholdsKey) => {\n        acc[threshold] = `va-screen-${threshold}`\n        return acc\n      }, {} as Record<ThresholdsKey, BodyClass>))\n\n  const generateHelpersMediaCss = () => {\n    let result = ''\n\n    Object.values(breakpointConfig.value.thresholds)\n      .forEach((thresholdValue, index) => {\n        result += `@media screen and (min-width: ${thresholdValue}px) {`\n        // 0.2 coefficient for xs threshold and 1 for xl, experimental value for now\n        result += `:root { --va-media-ratio: ${(index + 1) * 0.2} }`\n        result += '}\\n'\n      })\n\n    return result\n  }\n\n  const uniqueId = computed(generateUniqueId)\n  addOrUpdateStyleElement(`va-helpers-media-${uniqueId.value}`, generateHelpersMediaCss)\n\n  const getDocument = useDocument()\n  watch(currentBreakpoint, (newValue) => {\n    if (!newValue || !breakpointConfig.value.bodyClass || !getDocument.value) { return }\n\n    getDocument.value.body.classList.forEach((className: string) => {\n      if ((Object.values(screenClasses.value) as string[]).includes(className)) {\n        getDocument.value!.body.classList.remove(className)\n      }\n    })\n\n    getDocument.value.body.classList.add(screenClasses.value[newValue])\n  }, { immediate: true })\n\n  const breakpointHelpers = computed(() => {\n    const isXs = currentBreakpoint.value === 'xs'\n    const isSm = currentBreakpoint.value === 'sm'\n    const isMd = currentBreakpoint.value === 'md'\n    const isLg = currentBreakpoint.value === 'lg'\n    const isXl = currentBreakpoint.value === 'xl'\n\n    return {\n      xs: isXs,\n      sm: isSm,\n      md: isMd,\n      lg: isLg,\n      xl: isXl,\n\n      smUp: isSm || isMd || isLg || isXl,\n      mdUp: isMd || isLg || isXl,\n      lgUp: isLg || isXl,\n\n      smDown: isXs || isSm,\n      mdDown: isXs || isSm || isMd,\n      lgDown: isXs || isSm || isMd || isLg,\n    }\n  }) as ComputedRef<BreakpointHelpers>\n\n  return useReactiveComputed<BreakpointServiceObject>(() => ({\n    width: windowSizes.width!,\n    height: windowSizes.height!,\n    current: currentBreakpoint.value!,\n    thresholds: breakpointConfig.value.thresholds,\n    ...breakpointHelpers.value,\n  }))\n}\n"]},"metadata":{},"sourceType":"module"}