{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Bar } from 'vue-chartjs';\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale); // Import component\n\nimport Loading from 'vue-loading-overlay'; // Import stylesheet\n\nimport 'vue-loading-overlay/dist/vue-loading.css'; // import * as XLSX from 'xlsx'\n\nimport * as saveAs from 'file-saver';\nimport listar from '@/views/LibrosView.vue';\nimport { jsPDF } from 'jspdf';\nimport 'jspdf-autotable'; // import { Carousel, Slide } from 'vue-carousel';\n\nimport modalPrestamo from \"@/components/modalPrestamo.vue\";\nimport axios from \"axios\"; // import CrearLibro from '@/components/CrearLibro.vue'\n\nexport const RUTA_SERVIDOR_ALUMNOS = process.env.VUE_APP_RUTA_API_ALUMNOS;\nexport const RUTA_SERVIDOR_LIBROS = process.env.VUE_APP_RUTA_API_LIBROS;\nexport default {\n  name: \"ListarLibro\",\n  components: {\n    Bar,\n    modalPrestamo,\n    Loading // CrearLibro,\n    // Carousel,\n    // Slide\n\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      fullPage: true,\n      dataToExport: [],\n      prestamolibro: {\n        id: 0,\n        nombreLibro: \"\",\n        autor: \"\",\n        editorial: \"\",\n        edicion: \"\",\n        urlPortada: \"\"\n      },\n      subsede: localStorage.getItem(\"idSubsede\"),\n      totalLibros: [],\n      libros: [],\n      autor: [],\n      carreras: [],\n      materia: 1,\n      nombreLibro: \"\",\n      nombreAutor: 1,\n      editoriales: [],\n      elementosPorPagina: 12,\n      datosPaginados: [],\n      paginaActual: 1,\n      acceso: localStorage.getItem(\"acceso\"),\n      radioPdf: 0,\n      chartData: {\n        labels: [],\n        datasets: [{\n          data: []\n        }]\n      },\n      chartOptions: {\n        responsive: true\n      }\n    };\n  },\n\n  async Created() {\n    this.consultarEditorial();\n    this.consultarAutor();\n    this.consultarCarreras();\n    await this.consultarLibros(); // this.isLoading = true;\n  },\n\n  async mounted() {\n    this.ObtenerDatosPag(1);\n  },\n\n  methods: {\n    redireccionaarPdf(pdf) {\n      var a = document.createElement(\"a\");\n      a.target = \"_blank\";\n      a.href = \"http://192.168.0.113:8082/storage/documentos/\" + pdf;\n      a.click();\n    },\n\n    onCancel() {\n      console.log('User cancelled the loader.');\n    },\n\n    consultarLibros() {\n      fetch(RUTA_SERVIDOR_LIBROS + \"/librosSubsede/\" + this.subsede).then(respuesta => respuesta.json()).then(datosRespuesta => {\n        this.libros = [];\n\n        if (typeof datosRespuesta[0].success === \"undefined\") {\n          datosRespuesta.sort((a, b) => {\n            if (a.titulo.toUpperCase() == b.titulo.toUpperCase()) {\n              return 0;\n            }\n\n            if (a.titulo.toUpperCase() > b.titulo.toUpperCase()) {\n              return 1;\n            }\n\n            if (a.titulo.toUpperCase() < b.titulo.toUpperCase()) {\n              return -1;\n            }\n          });\n          this.libros = datosRespuesta;\n\n          for (let index = 0; index < this.libros.length; index++) {\n            for (let index2 = 0; index2 < this.autor.length; index2++) {\n              if (this.autor[index2].id == this.libros[index].idAutor) {\n                var nombreAutor = this.autor[index2].nombre;\n                this.libros[index].nombre = nombreAutor;\n              }\n            }\n          }\n\n          this.filtrarlibros();\n          this.filtrarArchivos();\n        }\n      }).catch(console.log);\n    },\n\n    filtrarArchivos() {\n      this.dataToExport = [];\n\n      for (let index = 0; index < this.libros.length; index++) {\n        if (this.libros[index].idCarrera === this.materia && this.libros[index].activo === 1 && this.libros[index].documento != null && this.radioPdf == 1) {\n          this.dataToExport = this.dataToExport.concat(this.libros[index]);\n        } else {\n          if (this.libros[index].idCarrera === this.materia && this.libros[index].activo === 1 && this.libros[index].documento == null && this.radioPdf == 0) {\n            this.dataToExport = this.dataToExport.concat(this.libros[index]);\n          }\n        }\n      }\n    },\n\n    filtrarlibros() {\n      this.totalLibros = [];\n\n      for (let index = 0; index < this.libros.length; index++) {\n        if (this.libros[index].idCarrera === this.materia && this.libros[index].activo === 1 && (this.libros[index].titulo.toUpperCase().includes(this.nombreLibro.toUpperCase()) || this.libros[index].nombre.toUpperCase().includes(this.nombreLibro.toUpperCase())) && this.libros[index].documento != null && this.radioPdf == 1) {\n          this.totalLibros = this.totalLibros.concat(this.libros[index]);\n          this.ObtenerDatosPag(1);\n        } else {\n          if (this.libros[index].idCarrera === this.materia && this.libros[index].activo === 1 && (this.libros[index].titulo.toUpperCase().includes(this.nombreLibro.toUpperCase()) || this.libros[index].nombre.toUpperCase().includes(this.nombreLibro.toUpperCase())) && this.libros[index].documento == null && this.radioPdf == 0) {\n            this.totalLibros = this.totalLibros.concat(this.libros[index]);\n            this.ObtenerDatosPag(1);\n          }\n        }\n      }\n\n      if (this.totalLibros.length === 0) {\n        this.paginaPrevia(); //this.paginaActual=0;\n      }\n    },\n\n    consultarAutor() {\n      fetch(RUTA_SERVIDOR_LIBROS + \"/autor/\").then(respuesta => respuesta.json()).then(datosRespuesta => {\n        this.autor = datosRespuesta;\n      }).catch(console.log);\n    },\n\n    consultarEditorial() {\n      fetch(RUTA_SERVIDOR_LIBROS + \"/editoriales/\").then(respuesta => respuesta.json()).then(datosRespuesta => {\n        if (typeof datosRespuesta[0].success === \"undefined\") {\n          this.editoriales = datosRespuesta;\n        }\n      }).catch(console.log);\n    },\n\n    Enviar(id) {\n      this.$emit(\"recibiendo\", id);\n      listar.editar();\n    },\n\n    eliminar(libro) {\n      axios.put(RUTA_SERVIDOR_LIBROS + \"/libros/\" + libro.id, {\n        titulo: libro.titulo,\n        copias: libro.copias,\n        copiasDisponibles: libro.copiasDisponibles,\n        categoria: libro.categoria,\n        edicion: libro.edicion,\n        codigo: libro.codigo,\n        idAutor: parseInt(libro.idAutor),\n        idEmpleado: libro.idEmpleado,\n        idEditorial: parseInt(libro.idEditorial),\n        idCarrera: parseInt(libro.idCarrera),\n        urlPortada: libro.urlPortada,\n        observacion: libro.observacion,\n        documento: libro.documento,\n        activo: 0\n      }).then(function (response) {\n        location.reload();\n      }).catch(function (error) {\n        console.log(error); // console.log(this.libro);\n      });\n    },\n\n    obtenerLibro(id, nombre, autor, editorial, edicion, urlPortada) {\n      this.prestamolibro = {\n        id: id,\n        nombreLibro: nombre,\n        autor: autor,\n        editorial: editorial,\n        edicion: edicion,\n        urlPortada: urlPortada\n      };\n    },\n\n    consultarCarreras() {\n      fetch(RUTA_SERVIDOR_LIBROS + \"/carreras\").then(respuesta => respuesta.json()).then(datosRespuesta => {\n        this.carreras = [];\n        this.etiquetasG = [];\n        this.etiquetasG = [];\n\n        if (typeof datosRespuesta[0].success === \"undefined\") {\n          this.carreras = datosRespuesta;\n\n          for (let index = 0; index < this.carreras.length; index++) {\n            this.chartData.labels.push(this.carreras[index].nombreCarrera), this.chartData.datasets.data.push(this.carreras[index].id);\n          }\n        }\n\n        console.log(this.chartData);\n      }).catch(console.log);\n    },\n\n    totalPaginas() {\n      return Math.ceil(this.totalLibros.length / this.elementosPorPagina);\n    },\n\n    ObtenerDatosPag(noPag) {\n      this.paginaActual = noPag;\n      this.datosPaginados = [];\n      let ini = noPag * this.elementosPorPagina - this.elementosPorPagina;\n      let fin = noPag * this.elementosPorPagina;\n      this.datosPaginados = this.totalLibros.slice(ini, fin);\n    },\n\n    paginaPrevia() {\n      if (this.paginaActual > 1) {\n        this.paginaActual--;\n      }\n\n      this.ObtenerDatosPag(this.paginaActual);\n    },\n\n    paginaSiguiente() {\n      if (this.paginaActual < this.totalPaginas()) {\n        this.paginaActual++;\n      }\n\n      this.ObtenerDatosPag(this.paginaActual);\n    },\n\n    activo(noPoag) {\n      return noPoag === this.paginaActual ? \"active\" : \"\";\n    },\n\n    precionadoBoton(id) {\n      console.log(id);\n    },\n\n    cambiaC(carrera) {\n      this.materia = carrera;\n      this.filtrarlibros();\n      this.filtrarArchivos();\n    },\n\n    exportExcel() {\n      //convertir tabla html a excel\n      var htmlTable = document.getElementById('tablaLibros');\n      var html = htmlTable.outerHTML;\n      var blob = new Blob([html], {\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8\"\n      });\n      saveAs(blob, \"Libros.xls\");\n    },\n\n    exportPdf() {\n      //convertir tabla en pdf sin JSPDF\n      var doc = new jsPDF('p', 'pt');\n      var elem = document.getElementById(\"tablaLibros\");\n      var res = doc.autoTableHtmlToJson(elem);\n      doc.autoTable(res.columns, res.data, {\n        theme: 'grid',\n        styles: {\n          overflow: 'linebreak',\n          fontSize: 8,\n          rowHeight: 20,\n          font: 'helvetica',\n          fontStyle: 'normal',\n          lineWidth: 0.1,\n          lineColor: [0, 0, 0],\n          fillColor: [255, 255, 255],\n          textColor: [0, 0, 0],\n          halign: 'left',\n          valign: 'middle',\n          columnStyles: {\n            0: {\n              columnWidth: 'auto'\n            },\n            1: {\n              columnWidth: 'auto'\n            },\n            2: {\n              columnWidth: 'auto'\n            },\n            3: {\n              columnWidth: 'auto'\n            },\n            4: {\n              columnWidth: 'auto'\n            },\n            5: {\n              columnWidth: 'auto'\n            },\n            6: {\n              columnWidth: 'auto'\n            },\n            7: {\n              columnWidth: 'auto'\n            },\n            8: {\n              columnWidth: 'auto'\n            },\n            9: {\n              columnWidth: 'auto'\n            },\n            10: {\n              columnWidth: 'auto'\n            },\n            11: {\n              columnWidth: 'auto'\n            },\n            12: {\n              columnWidth: 'auto'\n            },\n            13: {\n              columnWidth: 'auto'\n            },\n            14: {\n              columnWidth: 'auto'\n            },\n            15: {\n              columnWidth: 'auto'\n            },\n            16: {\n              columnWidth: 'auto'\n            },\n            17: {\n              columnWidth: 'auto'\n            },\n            18: {\n              columnWidth: 'auto'\n            },\n            19: {\n              columnWidth: 'auto'\n            },\n            20: {\n              columnWidth: 'auto'\n            },\n            21: {\n              columnWidth: 'auto'\n            },\n            22: {\n              columnWidth: 'auto'\n            },\n            23: {\n              columnWidth: 'auto'\n            },\n            24: {\n              columnWidth: 'auto'\n            },\n            25: {\n              columnWidth: 'auto'\n            },\n            26: {\n              columnWidth: 'auto'\n            },\n            27: {\n              columnWidth: 'auto'\n            },\n            28: {\n              columnWidth: 'auto'\n            },\n            29: {\n              columnWidth: 'auto'\n            },\n            30: {\n              columnWidth: 'auto'\n            }\n          }\n        },\n        margin: {\n          top: 80,\n          left: 20,\n          right: 20,\n          bottom: 20\n        }\n      });\n      doc.save(\"Libros.pdf\");\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["ChartJS","name","components","Bar","modalPrestamo","Loading","data","isLoading","fullPage","dataToExport","prestamolibro","id","nombreLibro","autor","editorial","edicion","urlPortada","subsede","totalLibros","libros","carreras","materia","nombreAutor","editoriales","elementosPorPagina","datosPaginados","paginaActual","acceso","radioPdf","chartData","labels","datasets","chartOptions","responsive","methods","redireccionaarPdf","a","onCancel","console","consultarLibros","fetch","then","respuesta","datosRespuesta","catch","filtrarArchivos","filtrarlibros","toUpperCase","includes","consultarAutor","consultarEditorial","Enviar","listar","eliminar","axios","put","RUTA_SERVIDOR_LIBROS","titulo","copias","copiasDisponibles","categoria","codigo","idAutor","idEmpleado","idEditorial","idCarrera","observacion","documento","activo","location","obtenerLibro","consultarCarreras","totalPaginas","ObtenerDatosPag","paginaPrevia","paginaSiguiente","precionadoBoton","cambiaC","exportExcel","type","saveAs","exportPdf","doc","theme","styles","overflow","fontSize","rowHeight","font","fontStyle","lineWidth","lineColor","fillColor","textColor","halign","valign","columnStyles","columnWidth","margin","top","left","right","bottom"],"sourceRoot":"src/components","sources":["ListarLibro.vue"],"sourcesContent":["<template>\n\n  <div class=\"align-items-center \" >\n    <Bar\n    v-show=\"chartData!=[]\"\n    id=\"my-chart-id\"\n    :data=\"chartData\" :options=\"chartOptions\"\n  />\n\n    <div class=\"vld-parent\">\n        <loading :active=\"isLoading\"></loading>\n    </div>\n\n\n\n    <div class=\"row rowS \">\n      <div class=\"form-group col-sm-4\">\n        <label for=\"\">Titulo / autor</label>\n        <input\n          v-on:keyup=\"filtrarlibros()\"\n          v-model=\"nombreLibro\"\n          type=\"text\"\n          class=\"form-control\"\n          placeholder=\"Titulo del libro\"\n        />\n      </div>\n\n      <div class=\"form-group col-sm-5\">\n        <label>Selecciona una carrera</label>\n        <select\n          v-model=\"materia\"\n          @change=\"cambiaC(materia)\"\n          class=\"form-control\"\n        >\n          <option\n            v-for=\"carrera in carreras\"\n            :key=\"carrera.id\"\n            v-bind:value=\"carrera.id\"\n          >\n            {{ carrera.nombreCarrera }}\n          </option>\n        </select>\n       \n      </div>\n      \n      <div class=\"col-sm-2\" @change=\"cambiaC(materia)\">\n        <b-form-group label=\"Tipo: \" v-slot=\"{ ariaDescribedby }\">\n      <b-form-radio v-model=\"radioPdf\" :aria-describedby=\"ariaDescribedby\" name=\"some-radios\" value=\"0\">Libro</b-form-radio>\n      <b-form-radio v-model=\"radioPdf\" :aria-describedby=\"ariaDescribedby\" name=\"some-radios\" value=\"1\">PDF</b-form-radio>\n    </b-form-group>\n      </div>\n      <!-- <b-button class=\"btn  col-sm-2\n    \" v-if='acceso==2' @click=\"Enviar(-1)\">crear libros</b-button> -->\n    </div>\n    <br />\n\n\n\n  <div class=\"estudiante\" v-if='acceso==1'>\n    <div class=\"carrusel row\">\n      <div align=\"center\"\n        class=\"listado col-6 col-lg-3 col-md-4 col-xl-3\"\n        v-for=\"libro in datosPaginados\"\n        :key=\"libro.id\"\n      >\n      <div v-if=\"libro.documento==null\">\n<div class=\"icon-container-2\" \n        v-bind:style=\"{backgroundImage: 'url(' + libro.urlPortada + ')', backgroundSize: 'cover'}\"\n         v-b-modal.modal-lg\n        @click=\"\n                obtenerLibro(\n                  libro.id,\n                  libro.titulo,\n                  libro.nombre,\n                  editoriales[[libro.idEditorial] - 1].nombreEditorial,\n                  libro.edicion,\n                  libro.urlPortada,\n                )\"\n        >\n          <div v-if='acceso==2'>\n          <div class=\"btn-libro-1\">\n            <div align=\"center\" class=\"btn-libro\" @click=\"Enviar(libro.id)\">\n                ✍🏻\n            </div>\n          </div>\n          <div class=\"btn-circle-2\">\n            <div v-on:click=\"eliminar(libro)\" class=\"btn-circle\">\n             ❌\n            </div>\n          </div>\n          </div>\n        </div>\n      </div>\n      \n        <div v-else>\n<div class=\"icon-container-2\" \n        v-bind:style=\"{backgroundImage: 'url(' + libro.urlPortada + ')', backgroundSize: 'cover'}\"\n        @click=\"\n                redireccionaarPdf(\n                  libro.documento\n                )\"\n        >\n          <div v-if='acceso==2'>\n          <div class=\"btn-libro-1\">\n            <div align=\"center\" class=\"btn-libro\" @click=\"Enviar(libro.id)\">\n                ✍🏻\n            </div>\n          </div>\n          <div class=\"btn-circle-2\">\n            <div v-on:click=\"eliminar(libro)\" class=\"btn-circle\">\n             ❌\n            </div>\n          </div>\n          </div>\n        </div>\n        </div>\n\n        <div class=\"titulo\">{{ libro.titulo }}</div>\n        <div class=\"autor\" >\n           \n              <img\n                src=\"https://img.icons8.com/ios-filled/18/000000/guest-male--v1.png\"\n              />\n              {{ libro.nombre }}\n               <div style=\"font-size: 100%\">\n            \n            <div class=\"editorial\" style=\"font-size: 100%\">\n           \n            </div>\n          </div>\n            </div>\n      </div>\n    </div>\n    </div>\n\n\n\n    <div class=\"estudiante\" v-if='acceso==2'>\n\n\n    <div class=\"d-none d-sm-none d-md-block table-responsive table-sm small border\" >\n          <table class=\"table text-center table-striped\" id=\"\">\n            <thead>\n              <tr>\n                <!-- <th>ID</th> -->\n                <th>TITULO</th>\n                <th>AUTOR</th>\n                <th>EDITORIAL</th>\n                <th>EDICION</th>\n                <th>CODIGO</th>\n                <th>COPIAS</th>\n                <th>DISPONIBLES</th>\n                <th>ACCION</th>\n                \n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"libro in datosPaginados\" :key=\"libro.id\">\n                <td>{{ libro.titulo}}</td>\n                <td>{{  libro.nombre}}</td>\n                 <td>{{editoriales[[libro.idEditorial] - 1].nombreEditorial}} </td>\n                  <td>{{  libro.edicion}}</td>\n                   <td>{{  libro.codigo}}</td>\n                    <td>{{  libro.copias}}</td>\n                    <td>{{  libro.copiasDisponibles}}</td>\n\n                <td>\n                  <div class=\"btn-group\" role=\"group\" aria-label=\"\">\n                  <div v-if=\"libro.documento!=null\">\n                    <button @click=\"redireccionaarPdf(libro.documento)\"\n                     class=\"btn btn-info\">\n                      Ver PDF\n                    </button>\n                    </div>\n                  <div v-else>\n                    <button\n                     v-b-modal.modal-lg\n                     @click=\"\n                obtenerLibro(\n                  libro.id,\n                  libro.titulo,\n                  libro.nombre,\n                  editoriales[[libro.idEditorial] - 1].nombreEditorial,\n                  libro.edicion,\n                  libro.urlPortada,\n                )\"\n                      class=\"btn btn-info\"\n                    >\n                      📚\n                    </button>\n                    </div>\n                  \n                  \n                   <button\n                      v-b-modal.modal-center\n                     @click=\"Enviar(libro.id)\"\n                      class=\"btn btn-success\"\n                    >\n                      ✍🏻\n                    </button>\n                   \n                    \n                    <button\n                      type=\"button\"\n                      @click=\"eliminar(libro)\"\n                      class=\"btn btn-danger\"\n                    >\n                      𝗫\n                    </button>\n                     </div>\n                    \n                </td> \n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n\n\n\n    </div>\n\n\n\n\n\n\n    <nav aria-label=\"Page navigation example\">\n      <ul align=\"center\" class=\"pagination\">\n        <li class=\"page-item\" v-on:click=\"paginaPrevia()\">\n          <a class=\"page-link\" href=\"#\">Previous</a>\n        </li>\n        <li\n          v-for=\"pagina in totalPaginas()\"\n          :key=\"pagina\"\n          class=\"page-item\"\n          v-bind:class=\"activo(pagina)\"\n        >\n          <a class=\"page-link\" href=\"#\" v-on:click=\"ObtenerDatosPag(pagina)\">{{\n            pagina\n          }}</a>\n        </li>\n        <li class=\"page-item\" v-on:click=\"paginaSiguiente()\">\n          <a class=\"page-link\" href=\"#\">Next</a>\n        </li>\n      </ul>\n    </nav>\n    <b-modal id=\"modal-lg\" size=\"lg\" centered title=\"Solicitud de prestamo\" hide-footer>\n      <modalPrestamo v-bind:Libro=\"this.prestamolibro\"></modalPrestamo>\n    </b-modal>\n  \n  \n  \n  \n\n\n\n\n <div class=\"estudiante\" v-if='acceso==2' style=\"display:none;\">\n\n\n    <div class=\"d-none d-sm-none d-md-block table-responsive table-sm small \" >\n        \n          <table class=\"table\" id=\"tablaLibros\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>TITULO</th>\n                <th>AUTOR</th>\n                <th>EDITORIAL</th>\n                <th>EDICION</th>\n                <th>CODIGO</th>\n                <th>COPIAS</th>\n                <th>DISPONIBLES</th>\n               \n                \n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"libro , index in dataToExport\" :key=\"libro.id\">\n                <td>{{index+1}}</td>\n                <td>{{ libro.titulo}}</td>\n                <td>{{  libro.nombre}}</td>\n                 <td>{{editoriales[[libro.idEditorial] - 1].nombreEditorial}} </td>\n                  <td>{{  libro.edicion}}</td>\n                   <td>{{  libro.codigo}}</td>\n                    <td>{{  libro.copias}}</td>\n                    <td>{{  libro.copiasDisponibles}}</td>\n\n                \n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n\n\n\n    </div>\n\n\n  \n\n <div class=\"estudiante\" v-if='acceso==2' >\n\n  <button @click=\"exportExcel()\">Export table to excel xls</button>\n   <button @click=\"exportPdf()\">Export table pdf</button>\n</div>\n  \n  \n  </div>\n\n</template>\n\n<script>\nimport { Bar } from 'vue-chartjs'\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js'\n\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale)\n\n// Import component\n    import Loading from 'vue-loading-overlay';\n    // Import stylesheet\n    import 'vue-loading-overlay/dist/vue-loading.css';\n// import * as XLSX from 'xlsx'\nimport * as saveAs from 'file-saver';\nimport listar from '@/views/LibrosView.vue'\nimport { jsPDF, } from 'jspdf';\nimport  'jspdf-autotable';\n// import { Carousel, Slide } from 'vue-carousel';\nimport modalPrestamo from \"@/components/modalPrestamo.vue\";\nimport axios from \"axios\";\n// import CrearLibro from '@/components/CrearLibro.vue'\nexport const RUTA_SERVIDOR_ALUMNOS = process.env.VUE_APP_RUTA_API_ALUMNOS;\nexport const RUTA_SERVIDOR_LIBROS = process.env.VUE_APP_RUTA_API_LIBROS;\n\nexport default {\n  name: \"ListarLibro\",\n\n  components: {\n    Bar,\n    modalPrestamo,\n    Loading\n    // CrearLibro,\n    // Carousel,\n    // Slide\n  },\n\n  data() {\n    \n    return {\n      isLoading: false,\n      fullPage: true,\n      dataToExport: [],\n      prestamolibro: {\n        id: 0,\n        nombreLibro: \"\",\n        autor: \"\",\n        editorial: \"\",\n        edicion: \"\",\n        urlPortada: \"\",\n      },\n      subsede:localStorage.getItem(\"idSubsede\"),\n      totalLibros: [],\n      libros: [],\n      autor: [],\n      carreras: [],\n      materia: 1,\n      nombreLibro: \"\",\n      nombreAutor: 1,\n      editoriales: [],\n      elementosPorPagina: 12,\n      datosPaginados: [],\n      paginaActual: 1,\n      acceso: localStorage.getItem(\"acceso\"),\n\n      radioPdf:0,\n\n      chartData: {\n        labels: [],\n        datasets: [ { data:[]} ]\n      },\n      chartOptions: {\n        responsive: true\n      }\n    };\n  },\n\n  \n\n  async Created() {\n     \n     this.consultarEditorial();\n this.consultarAutor();\n\n   this.consultarCarreras();\n\n   await this.consultarLibros();\n    // this.isLoading = true;\n   \n \n  },\nasync mounted() {\n     \n     this.ObtenerDatosPag(1);\n    \n  },\n  \n  methods: {\n\n    redireccionaarPdf(pdf){\n      var a = document.createElement(\"a\");\n        a.target = \"_blank\";\n        a.href=\"http://192.168.0.113:8082/storage/documentos/\"+pdf;\n        a.click();\n    },\n\n    onCancel() {\n                console.log('User cancelled the loader.')\n            },\n    \n    consultarLibros() {\n      fetch(RUTA_SERVIDOR_LIBROS+\"/librosSubsede/\"+ this.subsede)\n        .then((respuesta) => respuesta.json())\n        .then((datosRespuesta) => {\n          \n          this.libros = [];\n          if (typeof datosRespuesta[0].success === \"undefined\") {\n            datosRespuesta.sort((a, b) => {\n              if (a.titulo.toUpperCase() == b.titulo.toUpperCase()) {\n                return 0;\n              }\n              if (a.titulo.toUpperCase() > b.titulo.toUpperCase()) {\n                return 1;\n              }\n              if (a.titulo.toUpperCase() < b.titulo.toUpperCase()) {\n                return -1;\n              }\n            });\n            this.libros = datosRespuesta;\n\n             for (let index = 0; index < this.libros.length; index++) {\n            for (let index2 = 0; index2 < this.autor.length; index2++) {\n          if(this.autor[index2].id==this.libros[index].idAutor){\n          var nombreAutor = this.autor[index2].nombre;\n        this.libros[index].nombre=nombreAutor;\n       \n          }\n        }\n             }\n            this.filtrarlibros();\n            this.filtrarArchivos();\n          }\n          \n        })\n        .catch(console.log);\n    },\n\n    \n    filtrarArchivos(){\n      this.dataToExport = [];\n      for (let index = 0; index < this.libros.length; index++) {\n        if ( this.libros[index].idCarrera === this.materia && this.libros[index].activo === 1 && (this.libros[index].documento!=null && this.radioPdf==1)\n        )         \n        {\n          this.dataToExport = this.dataToExport.concat(this.libros[index]);\n        }\n        else{\n          if (\n          this.libros[index].idCarrera === this.materia &&\n          this.libros[index].activo === 1 && (this.libros[index].documento==null && this.radioPdf==0)     )   \n        {\n          this.dataToExport = this.dataToExport.concat(this.libros[index]);\n        }\n        }\n      }\n  \n    },\n\n\n     filtrarlibros() {\n      this.totalLibros = [];\n      for (let index = 0; index < this.libros.length; index++) {\n        if (\n          this.libros[index].idCarrera === this.materia &&\n          this.libros[index].activo === 1 &&\n          (this.libros[index].titulo.toUpperCase().includes(this.nombreLibro.toUpperCase()) ||\n            this.libros[index].nombre.toUpperCase().includes(this.nombreLibro.toUpperCase()))\n            &&(this.libros[index].documento!=null && this.radioPdf==1)\n        )         \n        {\n          this.totalLibros = this.totalLibros.concat(this.libros[index]);\n          this.ObtenerDatosPag(1);\n        }\n        else{\n          if (\n          this.libros[index].idCarrera === this.materia &&\n          this.libros[index].activo === 1 &&\n          (this.libros[index].titulo\n            .toUpperCase()\n            .includes(this.nombreLibro.toUpperCase()) ||\n            this.libros[index].nombre\n              .toUpperCase()\n              .includes(this.nombreLibro.toUpperCase()))&&\n              (this.libros[index].documento==null && this.radioPdf==0)\n        )         \n        {\n          this.totalLibros = this.totalLibros.concat(this.libros[index]);\n         \n          this.ObtenerDatosPag(1);\n        }\n        }\n        \n      }\n   \n      if (this.totalLibros.length === 0) {\n        this.paginaPrevia();\n        //this.paginaActual=0;\n      }\n    },\n\n    consultarAutor() {\n      fetch(RUTA_SERVIDOR_LIBROS+\"/autor/\")\n        .then((respuesta) => respuesta.json())\n        .then((datosRespuesta) => {\n          \n            this.autor = datosRespuesta;\n          \n          \n        })\n        .catch(console.log);\n    },\n\n    consultarEditorial() {\n      fetch(RUTA_SERVIDOR_LIBROS+\"/editoriales/\")\n        .then((respuesta) => respuesta.json())\n        .then((datosRespuesta) => {\n          if (typeof datosRespuesta[0].success === \"undefined\") {\n            this.editoriales = datosRespuesta;\n          }\n        })\n        .catch(console.log);\n    },\n\n    Enviar(id) {\n      this.$emit(\"recibiendo\", id);\n      listar.editar();\n    \n    },\n\n    eliminar(libro) {\n      axios\n        .put(RUTA_SERVIDOR_LIBROS+\"/libros/\" + libro.id, {\n          titulo: libro.titulo,\n          copias: libro.copias,\n          copiasDisponibles: libro.copiasDisponibles,\n          categoria: libro.categoria,\n          edicion: libro.edicion,\n          codigo: libro.codigo,\n          idAutor: parseInt(libro.idAutor),\n          idEmpleado: libro.idEmpleado,\n          idEditorial: parseInt(libro.idEditorial),\n          idCarrera: parseInt(libro.idCarrera),\n          urlPortada: libro.urlPortada,\n          observacion: libro.observacion,\n          documento: libro.documento,\n          activo: 0,\n        })\n        .then(function (response) {\n        \n          location.reload();\n        })\n        .catch(function (error) {\n          console.log(error);\n          // console.log(this.libro);\n        });\n    },\n    obtenerLibro(id, nombre, autor, editorial, edicion,urlPortada) {\n      this.prestamolibro = {\n        id: id,\n        nombreLibro: nombre,\n        autor: autor,\n        editorial: editorial,\n        edicion: edicion,\n        urlPortada:urlPortada,\n      };\n    },\n\n    consultarCarreras() {\n      fetch(RUTA_SERVIDOR_LIBROS+\"/carreras\")\n        .then((respuesta) => respuesta.json())\n        .then((datosRespuesta) => {\n          this.carreras = [];\n          this.etiquetasG=[];\n          this.etiquetasG=[];\n          if (typeof datosRespuesta[0].success === \"undefined\") {\n            this.carreras = datosRespuesta;\n          \n            for (let index = 0; index <  this.carreras.length; index++) {\n              this.chartData.labels.push(this.carreras[index].nombreCarrera),\n              this.chartData.datasets.data.push(this.carreras[index].id)\n            }\n          }\n          console.log(this.chartData);\n        \n         \n        })\n        .catch(console.log);\n    },\n\n    totalPaginas() {\n      return Math.ceil(this.totalLibros.length / this.elementosPorPagina);\n    },\n    ObtenerDatosPag(noPag) {\n      this.paginaActual = noPag;\n      this.datosPaginados = [];\n      let ini = noPag * this.elementosPorPagina - this.elementosPorPagina;\n      let fin = noPag * this.elementosPorPagina;\n      this.datosPaginados = this.totalLibros.slice(ini, fin);\n     \n    },\n    paginaPrevia() {\n      if (this.paginaActual > 1) {\n        this.paginaActual--;\n      }\n      this.ObtenerDatosPag(this.paginaActual);\n    },\n    paginaSiguiente() {\n      if (this.paginaActual < this.totalPaginas()) {\n        this.paginaActual++;\n      }\n      this.ObtenerDatosPag(this.paginaActual);\n    },\n    activo(noPoag) {\n      return noPoag === this.paginaActual ? \"active\" : \"\";\n    },\n    precionadoBoton(id) {\n      console.log(id);\n    },\n    cambiaC(carrera) {\n      this.materia = carrera;\n      this.filtrarlibros();\n      this.filtrarArchivos();\n    },\n\n    exportExcel(){\n      //convertir tabla html a excel\n\n      var htmlTable = document.getElementById('tablaLibros');\n      var html = htmlTable.outerHTML;\n      var blob = new Blob([html], {\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8\"\n      });\n      saveAs(blob, \"Libros.xls\");\n\n    },\n\n    exportPdf(){\n      //convertir tabla en pdf sin JSPDF\n      var doc = new jsPDF('p', 'pt');\n      var elem = document.getElementById(\"tablaLibros\");\n      var res = doc.autoTableHtmlToJson(elem);\n      doc.autoTable(res.columns, res.data, {\n        theme: 'grid',\n        styles: {\n          overflow: 'linebreak',\n          fontSize: 8,\n          rowHeight: 20,\n          font: 'helvetica',\n          fontStyle: 'normal',\n          lineWidth: 0.1,\n          lineColor: [0, 0, 0],\n          fillColor: [255, 255, 255],\n          textColor: [0, 0, 0],\n          halign: 'left',\n          valign: 'middle',\n          columnStyles: {\n            0: { columnWidth: 'auto' },\n            1: { columnWidth: 'auto' },\n            2: { columnWidth: 'auto' },\n            3: { columnWidth: 'auto' },\n            4: { columnWidth: 'auto' },\n            5: { columnWidth: 'auto' },\n            6: { columnWidth: 'auto' },\n            7: { columnWidth: 'auto' },\n            8: { columnWidth: 'auto' },\n            9: { columnWidth: 'auto' },\n            10: { columnWidth: 'auto' },\n            11: { columnWidth: 'auto' },\n            12: { columnWidth: 'auto' },\n            13: { columnWidth: 'auto' },\n            14: { columnWidth: 'auto' },\n            15: { columnWidth: 'auto' },\n            16: { columnWidth: 'auto' },\n            17: { columnWidth: 'auto' },\n            18: { columnWidth: 'auto' },\n            19: { columnWidth: 'auto' },\n            20: { columnWidth: 'auto' },\n            21: { columnWidth: 'auto' },\n            22: { columnWidth: 'auto' },\n            23: { columnWidth: 'auto' },\n            24: { columnWidth: 'auto' },\n            25: { columnWidth: 'auto' },\n            26: { columnWidth: 'auto' },\n            27: { columnWidth: 'auto' },\n            28: { columnWidth: 'auto' },\n            29: { columnWidth: 'auto' },\n            30: { columnWidth: 'auto' },\n          },\n        },\n        margin: {\n          top: 80,\n          left: 20,\n          right: 20,\n          bottom: 20,\n        },\n        \n      });\n      \n      doc.save(\"Libros.pdf\");\n    },\n   \n\n  },\n};\n</script>\n\n<style>\n\n\n\n\n.groupB {\n  width: 8rem;\n}\n\n.btn-circle-2,\n.btn-libro-1,\n.btn-libro-2 {\n  position: absolute;\n  bottom: 0.5rem;\n  left: 0.5rem;\n  width: 2.5rem;\n  height: 2.5rem;\n\n  text-align: center;\n  line-height: 1.8rem;\n  cursor: pointer;\n  /* background: #e1e1e1;\n\n  box-shadow:  5px 5px 10px #a9a9a9,\n             -5px -5px 10px #dddddd; */\n}\n\n.btn-circle,\n.btn-libro {\n  position: absolute;\n \n  width: 2rem;\n  height: 2rem;\n  border-radius: 50%;\n\n  background-color: rgb(237, 237, 237);\n  border: rgb(118, 118, 118) 0.07rem solid;\n\n  text-align: center;\n  line-height: 1.8rem;\n  cursor: pointer;\n\n  transition: all 0.2s ease-in-out;\n}\n\n.btn-libro-1 {\n  left: 8rem;\n}\n.btn-libro-2 {\n  left: 4.25rem;\n}\n.btn-circle:active,\n.btn-libro:active {\n  box-shadow: inset 4px 4px 8px #a9a9a9, inset -4px -4px 8px #ffffff;\n  font-size: 1.4em;\n}\n\n.titulo {\n  \n  width: 10rem;\n  font-size: 12px;\n  font-weight: bold;\n white-space:nowrap;\n   overflow: hidden;\n  text-overflow: ellipsis;\n  \n}\n.editorial{\n   white-space:nowrap;\n   overflow: hidden;\n  text-overflow: ellipsis;\n}\n.autor {\n    white-space:nowrap;\n   overflow: hidden;\n  text-overflow: ellipsis;\n  padding-top: 0rem;\n  padding-bottom: 0.5rem;\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n  overflow: hidden;\n width: 10rem;\n  font-size: 12px;\n  \n  margin-bottom: 2rem;\n}\n\n.icon-container-2 {\n \n  position: relative;\n  width: 10rem;\n  height: 16rem;\n  padding: 0;\n  \n  padding-top: 0.5rem;\n  \n  \n}\n\n.icon-container-2\n{\n      \n      transition:all .3s ease;\n      color:#41403E;\n      font-size:2rem;\n      letter-spacing:1px;\n      outline:none;\n      box-shadow: 20px 38px 34px -26px hsla(0,0%,0%,.2);\n      border-color: #a9a9a9;\n      border: solid;\n      \n}   \n.icon-container-2:hover{\n         box-shadow:2px 8px 4px -6px rgba(0, 0, 0, 0.501);\n         -webkit-transform: scale(0.98);\n-ms-transform: scale(0.98);\ntransform: scale(0.98);\n  }\n.icon-container-2.lined.thin{\n         border:solid 2px #282828;\n      }\n    \n\n@media screen and (max-width: 480px) {\n  .titulo {\n    margin-top: 0;\n    padding-top: 0.5rem;\n\n    font-size: 12px;\n  }\n  .autor {\n    overflow: hidden;\n   \n    font-size: 12px;\n  }\n\n  .icon-container-2 {\n    \n\n    width: 9.5rem;\n    height: 16rem;\n    padding: 0;\n    \n    padding-top: 0.5rem;\n  }\n  \n  \n\n  .btn-circle,\n  .btn-libro {\n    position: absolute;\n   \n    width: 2rem;\n    height: 2rem;\n\n    background-color: rgb(255, 255, 255);\n\n    text-align: center;\n    line-height: 1.8rem;\n    cursor: pointer;\n\n    transition: all 0.2s ease-in-out;\n  }\n\n  .btn-libro-1 {\n    left: 6.5rem;\n  }\n  .btn-libro-2 {\n    left: 3.5rem;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}