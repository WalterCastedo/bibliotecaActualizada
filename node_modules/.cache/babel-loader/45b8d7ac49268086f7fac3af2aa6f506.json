{"ast":null,"code":"import { defineComponent, computed, openBlock, createElementBlock, normalizeClass, createElementVNode, normalizeStyle, renderSlot, createTextVNode, toDisplayString } from \"vue\";\nimport { u as useColors } from \"../../composables/useColors.js\";\nimport { u as useComponentPresetProp } from \"../../composables/useComponentPreset.js\";\nimport { u as useTextColor } from \"../../composables/useTextColor.js\";\nimport { _ as _export_sfc } from \"../../../plugin-vue_export-helper.js\";\n\nvar VaBadge_vue_vue_type_style_index_0_lang = /* @__PURE__ */(() => \":root{--va-badge-py: 0;--va-badge-font-size: .625rem;--va-badge-border: .125rem;--va-badge-size: calc(var(--va-badge-font-size) * var(--va-badge-line-height) + var(--va-badge-border) * 2);--va-badge-overlap: calc(var(--va-badge-size) / 3);--va-badge-display: inline-flex;--va-badge-position: relative;--va-badge-line-height: 1.4;--va-badge-margin: 0;--va-badge-dot-size: .5rem;--va-badge-text-wrapper-transition: .2s cubic-bezier(.4, 0, .6, 1);--va-badge-text-wrapper-display: inline-flex;--va-badge-text-wrapper-border: solid .125rem;--va-badge-text-wrapper-border-radius: .125rem;--va-badge-text-wrapper-font-weight: 700;--va-badge-text-wrapper-line-height: 1.4;--va-badge-text-wrapper-letter-spacing: .0375rem;--va-badge-text-wrapper-justify-content: center;--va-badge-text-wrapper-white-space: nowrap;--va-badge-text-wrapper-width: auto;--va-badge-text-wrapper-height: auto;--va-badge-text-wrapper-min-width: initial;--va-badge-text-wrapper-min-height: initial;--va-badge-text-wrapper-margin: 0;--va-badge-text-transform: uppercase;--va-badge-text-py: 0;--va-badge-text-px: .25rem}.va-badge{display:inline-flex;position:relative;font-family:var(--va-font-family)}.va-badge__text-wrapper{transition:var(--va-badge-text-wrapper-transition, var(--va-transition));display:var(--va-badge-text-wrapper-display);border:var(--va-badge-text-wrapper-border, var(--va-control-border));border-radius:var(--va-badge-text-wrapper-border-radius);font-weight:var(--va-badge-text-wrapper-font-weight);line-height:var(--va-badge-text-wrapper-line-height);letter-spacing:var(--va-badge-text-wrapper-letter-spacing, var(--va-letter-spacing));justify-content:var(--va-badge-text-wrapper-justify-content);white-space:var(--va-badge-text-wrapper-white-space);width:var(--va-badge-text-wrapper-width);height:var(--va-badge-text-wrapper-height);min-width:var(--va-badge-text-wrapper-min-width);min-height:var(--va-badge-text-wrapper-min-height);margin:var(--va-badge-text-wrapper-margin)}.va-badge--visible-empty .va-badge__text-wrapper{min-width:var(--va-badge-size);min-height:var(--va-badge-size)}.va-badge--dot .va-badge__text-wrapper{min-width:var(--va-badge-dot-size);min-height:var(--va-badge-dot-size);border-width:0;border-radius:100%;padding:0}.va-badge--empty .va-badge__text-wrapper{width:0;height:0;min-width:0;min-height:0;border-width:0}.va-badge--multiLine .va-badge__text-wrapper{white-space:normal}.va-badge--floating .va-badge__text-wrapper{position:absolute;z-index:2;top:0;left:100%;transform:translate(0) translateY(-50%)}.va-badge--overlap .va-badge__text-wrapper{margin-left:calc(-1 * var(--va-badge-overlap));margin-right:0;transform:translateY(-25%)}.va-badge--left .va-badge__text-wrapper{left:0;transform:translate(-100%) translateY(-50%)}.va-badge--left.va-badge--overlap .va-badge__text-wrapper{margin-left:var(--va-badge-overlap);transform:translate(-100%) translateY(-25%)}.va-badge--bottom .va-badge__text-wrapper{top:100%;transform:translate(0) translateY(-50%)}.va-badge--left.va-badge--bottom .va-badge__text-wrapper{transform:translate(-100%) translateY(-50%)}.va-badge--bottom.va-badge--overlap .va-badge__text-wrapper{margin-left:calc(-1 * var(--va-badge-overlap));transform:translate(0) translateY(-75%)}.va-badge--bottom.va-badge--left.va-badge--overlap .va-badge__text-wrapper{margin-left:var(--va-badge-overlap);transform:translate(-100%) translateY(-75%)}.va-badge__text{margin:var(--va-badge-margin);text-transform:var(--va-badge-text-transform);overflow:hidden;min-width:calc(var(--va-badge-font-size) * var(--va-badge-line-height));padding:var(--va-badge-text-py) var(--va-badge-text-px);text-align:center;display:inline-flex;justify-content:center;text-overflow:clip;white-space:nowrap;font-size:var(--va-badge-font-size)}.va-badge--multiLine .va-badge__text{overflow:auto;max-height:initial;text-align:initial;text-overflow:initial;white-space:normal}.va-badge--dot .va-badge__text{display:none}.va-badge--floating .va-badge__text{align-items:center;padding:var(--va-badge-py) .15rem}\\n\")();\n\nconst _sfc_main = defineComponent({\n  name: \"VaBadge\",\n  props: { ...useComponentPresetProp,\n    color: {\n      type: String,\n      default: \"danger\"\n    },\n    textColor: {\n      type: String\n    },\n    text: {\n      type: [String, Number],\n      default: \"\"\n    },\n    overlap: {\n      type: Boolean,\n      default: false\n    },\n    multiLine: {\n      type: Boolean,\n      default: false\n    },\n    visibleEmpty: {\n      type: Boolean,\n      default: false\n    },\n    dot: {\n      type: Boolean,\n      default: false\n    },\n    transparent: {\n      type: Boolean,\n      default: false\n    },\n    left: {\n      type: Boolean,\n      default: false\n    },\n    bottom: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  setup(props, {\n    slots\n  }) {\n    const isEmpty = computed(() => !(props.text || props.visibleEmpty || props.dot || slots.text));\n    const isFloating = computed(() => slots.default || props.dot);\n    const badgeClass = computed(() => ({\n      \"va-badge--visible-empty\": props.visibleEmpty,\n      \"va-badge--empty\": isEmpty.value,\n      \"va-badge--dot\": props.dot,\n      \"va-badge--multiLine\": props.multiLine,\n      \"va-badge--floating\": isFloating.value,\n      \"va-badge--left\": props.left,\n      \"va-badge--bottom\": props.bottom,\n      \"va-badge--overlap\": props.overlap\n    }));\n    const {\n      getColor\n    } = useColors();\n    const {\n      textColorComputed\n    } = useTextColor();\n    const colorComputed = computed(() => getColor(props.color));\n    const badgeStyle = computed(() => ({\n      color: textColorComputed.value,\n      borderColor: colorComputed.value,\n      backgroundColor: colorComputed.value,\n      opacity: props.transparent ? 0.5 : 1\n    }));\n    return {\n      badgeClass,\n      badgeStyle\n    };\n  }\n\n});\n\nconst _hoisted_1 = {\n  class: \"va-badge__text\"\n};\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass([\"va-badge\", _ctx.badgeClass]),\n    role: \"alert\"\n  }, [createElementVNode(\"span\", {\n    class: \"va-badge__text-wrapper\",\n    style: normalizeStyle(_ctx.badgeStyle)\n  }, [createElementVNode(\"span\", _hoisted_1, [renderSlot(_ctx.$slots, \"text\", {}, () => [createTextVNode(toDisplayString(_ctx.text), 1)])])], 4), renderSlot(_ctx.$slots, \"default\")], 2);\n}\n\nvar _VaBadge = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { _VaBadge as _ };\nimport './VaBadge.css';","map":{"version":3,"mappings":";;;;;;;;AAyBA,MAAKA,YAAaC,gBAAa;EAC7BC,MAAM,SADuB;EAE7BC,OAAO,EACL,GAAGC,sBADE;IAELC,OAAO;MAAEC,MAAMC,MAAR;MAAgBC,SAAS;IAAzB,CAFF;IAGLC,WAAW;MAAEH,MAAMC;IAAR,CAHN;IAILG,MAAM;MAAEJ,MAAM,CAACC,MAAD,EAASI,MAAT,CAAR;MAA0BH,SAAS;IAAnC,CAJD;IAKLI,SAAS;MAAEN,MAAMO,OAAR;MAAiBL,SAAS;IAA1B,CALJ;IAMLM,WAAW;MAAER,MAAMO,OAAR;MAAiBL,SAAS;IAA1B,CANN;IAOLO,cAAc;MAAET,MAAMO,OAAR;MAAiBL,SAAS;IAA1B,CAPT;IAQLQ,KAAK;MAAEV,MAAMO,OAAR;MAAiBL,SAAS;IAA1B,CARA;IASLS,aAAa;MAAEX,MAAMO,OAAR;MAAiBL,SAAS;IAA1B,CATR;IAULU,MAAM;MAAEZ,MAAMO,OAAR;MAAiBL,SAAS;IAA1B,CAVD;IAWLW,QAAQ;MAAEb,MAAMO,OAAR;MAAiBL,SAAS;IAA1B;EAXH,CAFsB;;EAe7BY,MAAOjB,KAAP,EAAc;IAAEkB;EAAF,CAAd,EAAyB;IACjB,gBAAUC,SAAS,MAAM,EAAEnB,MAAMO,IAAN,IAAcP,MAAMY,YAApB,IAAoCZ,MAAMa,GAA1C,IAAiDK,MAAMX,IAAzD,CAAf,CAAV;IAEN,MAAMa,aAAaD,SAAS,MAAMD,MAAMb,OAAN,IAAiBL,MAAMa,GAAtC,CAAnB;IAEM,mBAAaM,SAAS,OAAO;MACjC,2BAA2BnB,MAAMY,YADA;MAEjC,mBAAmBS,QAAQC,KAFM;MAGjC,iBAAiBtB,MAAMa,GAHU;MAIjC,uBAAuBb,MAAMW,SAJI;MAKjC,sBAAsBS,WAAWE,KALA;MAMjC,kBAAkBtB,MAAMe,IANS;MAOjC,oBAAoBf,MAAMgB,MAPO;MAQjC,qBAAqBhB,MAAMS;IARM,CAAP,CAAT,CAAb;IAWA;MAAEc;IAAF,IAAeC,WAAf;IACA;MAAEC;IAAF,IAAwBC,cAAxB;IACN,MAAMC,gBAAgBR,SAAS,MAAMI,SAASvB,MAAME,KAAf,CAAf,CAAtB;IACM,mBAAaiB,SAAS,OAAO;MACjCjB,OAAOuB,kBAAkBH,KADQ;MAEjCM,aAAaD,cAAcL,KAFM;MAGjCO,iBAAiBF,cAAcL,KAHE;MAIjCQ,SAAS9B,MAAMc,WAAN,GAAoB,GAApB,GAA0B;IAJF,CAAP,CAAT,CAAb;IAOC;MAAEiB,UAAF;MAAcC;IAAd;EACT;;AA1C6B,CAAb,CAAlB;;AAfY;EAAAC,OAAM;AAAN;;;sBATVC,mBAgBM,KAhBNA,EAgBM;IAfJD,OAAKE,eAAC,aAEEC,KAAUL,UAFZ,CAADI,CAeD;IAdJE,MAAK;EAcD,CAhBNH,EAEO,CAGLI,mBASO,MATPA,EASO;IARLL,OAAM,wBAQD;IAPJM,OAAKC,eAAEJ,KAAUJ,UAAZQ;EAOD,CATPF,EAEoB,CAElBA,mBAIO,MAJPA,cAIO,CAHLG,WAEOL,WAFPK,EAEO,MAFPA,EAEO,EAFPA,QAEO,iCADFL,KAAI7B,IACFmC,GADE,CACFC,EAFPF,CAGK,CAJPH,CAFkB,CAFpBA,IAHK,EAaLG,WAAQL,WAARK,EAAQ,SAARA,CAbK,CAFPP,EAeU,CAfVA","names":["_sfc_main","defineComponent","name","props","useComponentPresetProp","color","type","String","default","textColor","text","Number","overlap","Boolean","multiLine","visibleEmpty","dot","transparent","left","bottom","setup","slots","computed","isFloating","isEmpty","value","getColor","useColors","textColorComputed","useTextColor","colorComputed","borderColor","backgroundColor","opacity","badgeClass","badgeStyle","class","_createElementBlock","_normalizeClass","_ctx","role","_createElementVNode","style","_normalizeStyle","_renderSlot","_toDisplayString","_createTextVNode"],"sources":["../../../../../src/components/va-badge/VaBadge.vue"],"sourcesContent":["<template>\n  <div\n    class=\"va-badge\"\n    role=\"alert\"\n    :class=\"badgeClass\"\n  >\n    <span\n      class=\"va-badge__text-wrapper\"\n      :style=\"badgeStyle\"\n    >\n      <span class=\"va-badge__text\">\n        <slot name=\"text\">\n          {{ text }}\n        </slot>\n      </span>\n    </span>\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue'\n\nimport { useColors, useTextColor, useComponentPresetProp } from '../../composables'\n\nexport default defineComponent({\n  name: 'VaBadge',\n  props: {\n    ...useComponentPresetProp,\n    color: { type: String, default: 'danger' },\n    textColor: { type: String },\n    text: { type: [String, Number], default: '' },\n    overlap: { type: Boolean, default: false },\n    multiLine: { type: Boolean, default: false },\n    visibleEmpty: { type: Boolean, default: false },\n    dot: { type: Boolean, default: false },\n    transparent: { type: Boolean, default: false },\n    left: { type: Boolean, default: false },\n    bottom: { type: Boolean, default: false },\n  },\n  setup (props, { slots }) {\n    const isEmpty = computed(() => !(props.text || props.visibleEmpty || props.dot || slots.text))\n\n    const isFloating = computed(() => slots.default || props.dot)\n\n    const badgeClass = computed(() => ({\n      'va-badge--visible-empty': props.visibleEmpty,\n      'va-badge--empty': isEmpty.value,\n      'va-badge--dot': props.dot,\n      'va-badge--multiLine': props.multiLine,\n      'va-badge--floating': isFloating.value,\n      'va-badge--left': props.left,\n      'va-badge--bottom': props.bottom,\n      'va-badge--overlap': props.overlap,\n    }))\n\n    const { getColor } = useColors()\n    const { textColorComputed } = useTextColor()\n    const colorComputed = computed(() => getColor(props.color))\n    const badgeStyle = computed(() => ({\n      color: textColorComputed.value,\n      borderColor: colorComputed.value,\n      backgroundColor: colorComputed.value,\n      opacity: props.transparent ? 0.5 : 1,\n    }))\n\n    return { badgeClass, badgeStyle }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-badge {\n  display: inline-flex;\n  position: relative;\n  font-family: var(--va-font-family);\n\n  &__text-wrapper {\n    transition: var(--va-badge-text-wrapper-transition, var(--va-transition));\n    display: var(--va-badge-text-wrapper-display);\n    border: var(--va-badge-text-wrapper-border, var(--va-control-border));\n    border-radius: var(--va-badge-text-wrapper-border-radius);\n    font-weight: var(--va-badge-text-wrapper-font-weight);\n    line-height: var(--va-badge-text-wrapper-line-height);\n    letter-spacing: var(--va-badge-text-wrapper-letter-spacing, var(--va-letter-spacing));\n    justify-content: var(--va-badge-text-wrapper-justify-content);\n    white-space: var(--va-badge-text-wrapper-white-space);\n    width: var(--va-badge-text-wrapper-width);\n    height: var(--va-badge-text-wrapper-height);\n    min-width: var(--va-badge-text-wrapper-min-width);\n    min-height: var(--va-badge-text-wrapper-min-height);\n    margin: var(--va-badge-text-wrapper-margin);\n\n    .va-badge--visible-empty & {\n      min-width: var(--va-badge-size);\n      min-height: var(--va-badge-size);\n    }\n\n    .va-badge--dot & {\n      min-width: var(--va-badge-dot-size);\n      min-height: var(--va-badge-dot-size);\n      border-width: 0;\n      border-radius: 100%;\n      padding: 0;\n    }\n\n    .va-badge--empty & {\n      width: 0;\n      height: 0;\n      min-width: 0;\n      min-height: 0;\n      border-width: 0;\n    }\n\n    .va-badge--multiLine & {\n      white-space: normal;\n    }\n\n    .va-badge--floating & {\n      position: absolute;\n      z-index: 2;\n      top: 0;\n      left: 100%;\n      transform: translateX(0) translateY(-50%);\n    }\n\n    .va-badge--overlap & {\n      margin-left: calc(-1 * var(--va-badge-overlap));\n      margin-right: 0;\n      transform: translateY(-25%);\n    }\n\n    .va-badge--left & {\n      left: 0;\n      transform: translateX(-100%) translateY(-50%);\n    }\n\n    .va-badge--left.va-badge--overlap & {\n      margin-left: var(--va-badge-overlap);\n      transform: translateX(-100%) translateY(-25%);\n    }\n\n    .va-badge--bottom & {\n      top: 100%;\n      transform: translateX(0) translateY(-50%);\n    }\n\n    .va-badge--left.va-badge--bottom & {\n      transform: translateX(-100%) translateY(-50%);\n    }\n\n    .va-badge--bottom.va-badge--overlap & {\n      margin-left: calc(-1 * var(--va-badge-overlap));\n      transform: translateX(0) translateY(-75%);\n    }\n\n    .va-badge--bottom.va-badge--left.va-badge--overlap & {\n      margin-left: var(--va-badge-overlap);\n      transform: translateX(-100%) translateY(-75%);\n    }\n  }\n\n  &__text {\n    margin: var(--va-badge-margin);\n    text-transform: var(--va-badge-text-transform);\n    overflow: hidden;\n    min-width: calc(var(--va-badge-font-size) * var(--va-badge-line-height));\n    padding: var(--va-badge-text-py) var(--va-badge-text-px);\n    text-align: center;\n    display: inline-flex;\n    justify-content: center;\n    text-overflow: clip;\n    white-space: nowrap;\n    font-size: var(--va-badge-font-size);\n\n    .va-badge--multiLine & {\n      overflow: auto;\n      max-height: initial;\n      text-align: initial;\n      text-overflow: initial;\n      white-space: normal;\n    }\n\n    .va-badge--dot & {\n      display: none;\n    }\n\n    .va-badge--floating & {\n      align-items: center;\n      padding: var(--va-badge-py) 0.15rem;\n    }\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}