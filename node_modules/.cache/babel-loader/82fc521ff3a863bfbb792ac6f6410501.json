{"ast":null,"code":"import { defineComponent, computed, toRef, resolveComponent, openBlock, createElementBlock, renderSlot, createVNode } from \"vue\";\nimport { u as useValidationProps } from \"../../../composables/useValidation.js\";\nimport { V as VaMessageList } from \"./VaMessageList/index.js\";\nimport { _ as _export_sfc } from \"../../../../plugin-vue_export-helper.js\";\n\nvar VaMessageListWrapper_vue_vue_type_style_index_0_lang = /* @__PURE__ */(() => \".va-message-list-wrapper{font-family:var(--va-font-family)}\\n\")();\n\nconst _sfc_main = defineComponent({\n  name: \"VaMessageListWrapper\",\n  components: {\n    VaMessageList\n  },\n  props: { ...useValidationProps\n  },\n\n  setup(props) {\n    return {\n      messagesColor: computed(() => {\n        if (props.error) {\n          return \"danger\";\n        }\n\n        if (props.success) {\n          return \"success\";\n        }\n\n        return \"\";\n      }),\n      hasError: toRef(props, \"error\"),\n      messagesComputed: computed(() => props.error ? props.errorMessages : props.messages),\n      errorLimit: computed(() => props.error ? Number(props.errorCount) : 99)\n    };\n  }\n\n});\n\nconst _hoisted_1 = {\n  class: \"va-message-list-wrapper\"\n};\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_va_message_list = resolveComponent(\"va-message-list\");\n\n  return openBlock(), createElementBlock(\"div\", _hoisted_1, [renderSlot(_ctx.$slots, \"default\"), createVNode(_component_va_message_list, {\n    color: _ctx.messagesColor,\n    limit: _ctx.errorLimit,\n    \"has-error\": _ctx.hasError,\n    \"model-value\": _ctx.messagesComputed\n  }, null, 8, [\"color\", \"limit\", \"has-error\", \"model-value\"])]);\n}\n\nvar VaMessageListWrapper = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { VaMessageListWrapper as V };\nimport './VaMessageListWrapper.css';","map":{"version":3,"mappings":";;;;;;;AAmBA,MAAKA,YAAaC,gBAAa;EAC7BC,MAAM,sBADuB;EAG7BC,YAAY;IAAEC;EAAF,CAHiB;EAK7BC,OAAO,EACL,GAAGC;EADE,CALsB;;EAS7BC,MAAOF,KAAP,EAAc;IACL;MACLG,eAAeC,SAAS,MAAM;QAC5B,IAAIJ,MAAMK,KAAV,EAAiB;UAAS;QAAS;;QACnC,IAAIL,MAAMM,OAAV,EAAmB;UAAS;QAAU;;QAC/B;MACR,CAJc,CADV;MAMLC,UAAUC,MAAMR,KAAN,EAAa,OAAb,CANL;MAOLS,kBAAkBL,SAAS,MAAMJ,MAAMK,KAAN,GAAcL,MAAMU,aAApB,GAAoCV,MAAMW,QAAzD,CAPb;MAQLC,YAAYR,SAAS,MAAMJ,MAAMK,KAAN,GAAcQ,OAAOb,MAAMc,UAAb,CAAd,GAAyC,EAAxD;IARP;EAUT;;AApB6B,CAAb,CAAlB;;AAlBO;EAAAC,OAAM;AAAN;;;;;EAAL,uCAQM,KARNC,cAQM,CAPJC,WAAQC,WAARD,EAAQ,SAARA,CAOI,EANJE,YAKEC,0BALFD,EAKE;IAJCE,OAAOH,kBAIR;IAHCI,OAAOJ,eAGR;IAFC,aAAWA,aAEZ;IADC,eAAaA;EACd,CALFC,EAIgB,IAJhBA,EAIgB,CAJhBA,EAIgB,8CAJhBA,CAMI,CARNH","names":["_sfc_main","defineComponent","name","components","VaMessageList","props","useValidationProps","setup","messagesColor","computed","error","success","hasError","toRef","messagesComputed","errorMessages","messages","errorLimit","Number","errorCount","class","_createElementBlock","_renderSlot","_ctx","_createVNode","_component_va_message_list","color","limit"],"sources":["../../../../../../src/components/va-input/components/VaMessageListWrapper.vue"],"sourcesContent":["<template>\n  <div class=\"va-message-list-wrapper\">\n    <slot />\n    <va-message-list\n      :color=\"messagesColor\"\n      :limit=\"errorLimit\"\n      :has-error=\"hasError\"\n      :model-value=\"messagesComputed\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, toRef } from 'vue'\n\nimport { useValidationProps } from '../../../composables'\n\nimport { VaMessageList } from './VaMessageList'\n\nexport default defineComponent({\n  name: 'VaMessageListWrapper',\n\n  components: { VaMessageList },\n\n  props: {\n    ...useValidationProps,\n  },\n\n  setup (props) {\n    return {\n      messagesColor: computed(() => {\n        if (props.error) { return 'danger' }\n        if (props.success) { return 'success' }\n        return ''\n      }),\n      hasError: toRef(props, 'error'),\n      messagesComputed: computed(() => props.error ? props.errorMessages : props.messages),\n      errorLimit: computed(() => props.error ? Number(props.errorCount) : 99),\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n.va-message-list-wrapper {\n  font-family: var(--va-font-family);\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}