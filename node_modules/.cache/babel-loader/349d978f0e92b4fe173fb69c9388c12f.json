{"ast":null,"code":"import { u as useElementBackground } from \"../../composables/useElementBackground/useElementBackground.js\";\nimport { u as useTextColor } from \"../../composables/useTextColor.js\";\nimport { defineComponent, ref, computed, watch, nextTick, resolveComponent, openBlock, createElementBlock, normalizeClass, normalizeStyle, createVNode, mergeProps, createSlots, renderList, withCtx, renderSlot, normalizeProps, guardReactiveProps, createElementVNode, createBlock, createCommentVNode } from \"vue\";\nimport { e as extractComponentProps, a as extractComponentEmits } from \"../../utils/component-options/extract-component-options.js\";\nimport { f as filterComponentProps } from \"../../utils/component-options/filter-props.js\";\nimport { u as useColors } from \"../../composables/useColors.js\";\nimport { u as useComponentPresetProp } from \"../../composables/useComponentPreset.js\";\nimport { a as useStatefulProps, u as useStatefulEmits, b as useStateful } from \"../../composables/useStateful.js\";\nimport { u as useView } from \"./hooks/view.js\";\nimport { V as VaDayPicker } from \"./components/VaDayPicker/VaDayPicker.js\";\nimport { V as VaDatePickerHeader } from \"./components/VaDatePickerHeader/VaDatePickerHeader.js\";\nimport { V as VaMonthPicker } from \"./components/VaMonthPicker/VaMonthPicker.js\";\nimport { V as VaYearPicker } from \"./components/VaYearPicker/VaYearPicker.js\";\nimport { _ as _export_sfc } from \"../../../plugin-vue_export-helper.js\";\n\nvar VaDatePicker_vue_vue_type_style_index_0_lang = /* @__PURE__ */(() => ':root{--va-date-picker-font-style: normal;--va-date-picker-font-weight: 600;--va-date-picker-font-size: 12px;--va-date-picker-line-height: 1.25;--va-date-picker-weekday-font-size: 9px;--va-date-picker-color: var(--va-primary);--va-date-picker-text-color: inherit;--va-date-picker-cell-size: 32px;--va-date-picker-cell-gap: 2px;--va-date-picker-cell-radius: 4px;--va-date-picker-selected-text: var(--va-text-inverted);--va-date-picker-selected-background: var(--va-date-picker-color);--va-date-picker-today-background: var(--va-date-picker-color);--va-date-picker-today-background-opacity: .8;--va-date-picker-weekends-color: var(--va-danger);--va-date-picker-focused-border-color: var(--va-date-picker-color);--va-date-picker-cell-opacity: .5;--va-date-picker-cell-background-opacity-hover: .1;--va-date-picker-cell-selected-background-opacity-hover: .8}.va-date-picker{--va-date-picker-content-height: calc(var(--va-date-picker-cell-size) * 7 + var(--va-date-picker-cell-gap) * 6);width:calc(var(--va-date-picker-cell-size) * 7 + var(--va-date-picker-cell-gap) * 6);font-family:var(--va-font-family);font-style:var(--va-date-picker-font-style);font-weight:var(--va-date-picker-font-weight);font-size:var(--va-date-picker-font-size);line-height:var(--va-date-picker-line-height)}.va-date-picker__picker-wrapper{height:var(--va-date-picker-content-height)}.va-date-picker_without-week-days{--va-date-picker-content-height: calc(var(--va-date-picker-cell-size) * 6 + var(--va-date-picker-cell-gap) * 6)}.va-date-picker_mobile .va-day-picker,.va-date-picker_mobile .va-month-picker,.va-date-picker_mobile .va-year-picker{height:100%}.va-date-picker_disabled{opacity:.4;position:relative}.va-date-picker_disabled:before{content:\"\";position:absolute;height:100%;width:100%;z-index:100}.va-date-picker-header{padding-bottom:.25rem}\\n')();\n\nconst DEFAULT_MONTH_NAMES = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nconst DEFAULT_WEEKDAY_NAMES = [\"SU\", \"MO\", \"TU\", \"WE\", \"TH\", \"FR\", \"SA\"];\n\nconst _sfc_main = defineComponent({\n  name: \"VaDatePicker\",\n  components: {\n    VaDayPicker,\n    VaDatePickerHeader,\n    VaMonthPicker,\n    VaYearPicker\n  },\n  props: { ...useStatefulProps,\n    ...useComponentPresetProp,\n    ...extractComponentProps(VaDatePickerHeader),\n    ...extractComponentProps(VaDayPicker),\n    ...extractComponentProps(VaMonthPicker),\n    ...extractComponentProps(VaYearPicker),\n    modelValue: {\n      type: [Date, Array, Object]\n    },\n    monthNames: {\n      type: Array,\n      default: DEFAULT_MONTH_NAMES\n    },\n    weekdayNames: {\n      type: Array,\n      default: DEFAULT_WEEKDAY_NAMES\n    },\n    view: {\n      type: Object\n    },\n    type: {\n      type: String,\n      default: \"day\"\n    },\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    color: {\n      type: String,\n      default: void 0\n    },\n    weekendsColor: {\n      type: String,\n      default: void 0\n    }\n  },\n  emits: [...useStatefulEmits, ...extractComponentEmits(VaDatePickerHeader), ...extractComponentEmits(VaYearPicker), ...extractComponentEmits(VaDayPicker), ...extractComponentEmits(VaMonthPicker)],\n\n  setup(props, {\n    emit\n  }) {\n    const currentPicker = ref();\n    const {\n      valueComputed\n    } = useStateful(props, emit);\n    const {\n      syncView\n    } = useView(props, emit, {\n      type: props.type\n    });\n    const classComputed = computed(() => ({\n      \"va-date-picker_without-week-days\": props.hideWeekDays,\n      \"va-date-picker_disabled\": props.disabled\n    }));\n\n    const onDayModelValueUpdate = modelValue => {\n      if (props.readonly) {\n        return;\n      }\n\n      if (props.type === \"day\") {\n        valueComputed.value = modelValue;\n      }\n    };\n\n    const onMonthClick = date => {\n      emit(\"click:month\", date);\n      const year = date.getFullYear();\n      const month = date.getMonth();\n\n      if (props.type !== \"month\") {\n        syncView.value = {\n          type: \"day\",\n          year,\n          month\n        };\n      }\n    };\n\n    const onMonthModelValueUpdate = modelValue => {\n      if (props.type === \"month\") {\n        valueComputed.value = modelValue;\n      }\n    };\n\n    const onYearClick = date => {\n      emit(\"click:year\", date);\n      const year = date.getFullYear();\n\n      if (props.type !== \"year\") {\n        syncView.value = {\n          type: \"month\",\n          year,\n          month: syncView.value.month\n        };\n      }\n    };\n\n    const onYearModelValueUpdate = modelValue => {\n      if (props.type === \"year\") {\n        valueComputed.value = modelValue;\n      }\n    };\n\n    const {\n      colorsToCSSVariable\n    } = useColors();\n    const {\n      background\n    } = useElementBackground();\n    const {\n      textColorComputed\n    } = useTextColor(background);\n    const styleComputed = computed(() => ({\n      color: textColorComputed.value,\n      ...colorsToCSSVariable({\n        color: props.color,\n        \"weekends-color\": props.weekendsColor\n      }, \"va-date-picker\")\n    }));\n\n    const focusCurrentPicker = () => {\n      var _a;\n\n      return (_a = currentPicker.value) == null ? void 0 : _a.$el.focus();\n    };\n\n    watch(syncView, (newValue, prevValue) => {\n      if (newValue.type === prevValue.type) {\n        return;\n      }\n\n      nextTick(focusCurrentPicker);\n    });\n\n    const isPickerReadonly = pickerName => {\n      return props.readonly && props.type === pickerName;\n    };\n\n    return {\n      dayPickerProps: filterComponentProps(extractComponentProps(VaDayPicker)),\n      headerProps: filterComponentProps(extractComponentProps(VaDatePickerHeader)),\n      monthPickerProps: filterComponentProps(extractComponentProps(VaMonthPicker)),\n      yearPickerProps: filterComponentProps(extractComponentProps(VaYearPicker)),\n      syncView,\n      classComputed,\n      valueComputed,\n      onDayModelValueUpdate,\n      onMonthClick,\n      onMonthModelValueUpdate,\n      onYearClick,\n      onYearModelValueUpdate,\n      styleComputed,\n      currentPicker,\n      textColorComputed,\n      focusCurrentPicker,\n      isPickerReadonly\n    };\n  }\n\n});\n\nconst _hoisted_1 = {\n  class: \"va-date-picker__picker-wrapper\"\n};\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_va_date_picker_header = resolveComponent(\"va-date-picker-header\");\n\n  const _component_va_day_picker = resolveComponent(\"va-day-picker\");\n\n  const _component_va_month_picker = resolveComponent(\"va-month-picker\");\n\n  const _component_va_year_picker = resolveComponent(\"va-year-picker\");\n\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass([\"va-date-picker\", _ctx.classComputed]),\n    style: normalizeStyle(_ctx.styleComputed)\n  }, [createVNode(_component_va_date_picker_header, mergeProps(_ctx.headerProps, {\n    view: _ctx.syncView,\n    \"onUpdate:view\": _cache[0] || (_cache[0] = $event => _ctx.syncView = $event),\n    textColor: _ctx.textColorComputed\n  }), createSlots({\n    _: 2\n  }, [renderList(_ctx.$slots, (_, name) => {\n    return {\n      name,\n      fn: withCtx(bind => [renderSlot(_ctx.$slots, name, normalizeProps(guardReactiveProps(bind)))])\n    };\n  })]), 1040, [\"view\", \"textColor\"]), createElementVNode(\"div\", _hoisted_1, [_ctx.syncView.type === \"day\" ? (openBlock(), createBlock(_component_va_day_picker, mergeProps({\n    key: 0,\n    ref: \"currentPicker\"\n  }, _ctx.dayPickerProps, {\n    \"model-value\": _ctx.valueComputed,\n    view: _ctx.syncView,\n    readonly: _ctx.$props.disabled || _ctx.isPickerReadonly(\"day\"),\n    \"onUpdate:modelValue\": _ctx.onDayModelValueUpdate,\n    \"onHover:day\": _cache[1] || (_cache[1] = value => _ctx.$emit(\"hover:day\", value)),\n    \"onClick:day\": _cache[2] || (_cache[2] = value => _ctx.$emit(\"click:day\", value))\n  }), createSlots({\n    _: 2\n  }, [renderList(_ctx.$slots, (_, name) => {\n    return {\n      name,\n      fn: withCtx(bind => [renderSlot(_ctx.$slots, name, normalizeProps(guardReactiveProps(bind)))])\n    };\n  })]), 1040, [\"model-value\", \"view\", \"readonly\", \"onUpdate:modelValue\"])) : createCommentVNode(\"\", true), _ctx.syncView.type === \"month\" ? (openBlock(), createBlock(_component_va_month_picker, mergeProps({\n    key: 1,\n    ref: \"currentPicker\"\n  }, _ctx.monthPickerProps, {\n    view: _ctx.syncView,\n    \"model-value\": _ctx.valueComputed,\n    readonly: _ctx.$props.disabled || _ctx.isPickerReadonly(\"month\"),\n    \"onUpdate:modelValue\": _ctx.onMonthModelValueUpdate,\n    \"onHover:month\": _cache[3] || (_cache[3] = value => _ctx.$emit(\"hover:month\", value)),\n    \"onClick:month\": _ctx.onMonthClick\n  }), createSlots({\n    _: 2\n  }, [renderList(_ctx.$slots, (_, name) => {\n    return {\n      name,\n      fn: withCtx(bind => [renderSlot(_ctx.$slots, name, normalizeProps(guardReactiveProps(bind)))])\n    };\n  })]), 1040, [\"view\", \"model-value\", \"readonly\", \"onUpdate:modelValue\", \"onClick:month\"])) : createCommentVNode(\"\", true), _ctx.syncView.type === \"year\" ? (openBlock(), createBlock(_component_va_year_picker, mergeProps({\n    key: 2,\n    ref: \"currentPicker\"\n  }, _ctx.yearPickerProps, {\n    view: _ctx.syncView,\n    \"model-value\": _ctx.valueComputed,\n    readonly: _ctx.$props.disabled || _ctx.isPickerReadonly(\"year\"),\n    \"onHover:year\": _cache[4] || (_cache[4] = value => _ctx.$emit(\"hover:year\", value)),\n    \"onUpdate:modelValue\": _ctx.onYearModelValueUpdate,\n    \"onClick:year\": _ctx.onYearClick\n  }), createSlots({\n    _: 2\n  }, [renderList(_ctx.$slots, (_, name) => {\n    return {\n      name,\n      fn: withCtx(bind => [renderSlot(_ctx.$slots, name, normalizeProps(guardReactiveProps(bind)))])\n    };\n  })]), 1040, [\"view\", \"model-value\", \"readonly\", \"onUpdate:modelValue\", \"onClick:year\"])) : createCommentVNode(\"\", true)])], 6);\n}\n\nvar _VaDatePicker = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { _VaDatePicker as _ };\nimport './VaDatePicker.css';","map":{"version":3,"mappings":"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","names":["DEFAULT_MONTH_NAMES","DEFAULT_WEEKDAY_NAMES","_sfc_main","defineComponent","name","components","VaDayPicker","VaDatePickerHeader","VaMonthPicker","VaYearPicker","props","useStatefulProps","useComponentPresetProp","extractComponentProps","modelValue","type","Date","Array","Object","monthNames","default","weekdayNames","view","String","readonly","Boolean","disabled","color","weekendsColor","emits","useStatefulEmits","extractComponentEmits","setup","emit","currentPicker","ref","valueComputed","useStateful","syncView","useView","computed","hideWeekDays","value","date","getFullYear","getMonth","year","month","colorsToCSSVariable","useColors","background","useElementBackground","textColorComputed","useTextColor","focusCurrentPicker","$el","focus","watch","newValue","prevValue","nextTick","pickerName","dayPickerProps","filterComponentProps","headerProps","monthPickerProps","yearPickerProps","classComputed","onDayModelValueUpdate","onMonthClick","onMonthModelValueUpdate","onYearClick","onYearModelValueUpdate","styleComputed","isPickerReadonly","class","_createElementBlock","_normalizeClass","_ctx","style","_normalizeStyle","_createVNode","_component_va_date_picker_header","_mergeProps","textColor","_createSlots","_","$slots","fn","bind","_renderSlot","_normalizeProps","_guardReactiveProps","_withCtx","_createElementVNode","_openBlock","_component_va_day_picker","_createBlock","key","$props","_cache","_component_va_month_picker","_component_va_year_picker"],"sources":["../../../../../src/components/va-date-picker/VaDatePicker.vue"],"sourcesContent":["<template>\n  <div class=\"va-date-picker\" :class=\"classComputed\" :style=\"styleComputed\">\n    <va-date-picker-header\n      v-bind=\"headerProps\"\n      v-model:view=\"syncView\"\n      :textColor=\"textColorComputed\"\n    >\n      <template v-for=\"(_, name) in $slots\" :key=\"name\" v-slot:[name]=\"bind\">\n        <slot :name=\"name\" v-bind=\"bind\" />\n      </template>\n    </va-date-picker-header>\n\n    <div class=\"va-date-picker__picker-wrapper\">\n      <va-day-picker\n        v-if=\"syncView.type === 'day'\"\n        ref=\"currentPicker\"\n        v-bind=\"dayPickerProps\"\n        :model-value=\"valueComputed\"\n        :view=\"syncView\"\n        :readonly=\"$props.disabled || isPickerReadonly('day')\"\n        @update:model-value=\"onDayModelValueUpdate\"\n        @hover:day=\"(value) => $emit('hover:day', value)\"\n        @click:day=\"(value) => $emit('click:day', value)\"\n      >\n        <template v-for=\"(_, name) in $slots\" :key=\"name\" v-slot:[name]=\"bind\">\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-day-picker>\n\n      <va-month-picker\n        v-if=\"syncView.type === 'month'\"\n        ref=\"currentPicker\"\n        v-bind=\"monthPickerProps\"\n        :view=\"syncView\"\n        :model-value=\"valueComputed\"\n        :readonly=\"$props.disabled || isPickerReadonly('month')\"\n        @update:model-value=\"onMonthModelValueUpdate\"\n        @hover:month=\"(value) => $emit('hover:month', value)\"\n        @click:month=\"onMonthClick\"\n      >\n        <template v-for=\"(_, name) in $slots\" :key=\"name\" v-slot:[name]=\"bind\">\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-month-picker>\n\n      <va-year-picker\n        v-if=\"syncView.type === 'year'\"\n        ref=\"currentPicker\"\n        v-bind=\"yearPickerProps\"\n        :view=\"syncView\"\n        :model-value=\"valueComputed\"\n        :readonly=\"$props.disabled || isPickerReadonly('year')\"\n        @hover:year=\"(value) => $emit('hover:year', value)\"\n        @update:model-value=\"onYearModelValueUpdate\"\n        @click:year=\"onYearClick\"\n      >\n        <template v-for=\"(_, name) in $slots\" :key=\"name\" v-slot:[name]=\"bind\">\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-year-picker>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { useElementBackground } from '../../composables/useElementBackground'\nimport { useTextColor } from '../../composables/useTextColor'\nimport { computed, defineComponent, nextTick, PropType, ref, watch } from 'vue'\n\nimport { filterComponentProps, extractComponentProps, extractComponentEmits } from '../../utils/component-options'\nimport { useColors, useStateful, useStatefulProps, useStatefulEmits } from '../../composables'\nimport { useView } from './hooks/view'\nimport { useComponentPresetProp } from '../../composables/useComponentPreset'\n\nimport { DatePickerModelValue, DatePickerType, DatePickerView } from './types'\n\nimport VaDayPicker from './components/VaDayPicker/VaDayPicker.vue'\nimport VaDatePickerHeader from './components/VaDatePickerHeader/VaDatePickerHeader.vue'\nimport VaMonthPicker from './components/VaMonthPicker/VaMonthPicker.vue'\nimport VaYearPicker from './components/VaYearPicker/VaYearPicker.vue'\n\nconst DEFAULT_MONTH_NAMES = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nconst DEFAULT_WEEKDAY_NAMES = ['SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA']\n\nexport default defineComponent({\n  name: 'VaDatePicker',\n\n  components: { VaDayPicker, VaDatePickerHeader, VaMonthPicker, VaYearPicker },\n\n  props: {\n    ...useStatefulProps,\n    ...useComponentPresetProp,\n    ...extractComponentProps(VaDatePickerHeader),\n    ...extractComponentProps(VaDayPicker),\n    ...extractComponentProps(VaMonthPicker),\n    ...extractComponentProps(VaYearPicker),\n    modelValue: { type: [Date, Array, Object] as PropType<DatePickerModelValue> },\n    monthNames: { type: Array as PropType<string[]>, default: DEFAULT_MONTH_NAMES },\n    weekdayNames: { type: Array as PropType<string[]>, default: DEFAULT_WEEKDAY_NAMES },\n    view: { type: Object as PropType<DatePickerView> },\n    type: { type: String as PropType<DatePickerType>, default: 'day' },\n    readonly: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n\n    // Colors\n    color: { type: String, default: undefined },\n    weekendsColor: { type: String, default: undefined },\n  },\n\n  emits: [\n    ...useStatefulEmits,\n    ...extractComponentEmits(VaDatePickerHeader),\n    ...extractComponentEmits(VaYearPicker),\n    ...extractComponentEmits(VaDayPicker),\n    ...extractComponentEmits(VaMonthPicker),\n  ],\n\n  setup (props, { emit }) {\n    const currentPicker = ref<typeof VaDayPicker | typeof VaMonthPicker | typeof VaYearPicker>()\n\n    const { valueComputed } = useStateful(props, emit)\n\n    const { syncView } = useView(props, emit, { type: props.type })\n\n    const classComputed = computed(() => ({\n      'va-date-picker_without-week-days': props.hideWeekDays,\n      'va-date-picker_disabled': props.disabled,\n    }))\n\n    const onDayModelValueUpdate = (modelValue: DatePickerModelValue) => {\n      if (props.readonly) { return }\n\n      // Do not update model value if we just want to change view (We can change it for now, but later we can add here timepicker)\n      if (props.type === 'day') { valueComputed.value = modelValue }\n    }\n\n    const onMonthClick = (date: Date) => {\n      emit('click:month', date)\n      const year = date.getFullYear()\n      const month = date.getMonth()\n      if (props.type !== 'month') {\n        syncView.value = { type: 'day', year, month }\n      }\n    }\n\n    const onMonthModelValueUpdate = (modelValue: DatePickerModelValue) => {\n      // Do not update model value if we just want to change view\n      if (props.type === 'month') { valueComputed.value = modelValue }\n    }\n\n    const onYearClick = (date : Date) => {\n      emit('click:year', date)\n\n      const year = date.getFullYear()\n\n      if (props.type !== 'year') {\n        syncView.value = { type: 'month', year, month: syncView.value.month }\n      }\n    }\n\n    const onYearModelValueUpdate = (modelValue: DatePickerModelValue) => {\n      // Do not update model value if we just want to change view\n      if (props.type === 'year') { valueComputed.value = modelValue }\n    }\n\n    const { colorsToCSSVariable } = useColors()\n    const { background } = useElementBackground()\n    const { textColorComputed } = useTextColor(background)\n\n    const styleComputed = computed(() => ({\n      color: textColorComputed.value,\n      ...colorsToCSSVariable({\n        color: props.color,\n        'weekends-color': props.weekendsColor,\n      }, 'va-date-picker'),\n    }))\n\n    const focusCurrentPicker = () => currentPicker.value?.$el.focus()\n\n    watch(syncView, (newValue, prevValue) => {\n      // Don't focus new picker if user does not change type\n      if (newValue.type === prevValue.type) { return }\n\n      nextTick(focusCurrentPicker)\n    })\n\n    const isPickerReadonly = (pickerName: 'year' | 'month' | 'day') => {\n      return props.readonly && props.type === pickerName\n    }\n\n    return {\n      dayPickerProps: filterComponentProps(extractComponentProps(VaDayPicker)),\n      headerProps: filterComponentProps(extractComponentProps(VaDatePickerHeader)),\n      monthPickerProps: filterComponentProps(extractComponentProps(VaMonthPicker)),\n      yearPickerProps: filterComponentProps(extractComponentProps(VaYearPicker)),\n\n      syncView,\n\n      classComputed,\n      valueComputed,\n\n      onDayModelValueUpdate,\n\n      onMonthClick,\n      onMonthModelValueUpdate,\n\n      onYearClick,\n      onYearModelValueUpdate,\n\n      styleComputed,\n      currentPicker,\n      textColorComputed,\n      focusCurrentPicker,\n\n      isPickerReadonly,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-date-picker {\n  --va-date-picker-content-height: calc(var(--va-date-picker-cell-size) * 7 + var(--va-date-picker-cell-gap) * 6);\n\n  width: calc(var(--va-date-picker-cell-size) * 7 + var(--va-date-picker-cell-gap) * 6);\n  font-family: var(--va-font-family);\n  font-style: var(--va-date-picker-font-style);\n  font-weight: var(--va-date-picker-font-weight);\n  font-size: var(--va-date-picker-font-size);\n  line-height: var(--va-date-picker-line-height);\n\n  &__picker-wrapper {\n    height: var(--va-date-picker-content-height);\n  }\n\n  &_without-week-days {\n    --va-date-picker-content-height: calc(var(--va-date-picker-cell-size) * 6 + var(--va-date-picker-cell-gap) * 6);\n  }\n\n  &_mobile {\n    .va-day-picker,\n    .va-month-picker,\n    .va-year-picker {\n      height: 100%;\n    }\n  }\n\n  &_disabled {\n    opacity: 0.4;\n    position: relative;\n\n    &::before {\n      content: '';\n      position: absolute;\n      height: 100%;\n      width: 100%;\n      z-index: 100;\n    }\n  }\n}\n\n.va-date-picker-header {\n  padding-bottom: 0.25rem;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}