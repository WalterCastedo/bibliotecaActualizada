{"ast":null,"code":"import { defineComponent, shallowRef, ref, computed, watch, resolveComponent, openBlock, createElementBlock, withKeys, renderSlot, normalizeProps, guardReactiveProps, createVNode } from \"vue\";\nimport { u as useColors } from \"../../../../composables/useColors.js\";\nimport { u as useSyncProp } from \"../../../../composables/useSyncProp.js\";\nimport { R as RatingValue } from \"../../types.js\";\nimport { V as VaIcon } from \"../../../va-icon/index.js\";\nimport { _ as _export_sfc } from \"../../../../../plugin-vue_export-helper.js\";\n\nvar VaRatingItem_vue_vue_type_style_index_0_lang = /* @__PURE__ */(() => \".va-rating-item{display:inline-block}.va-rating-item:focus-visible{outline:2px solid var(--va-focus)!important;border-radius:2px}.va-rating-item__wrapper{font-size:100%;overflow:visible;text-transform:none;padding:0;background-color:transparent;border-style:none}\\n\")();\n\nconst _sfc_main = defineComponent({\n  name: \"VaRatingItem\",\n  components: {\n    VaIcon\n  },\n  props: {\n    modelValue: {\n      type: Number,\n      default: 0\n    },\n    icon: {\n      type: String,\n      default: \"star\"\n    },\n    halfIcon: {\n      type: String,\n      default: \"star_half\"\n    },\n    emptyIcon: {\n      type: String,\n      default: \"star_outline\"\n    },\n    halves: {\n      type: Boolean,\n      default: false\n    },\n    hover: {\n      type: Boolean,\n      default: false\n    },\n    tabindex: {\n      type: Number,\n      default: 0\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    size: {\n      type: [String, Number],\n      default: \"medium\"\n    },\n    unselectedColor: {\n      type: String\n    },\n    color: {\n      type: String,\n      default: \"primary\"\n    }\n  },\n  emits: [\"update:modelValue\", \"click\", \"hover\"],\n\n  setup(props, {\n    emit\n  }) {\n    const rootEl = shallowRef();\n    const [modelValue] = useSyncProp(\"modelValue\", props, emit, RatingValue.EMPTY);\n    const hoveredValue = ref(null);\n    const visibleValue = computed(() => {\n      if (props.hover && !props.disabled && !props.readonly) {\n        return hoveredValue.value || modelValue.value;\n      }\n\n      return modelValue.value;\n    });\n    const {\n      getColor\n    } = useColors();\n    const computedColor = computed(() => getColor(props.unselectedColor && visibleValue.value === RatingValue.EMPTY ? props.unselectedColor : props.color));\n\n    const onMouseMove = ev => {\n      if (!rootEl.value) {\n        return;\n      }\n\n      const {\n        offsetX\n      } = ev;\n      const iconWidth = rootEl.value.clientWidth;\n\n      if (props.halves) {\n        hoveredValue.value = offsetX / iconWidth <= RatingValue.HALF ? RatingValue.HALF : RatingValue.FULL;\n      } else {\n        hoveredValue.value = RatingValue.FULL;\n      }\n    };\n\n    const onMouseLeave = () => {\n      hoveredValue.value = null;\n    };\n\n    const onEnter = () => {\n      modelValue.value = 1;\n    };\n\n    const onClick = () => {\n      modelValue.value = hoveredValue.value || RatingValue.FULL;\n      emit(\"click\", hoveredValue.value || RatingValue.FULL);\n    };\n\n    watch(hoveredValue, () => emit(\"hover\", hoveredValue.value || RatingValue.EMPTY));\n    return {\n      computedColor,\n      rootEl,\n      onEnter,\n      onClick,\n      onMouseMove,\n      onMouseLeave,\n      visibleValue,\n      computedIconName: computed(() => {\n        if (props.halves && visibleValue.value === RatingValue.HALF) {\n          return props.halfIcon;\n        }\n\n        if (visibleValue.value === RatingValue.EMPTY) {\n          return props.emptyIcon;\n        }\n\n        return props.icon;\n      }),\n      tabIndexComputed: computed(() => props.disabled ? -1 : props.tabindex)\n    };\n  }\n\n});\n\nconst _hoisted_1 = [\"tabindex\"];\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_va_icon = resolveComponent(\"va-icon\");\n\n  return openBlock(), createElementBlock(\"div\", {\n    ref: \"rootEl\",\n    role: \"button\",\n    class: \"va-rating-item\",\n    tabindex: _ctx.tabIndexComputed,\n    onKeyup: [_cache[0] || (_cache[0] = withKeys((...args) => _ctx.onClick && _ctx.onClick(...args), [\"enter\"])), _cache[1] || (_cache[1] = withKeys((...args) => _ctx.onClick && _ctx.onClick(...args), [\"space\"]))],\n    onMousemove: _cache[2] || (_cache[2] = (...args) => _ctx.onMouseMove && _ctx.onMouseMove(...args)),\n    onMouseleave: _cache[3] || (_cache[3] = (...args) => _ctx.onMouseLeave && _ctx.onMouseLeave(...args)),\n    onClick: _cache[4] || (_cache[4] = (...args) => _ctx.onClick && _ctx.onClick(...args))\n  }, [renderSlot(_ctx.$slots, \"default\", normalizeProps(guardReactiveProps({\n    value: _ctx.visibleValue,\n    onClick: _ctx.onClick\n  })), () => [createVNode(_component_va_icon, {\n    class: \"va-rating-item__wrapper\",\n    tabindex: \"-1\",\n    tag: \"button\",\n    name: _ctx.computedIconName,\n    size: _ctx.$props.size,\n    color: _ctx.computedColor,\n    onClick: _ctx.onClick\n  }, null, 8, [\"name\", \"size\", \"color\", \"onClick\"])])], 40, _hoisted_1);\n}\n\nvar _VaRatingItem = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { _VaRatingItem as _ };\nimport './VaRatingItem.css';","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","name","components","VaIcon","props","modelValue","type","Number","default","icon","String","halfIcon","emptyIcon","halves","Boolean","hover","tabindex","disabled","readonly","size","unselectedColor","color","emits","setup","emit","rootEl","shallowRef","useSyncProp","RatingValue","EMPTY","ref","computed","value","getColor","useColors","computedColor","visibleValue","ev","offsetX","clientWidth","hoveredValue","iconWidth","HALF","FULL","onMouseLeave","onEnter","onClick","watch","onMouseMove","computedIconName","tabIndexComputed","_createElementBlock","role","class","_ctx","onKeyup","_withKeys","_cache","onMousemove","onMouseleave","_renderSlot","$slots","_normalizeProps","_createVNode","_component_va_icon","tag","$props"],"sources":["../../../../../../../src/components/va-rating/components/VaRatingItem/VaRatingItem.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"rootEl\"\n    role=\"button\"\n    class=\"va-rating-item\"\n    :tabindex=\"tabIndexComputed\"\n    @keyup.enter=\"onClick\"\n    @keyup.space=\"onClick\"\n    @mousemove=\"onMouseMove\"\n    @mouseleave=\"onMouseLeave\"\n    @click=\"onClick\"\n  >\n    <slot v-bind=\"{ value: visibleValue, onClick }\">\n      <va-icon\n        class=\"va-rating-item__wrapper\"\n        tabindex=\"-1\"\n        tag=\"button\"\n        :name=\"computedIconName\"\n        :size=\"$props.size\"\n        :color=\"computedColor\"\n        @click=\"onClick\"\n      />\n    </slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, ref, shallowRef, watch } from 'vue'\n\nimport { useColors, useSyncProp } from '../../../../composables'\n\nimport { RatingValue } from '../../types'\n\nimport { VaIcon } from '../../../va-icon'\n\nexport default defineComponent({\n  name: 'VaRatingItem',\n\n  components: { VaIcon },\n\n  props: {\n    modelValue: { type: Number, default: 0 },\n    icon: { type: String, default: 'star' },\n    halfIcon: { type: String, default: 'star_half' },\n    emptyIcon: { type: String, default: 'star_outline' },\n    halves: { type: Boolean, default: false },\n    hover: { type: Boolean, default: false },\n    tabindex: { type: Number, default: 0 },\n    disabled: { type: Boolean, default: false },\n    readonly: { type: Boolean, default: false },\n    size: { type: [String, Number], default: 'medium' },\n    unselectedColor: { type: String },\n    color: { type: String, default: 'primary' },\n  },\n\n  emits: ['update:modelValue', 'click', 'hover'],\n\n  setup (props, { emit }) {\n    const rootEl = shallowRef<HTMLElement>()\n\n    const [modelValue] = useSyncProp('modelValue', props, emit, RatingValue.EMPTY)\n    const hoveredValue = ref<number | null>(null)\n\n    const visibleValue = computed(() => {\n      if (props.hover && !props.disabled && !props.readonly) {\n        return hoveredValue.value || modelValue.value\n      }\n      return modelValue.value\n    })\n\n    const { getColor } = useColors()\n    const computedColor = computed(() => getColor(\n      props.unselectedColor && visibleValue.value === RatingValue.EMPTY\n        ? props.unselectedColor\n        : props.color,\n    ))\n\n    const onMouseMove = (ev: MouseEvent) => {\n      if (!rootEl.value) { return }\n      const { offsetX } = ev\n      const iconWidth = rootEl.value.clientWidth\n\n      if (props.halves) {\n        hoveredValue.value = offsetX / iconWidth <= RatingValue.HALF ? RatingValue.HALF : RatingValue.FULL\n      } else {\n        hoveredValue.value = RatingValue.FULL\n      }\n    }\n\n    const onMouseLeave = () => {\n      hoveredValue.value = null\n    }\n\n    const onEnter = () => {\n      modelValue.value = 1\n    }\n\n    const onClick = () => {\n      modelValue.value = hoveredValue.value || RatingValue.FULL\n      emit('click', hoveredValue.value || RatingValue.FULL)\n    }\n\n    watch(hoveredValue, () => emit('hover', hoveredValue.value || RatingValue.EMPTY))\n\n    return {\n      computedColor,\n      rootEl,\n      onEnter,\n      onClick,\n      onMouseMove,\n      onMouseLeave,\n      visibleValue,\n\n      computedIconName: computed(() => {\n        if (props.halves && visibleValue.value === RatingValue.HALF) {\n          return props.halfIcon\n        }\n        if (visibleValue.value === RatingValue.EMPTY) {\n          return props.emptyIcon\n        }\n\n        return props.icon\n      }),\n      tabIndexComputed: computed(() => props.disabled ? -1 : props.tabindex),\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../../../styles/resources\";\n\n.va-rating-item {\n  display: inline-block;\n\n  @include keyboard-focus-outline($radius: 2px);\n\n  &__wrapper {\n    @include normalize-button();\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}