{"ast":null,"code":"import { defineComponent, computed, resolveComponent, openBlock, createElementBlock, normalizeStyle, Fragment, renderList, createBlock, createCommentVNode, createTextVNode, toDisplayString } from \"vue\";\nimport { u as useColors } from \"../../../../composables/useColors.js\";\nimport { V as VaIcon } from \"../../../va-icon/index.js\";\nimport { _ as _export_sfc } from \"../../../../../plugin-vue_export-helper.js\";\n\nvar VaMessageList_vue_vue_type_style_index_0_lang = /* @__PURE__ */(() => \".va-message-list{margin-top:var(--va-message-list-margin-top);color:var(--va-message-list-color)}.va-message-list__message{display:flex;vertical-align:var(--va-message-list-vertical-align);font-size:var(--va-message-list-font-size);line-height:var(--va-message-list-line-height)}.va-message-list__icon{margin-right:var(--va-message-list-icon-margin-right)}\\n\")();\n\nconst _sfc_main = defineComponent({\n  name: \"VaMessageList\",\n  components: {\n    VaIcon\n  },\n  props: {\n    modelValue: {\n      type: [String, Array],\n      default: \"\"\n    },\n    limit: {\n      type: Number,\n      default: 1\n    },\n    color: {\n      type: String\n    },\n    hasError: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  setup(props) {\n    const {\n      getColor\n    } = useColors();\n    return {\n      messages: computed(() => {\n        if (!props.modelValue) {\n          return [];\n        }\n\n        if (!Array.isArray(props.modelValue)) {\n          return [props.modelValue];\n        }\n\n        return props.modelValue.slice(0, props.limit);\n      }),\n      computedStyle: computed(() => props.color ? {\n        color: getColor(props.color)\n      } : {})\n    };\n  }\n\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_va_icon = resolveComponent(\"va-icon\");\n\n  return _ctx.messages.length ? (openBlock(), createElementBlock(\"div\", {\n    key: 0,\n    class: \"va-message-list\",\n    style: normalizeStyle(_ctx.computedStyle)\n  }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.messages, (message, index) => {\n    return openBlock(), createElementBlock(\"div\", {\n      key: index,\n      class: \"va-message-list__message\"\n    }, [_ctx.hasError ? (openBlock(), createBlock(_component_va_icon, {\n      key: 0,\n      class: \"va-message-list__icon\",\n      name: \"va-warning\",\n      size: 16\n    })) : createCommentVNode(\"\", true), createTextVNode(toDisplayString(message), 1)]);\n  }), 128))], 4)) : createCommentVNode(\"\", true);\n}\n\nvar _VaMessageList = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { _VaMessageList as _ };\nimport './VaMessageList.css';","map":{"version":3,"mappings":";;;;;;;AA4BA,MAAKA,YAAaC,gBAAa;EAC7BC,MAAM,eADuB;EAG7BC,YAAY;IAAEC;EAAF,CAHiB;EAK7BC,OAAO;IACLC,YAAY;MACVC,MAAM,CAACC,MAAD,EAASC,KAAT,CADI;MAEVC,SAAS;IAFC,CADP;IAKLC,OAAO;MAAEJ,MAAMK,MAAR;MAAgBF,SAAS;IAAzB,CALF;IAMLG,OAAO;MAAEN,MAAMC;IAAR,CANF;IAOLM,UAAU;MAAEP,MAAMQ,OAAR;MAAiBL,SAAS;IAA1B;EAPL,CALsB;;EAe7BM,MAAOX,KAAP,EAAc;IACN;MAAEY;IAAF,IAAeC,WAAf;IAEC;MACLC,UAAUC,SAAmB,MAAM;QAC7B,KAACf,MAAMC,UAAP,EAAmB;UAAE,OAAO,EAAP;QAAU;;QACnC,IAAI,CAACG,MAAMY,OAAN,CAAchB,MAAMC,UAApB,CAAL,EAAsC;UAAS,QAACD,MAAMC,UAAP;QAAmB;;QAClE,OAAOD,MAAMC,UAAN,CAAiBgB,KAAjB,CAAuB,CAAvB,EAA0BjB,MAAMM,KAAhC,CAAP;MACD,CAJS,CADL;MAMLY,eAAeH,SAAS,MAAMf,MAAMQ,KAAN,GAAc;QAAEA,OAAOI,SAASZ,MAAMQ,KAAf;MAAT,CAAd,GAAiD,EAAhE;IANV;EAQT;;AA1B6B,CAAb,CAAlB;;;;;EA1BU,qBAASW,MAAT,IAASC,aADjBC,mBAiBM,KAjBNA,EAiBM;IAAAC;IAfJC,OAAM,iBAeF;IAdHC,OAAKC,eAAEC,KAAaR,aAAfO;EAcF,CAjBNJ,EAGuB,EAErBM,oCAWMC,QAXNP,EAC6B,IAD7BA,EAC6BQ,0BAAQ,CAA3BC,OAA2B,EAAlBC,KAAkB,KAAb;wBADxBV,mBAWM,KAXNA,EAWM;MATHC,KAAKS,KASF;MARJR,OAAM;IAQF,CAXNF,EAGQ,CAGEK,8BADRM,YAKEC,kBALFD,EAKE;MAAAV;MAHAC,OAAM,uBAGN;MAFA1B,MAAK,YAEL;MADCqC,MAAM;IACP,CALFF,CACQ,IAGCG,4BANH,EAMGC,gCACJN,OADI,GACG,CADH,CANH,CAHRT;EAUc,CATeQ,CAD7BR,EAUc,GAVdA,CAFqB,EAHvBA,IACQ","names":["_sfc_main","defineComponent","name","components","VaIcon","props","modelValue","type","String","Array","default","limit","Number","color","hasError","Boolean","setup","getColor","useColors","messages","computed","isArray","slice","computedStyle","length","openBlock","_createElementBlock","key","class","style","_normalizeStyle","_ctx","_openBlock","_Fragment","_renderList","message","index","_createBlock","_component_va_icon","size","_createCommentVNode","createTextVNode"],"sources":["../../../../../../../src/components/va-input/components/VaMessageList/VaMessageList.vue"],"sourcesContent":["<template>\n  <div\n    v-if=\"messages.length\"\n    class=\"va-message-list\"\n    :style=\"computedStyle\"\n  >\n    <div\n      v-for=\"(message, index) in messages\"\n      :key=\"index\"\n      class=\"va-message-list__message\"\n    >\n      <va-icon\n        v-if=\"hasError\"\n        class=\"va-message-list__icon\"\n        name=\"va-warning\"\n        :size=\"16\"\n      />{{ message }}\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType } from 'vue'\n\nimport { useColors } from '../../../../composables'\n\nimport { VaIcon } from '../../../va-icon'\n\nexport default defineComponent({\n  name: 'VaMessageList',\n\n  components: { VaIcon },\n\n  props: {\n    modelValue: {\n      type: [String, Array] as PropType<string | string[]>,\n      default: '',\n    },\n    limit: { type: Number, default: 1 },\n    color: { type: String },\n    hasError: { type: Boolean, default: false },\n  },\n\n  setup (props) {\n    const { getColor } = useColors()\n\n    return {\n      messages: computed<string[]>(() => {\n        if (!props.modelValue) { return [] }\n        if (!Array.isArray(props.modelValue)) { return [props.modelValue] }\n        return props.modelValue.slice(0, props.limit)\n      }),\n      computedStyle: computed(() => props.color ? { color: getColor(props.color) } : {}),\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../../../styles/resources/index.scss\";\n\n.va-message-list {\n  margin-top: var(--va-message-list-margin-top);\n  color: var(--va-message-list-color);\n\n  &__message {\n    display: flex;\n    vertical-align: var(--va-message-list-vertical-align);\n    font-size: var(--va-message-list-font-size);\n    line-height: var(--va-message-list-line-height);\n  }\n\n  &__icon {\n    margin-right: var(--va-message-list-icon-margin-right);\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}