{"ast":null,"code":"import { computed } from \"vue\";\nimport { a as useRouterLink } from \"../../../composables/useRouterLink.js\";\n\nconst useButtonAttributes = props => {\n  const {\n    linkAttributesComputed,\n    isLinkTag\n  } = useRouterLink(props);\n  const typeComputed = computed(() => isLinkTag.value ? void 0 : props.type);\n  const buttonAttributesComputed = computed(() => {\n    const disabledAttributes = {\n      \"aria-disabled\": !!props.disabled,\n      disabled: !!props.disabled\n    };\n\n    if (isLinkTag.value) {\n      return disabledAttributes;\n    }\n\n    return {\n      type: typeComputed.value,\n      tabindex: props.loading || props.disabled ? -1 : 0,\n      ...disabledAttributes\n    };\n  });\n  return computed(() => ({ ...linkAttributesComputed.value,\n    ...buttonAttributesComputed.value\n  }));\n};\n\nexport { useButtonAttributes as u };","map":{"version":3,"mappings":";;;AAqBa,4BAA4CA,KAAD,IAAW;EACjE,MAAM;IAAEC,sBAAF;IAA0BC;EAA1B,IAAwCC,cAAcH,KAAd,CAA9C;EAEA,MAAMI,eAAeC,SAAS,MAAMH,UAAUI,KAAV,GAAkB,MAAlB,GAA8BN,MAAMO,IAAnD,CAArB;EACM,iCAA2BF,SAAS,MAAM;IAC9C,MAAMG,qBAAqB;MACzB,iBAAiB,CAAC,CAACR,MAAMS,QADA;MAEzBA,UAAU,CAAC,CAACT,MAAMS;IAFO,CAA3B;;IAKA,IAAIP,UAAUI,KAAd,EAAqB;MAAS;IAAmB;;IAE1C;MACLC,MAAMH,aAAaE,KADd;MAELI,UAAUV,MAAMW,OAAN,IAAiBX,MAAMS,QAAvB,GAAkC,EAAlC,GAAuC,CAF5C;MAGL,GAAGD;IAHE;EAKR,CAbgC,CAA3B;EAeC,gBAAS,OAAS,KAAGP,uBAAuBK,KAA1B;IAAiC,GAAGM,yBAAyBN;EAA7D,CAAT,CAAT;AACT,CApBa","names":["props","linkAttributesComputed","isLinkTag","useRouterLink","typeComputed","computed","value","type","disabledAttributes","disabled","tabindex","loading","buttonAttributesComputed"],"sources":["../../../../../../src/components/va-button/hooks/useButtonAttributes.ts"],"sourcesContent":["import { computed, ComputedRef } from 'vue'\nimport { ButtonPropsTypes } from '../types'\nimport { useRouterLink } from '../../../composables'\n\ntype UseButtonAttributes = (\n  props: ButtonPropsTypes,\n) => ComputedRef<{\n  'aria-disabled': boolean,\n  disabled: boolean,\n  type?: any,\n  tabindex?: number,\n  target?: string,\n  href?: any,\n  to?: string | Record<string, any>,\n  replace?: boolean,\n  append?: boolean,\n  activeClass?: string,\n  exact?: boolean,\n  exactActiveClass?: string,\n}>\n\nexport const useButtonAttributes: UseButtonAttributes = (props) => {\n  const { linkAttributesComputed, isLinkTag } = useRouterLink(props as Required<typeof props>)\n\n  const typeComputed = computed(() => isLinkTag.value ? undefined : props.type)\n  const buttonAttributesComputed = computed(() => {\n    const disabledAttributes = {\n      'aria-disabled': !!props.disabled,\n      disabled: !!props.disabled,\n    }\n\n    if (isLinkTag.value) { return disabledAttributes }\n\n    return {\n      type: typeComputed.value,\n      tabindex: props.loading || props.disabled ? -1 : 0,\n      ...disabledAttributes,\n    }\n  })\n\n  return computed(() => ({ ...linkAttributesComputed.value, ...buttonAttributesComputed.value }))\n}\n"]},"metadata":{},"sourceType":"module"}