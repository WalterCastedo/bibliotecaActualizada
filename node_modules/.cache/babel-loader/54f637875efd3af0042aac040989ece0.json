{"ast":null,"code":"import { defineComponent, computed, openBlock, createBlock, resolveDynamicComponent, mergeProps, withCtx, renderSlot, createElementBlock, Fragment, createTextVNode, toDisplayString, createCommentVNode } from \"vue\";\nimport { o as omit_1 } from \"../../../vendor.js\";\nimport { u as useColors } from \"../../composables/useColors.js\";\nimport { u as useComponentPresetProp } from \"../../composables/useComponentPreset.js\";\nimport { u as useSizeProps, a as useSize } from \"../../composables/useSize.js\";\nimport { u as useIcon } from \"../../composables/useIcon.js\";\nimport { _ as _export_sfc } from \"../../../plugin-vue_export-helper.js\";\n\nvar VaIcon_vue_vue_type_style_index_0_lang = /* @__PURE__ */(() => ':root{--va-icon-vertical-align: middle;--va-icon-user-select: none}.va-icon{vertical-align:var(--va-icon-vertical-align);-webkit-user-select:var(--va-icon-user-select);-moz-user-select:var(--va-icon-user-select);-ms-user-select:var(--va-icon-user-select);user-select:var(--va-icon-user-select)}.va-icon[role^=button][tabindex]:not([tabindex^=\"-\"]){cursor:pointer}.va-icon[role^=button][tabindex]:not([tabindex^=\"-\"]):focus-visible{outline:2px solid var(--va-focus)!important;border-radius:2px}.va-icon.va-icon{font-style:normal}.va-icon--spin{-webkit-animation:va-icon--spin-animation 1.5s linear infinite;animation:va-icon--spin-animation 1.5s linear infinite}.va-icon--spin-reverse{-webkit-animation:va-icon--spin-animation 1.5s linear infinite;animation:va-icon--spin-animation 1.5s linear infinite;animation-direction:reverse}@-webkit-keyframes va-icon--spin-animation{0%{transform:rotate(0)}to{transform:rotate(360deg)}}@keyframes va-icon--spin-animation{0%{transform:rotate(0)}to{transform:rotate(360deg)}}.va-icon svg{fill:currentColor;height:100%}\\n')();\n\nconst _sfc_main = defineComponent({\n  name: \"VaIcon\",\n  props: { ...useSizeProps,\n    ...useComponentPresetProp,\n    name: {\n      type: String,\n      default: \"\"\n    },\n    tag: {\n      type: String\n    },\n    component: {\n      type: Object\n    },\n    color: {\n      type: String\n    },\n    rotation: {\n      type: [String, Number]\n    },\n    spin: {\n      type: [String, Boolean]\n    },\n    flip: {\n      type: String,\n      default: \"off\",\n      validator: value => [\"off\", \"horizontal\", \"vertical\", \"both\"].includes(value)\n    }\n  },\n\n  setup(props, {\n    attrs\n  }) {\n    const {\n      getColor\n    } = useColors();\n    const {\n      sizeComputed\n    } = useSize(props);\n    const {\n      getIcon\n    } = useIcon();\n    const iconConfig = computed(() => getIcon(props.name));\n    const computedTag = computed(() => props.component || props.tag || iconConfig.value.component || iconConfig.value.tag || \"i\");\n    const computedAttrs = computed(() => ({ ...iconConfig.value.attrs,\n      ...omit_1(attrs, [\"class\"])\n    }));\n\n    const getSpinClass = spin => {\n      if (spin === void 0 || spin === false) {\n        return;\n      }\n\n      return spin === \"counter-clockwise\" ? \"va-icon--spin-reverse\" : \"va-icon--spin\";\n    };\n\n    const computedClass = computed(() => {\n      var _a;\n\n      return [iconConfig.value.class, getSpinClass((_a = props.spin) != null ? _a : iconConfig.value.spin)];\n    });\n    const transformStyle = computed(() => {\n      const rotation = props.rotation ? `rotate(${props.rotation}deg)` : \"\";\n      const flipY = props.flip === \"vertical\" || props.flip === \"both\" ? -1 : 1;\n      const flipX = props.flip === \"horizontal\" || props.flip === \"both\" ? -1 : 1;\n      const scale = props.flip === \"off\" ? \"\" : `scale(${flipY}, ${flipX})`;\n      return `${scale} ${rotation}`.trim();\n    });\n    const computedStyle = computed(() => ({\n      transform: transformStyle.value,\n      cursor: attrs.onClick ? \"pointer\" : null,\n      color: props.color ? getColor(props.color, void 0, true) : iconConfig.value.color,\n      fontSize: sizeComputed.value,\n      height: sizeComputed.value,\n      lineHeight: sizeComputed.value\n    }));\n    const tabindexComputed = computed(() => {\n      var _a;\n\n      return (_a = attrs.tabindex) != null ? _a : -1;\n    });\n    const ariaHiddenComputed = computed(() => attrs.role !== \"button\" || tabindexComputed.value < 0);\n    return {\n      iconConfig,\n      computedTag,\n      computedAttrs,\n      computedClass,\n      computedStyle,\n      ariaHiddenComputed\n    };\n  }\n\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createBlock(resolveDynamicComponent(_ctx.computedTag), mergeProps({\n    class: [\"va-icon\", _ctx.computedClass],\n    style: _ctx.computedStyle,\n    \"aria-hidden\": _ctx.ariaHiddenComputed,\n    notranslate: \"\"\n  }, _ctx.computedAttrs), {\n    default: withCtx(() => [renderSlot(_ctx.$slots, \"default\", {}, () => [_ctx.iconConfig.content ? (openBlock(), createElementBlock(Fragment, {\n      key: 0\n    }, [createTextVNode(toDisplayString(_ctx.iconConfig.content), 1)], 64)) : createCommentVNode(\"\", true)])]),\n    _: 3\n  }, 16, [\"class\", \"style\", \"aria-hidden\"]);\n}\n\nvar VaIcon = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { VaIcon as V };\nimport './VaIcon.css';","map":{"version":3,"mappings":";;;;;;;;;;AA6BA,MAAKA,YAAaC,gBAAa;EAC7BC,MAAM,QADuB;EAE7BC,OAAO,EACL,GAAGC,YADE;IAEL,GAAGC,sBAFE;IAGLH,MAAM;MAAEI,MAAMC,MAAR;MAAgBC,SAAS;IAAzB,CAHD;IAILC,KAAK;MAAEH,MAAMC;IAAR,CAJA;IAKLG,WAAW;MAAEJ,MAAMK;IAAR,CALN;IAMLC,OAAO;MAAEN,MAAMC;IAAR,CANF;IAOLM,UAAU;MAAEP,MAAM,CAACC,MAAD,EAASO,MAAT;IAAR,CAPL;IAQLC,MAAM;MAAET,MAAM,CAACC,MAAD,EAASS,OAAT;IAAR,CARD;IASLC,MAAM;MACJX,MAAMC,MADF;MAEJC,SAAS,KAFL;MAGJU,WAAYC,KAAD,IAAmB,CAAC,KAAD,EAAQ,YAAR,EAAsB,UAAtB,EAAkC,MAAlC,EAA0CC,QAA1C,CAAmDD,KAAnD;IAH1B;EATD,CAFsB;;EAiB7BE,MAAOlB,KAAP,EAAc;IAAEmB;EAAF,CAAd,EAAyB;IACjB;MAAEC;IAAF,IAAeC,WAAf;IACA;MAAEC;IAAF,IAAmBC,QAAQvB,KAAR,CAAnB;IACA;MAAEwB;IAAF,IAAcC,SAAd;IAEN,MAAMC,aAAaC,SAAS,MAAMH,QAAQxB,MAAMD,IAAd,CAAf,CAAnB;IAEA,MAAM6B,cAAcD,SAAS,MAAM3B,MAAMO,SAAN,IAAmBP,MAAMM,GAAzB,IAAgCoB,WAAWV,KAAX,CAAiBT,SAAjD,IAA8DmB,WAAWV,KAAX,CAAiBV,GAA/E,IAAsF,GAArG,CAApB;IAEA,MAAMuB,gBAAgBF,SAAS,OAAO,EAAE,GAAGD,WAAWV,KAAX,CAAiBG,KAAtB;MAA6B,GAAGW,OAAKX,KAALW,EAAY,CAAC,OAAD,CAAZA;IAAhC,CAAP,CAAT,CAAtB;;IAEM,qBAAgBlB,IAAD,IAA6B;MAC5C,aAAS,MAAT,IAAsBA,SAAS,KAA/B,EAAsC;QAAE;MAAO;;MAC5C,gBAAS,mBAAT,GAA+B,uBAA/B,GAAyD,eAAzD;IAAyD,CAF5D;;IAKA,sBAAgBe,SAAS,MAAM;;;MAAA,QACnCD,WAAWV,KAAX,CAAiBe,KADkB,EAEnCC,aAAa,YAAMpB,IAAN,iBAAcc,WAAWV,KAAX,CAAiBJ,IAA5C,CAFmC;IAGpC,CAHqB,CAAhB;IAKA,uBAAiBe,SAAS,MAAM;MACpC,MAAMjB,WAAWV,MAAMU,QAAN,GAAiB,UAAUV,MAAMU,cAAjC,GAAkD,EAAnE;MAEA,MAAMuB,QAASjC,MAAMc,IAAN,KAAe,UAAf,IAA6Bd,MAAMc,IAAN,KAAe,MAA5C,GAAsD,EAAtD,GAA2D,CAA1E;MACA,MAAMoB,QAASlC,MAAMc,IAAN,KAAe,YAAf,IAA+Bd,MAAMc,IAAN,KAAe,MAA9C,GAAwD,EAAxD,GAA6D,CAA5E;MACA,MAAMqB,QAAQnC,MAAMc,IAAN,KAAe,KAAf,GAAuB,EAAvB,GAA4B,SAASmB,UAAUC,QAA7D;MAEO,UAAGC,SAASzB,UAAZ,CAAuB0B,IAAvB;IACR,CARsB,CAAjB;IAUA,sBAAgBT,SAAS,OAAO;MACpCU,WAAWC,eAAetB,KADU;MAEpCuB,QAAQpB,MAAMqB,OAAN,GAAgB,SAAhB,GAA4B,IAFA;MAGpC/B,OAAOT,MAAMS,KAAN,GAAcW,SAASpB,MAAMS,KAAf,EAAsB,MAAtB,EAAiC,IAAjC,CAAd,GAAuDiB,WAAWV,KAAX,CAAiBP,KAH3C;MAIpCgC,UAAUnB,aAAaN,KAJa;MAKpC0B,QAAQpB,aAAaN,KALe;MAMpC2B,YAAYrB,aAAaN;IANW,CAAP,CAAT,CAAhB;IASN,MAAM4B,mBAAmBjB,SAAS;;;MAAM,mBAAMkB,QAAN,iBAAwC,EAAxC;IAA0C,CAAzD,CAAzB;IACM,2BAAqBlB,SAAS,MAAMR,MAAM2B,IAAN,KAAe,QAAf,IAA2BF,iBAAiB5B,KAAjB,GAAyB,CAAnE,CAArB;IAEC;MACLU,UADK;MAELE,WAFK;MAGLC,aAHK;MAILkB,aAJK;MAKLC,aALK;MAMLC;IANK;EAQT;;AApE6B,CAAb,CAAlB;;;sBA5BEC,YAcYC,wBAbLC,KAAWxB,WAaNuB,CAdZD,aAcY;IAZVnB,OAAK,CAAC,SAAD,EACGqB,KAAaL,aADhB,CAYK;IAVTM,OAAOD,kBAUE;IATT,eAAaA,uBASJ;IARVE;EAQU,CAdZC,EAOUH,KAAavB,aAPvB0B,GAOuB;IAAAlD,iBAErB,MAIO,CAJPmD,WAIOJ,WAJPI,EAIO,SAJPA,EAIO,EAJPA,QAIO,CAHWJ,gBAAWK,OAAX,IAAWC,aAA3BC,mBAEWC,QAFXD,EAEW;MAAAE;IAAA,CAFXF,EAEW,iCADNP,gBAAWK,OACLK,GADY,CACZC,EAFXJ,EACuB,EADvBA,CAAgB,IACOK,4BAElB,CAJPR,CAIO,CANcS;;EAAA,CAPvBf","names":["_sfc_main","defineComponent","name","props","useSizeProps","useComponentPresetProp","type","String","default","tag","component","Object","color","rotation","Number","spin","Boolean","flip","validator","value","includes","setup","attrs","getColor","useColors","sizeComputed","useSize","getIcon","useIcon","iconConfig","computed","computedTag","computedAttrs","omit","class","getSpinClass","flipY","flipX","scale","trim","transform","transformStyle","cursor","onClick","fontSize","height","lineHeight","tabindexComputed","tabindex","role","computedClass","computedStyle","ariaHiddenComputed","_createBlock","_resolveDynamicComponent","_ctx","style","notranslate","_mergeProps","_renderSlot","content","openBlock","_createElementBlock","_Fragment","key","_toDisplayString","_createTextVNode","_createCommentVNode","_withCtx"],"sources":["../../../../../src/components/va-icon/VaIcon.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"computedTag\"\n    class=\"va-icon\"\n    :class=\"computedClass\"\n    :style=\"computedStyle\"\n    :aria-hidden=\"ariaHiddenComputed\"\n    notranslate\n    v-bind=\"computedAttrs\"\n  >\n    <slot>\n      <template v-if=\"iconConfig.content\">\n        {{ iconConfig.content }}\n      </template>\n    </slot>\n  </component>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed } from 'vue'\nimport omit from 'lodash/omit.js'\n\nimport {\n  useComponentPresetProp,\n  useColors,\n  useSize, useSizeProps,\n  useIcon,\n} from '../../composables'\n\nexport default defineComponent({\n  name: 'VaIcon',\n  props: {\n    ...useSizeProps,\n    ...useComponentPresetProp,\n    name: { type: String, default: '' },\n    tag: { type: String },\n    component: { type: Object as PropType<any> },\n    color: { type: String },\n    rotation: { type: [String, Number] },\n    spin: { type: [String, Boolean] },\n    flip: {\n      type: String as PropType<'off' | 'horizontal' | 'vertical' | 'both'>,\n      default: 'off',\n      validator: (value: string) => ['off', 'horizontal', 'vertical', 'both'].includes(value),\n    },\n  },\n  setup (props, { attrs }) {\n    const { getColor } = useColors()\n    const { sizeComputed } = useSize(props)\n    const { getIcon } = useIcon()\n\n    const iconConfig = computed(() => getIcon(props.name))\n\n    const computedTag = computed(() => props.component || props.tag || iconConfig.value.component || iconConfig.value.tag || 'i')\n\n    const computedAttrs = computed(() => ({ ...iconConfig.value.attrs, ...omit(attrs, ['class']) }))\n\n    const getSpinClass = (spin?: string | boolean) => {\n      if (spin === undefined || spin === false) { return }\n      return spin === 'counter-clockwise' ? 'va-icon--spin-reverse' : 'va-icon--spin'\n    }\n\n    const computedClass = computed(() => [\n      iconConfig.value.class,\n      getSpinClass(props.spin ?? iconConfig.value.spin),\n    ])\n\n    const transformStyle = computed(() => {\n      const rotation = props.rotation ? `rotate(${props.rotation}deg)` : ''\n\n      const flipY = (props.flip === 'vertical' || props.flip === 'both') ? -1 : 1\n      const flipX = (props.flip === 'horizontal' || props.flip === 'both') ? -1 : 1\n      const scale = props.flip === 'off' ? '' : `scale(${flipY}, ${flipX})`\n\n      return `${scale} ${rotation}`.trim()\n    })\n\n    const computedStyle = computed(() => ({\n      transform: transformStyle.value,\n      cursor: attrs.onClick ? 'pointer' : null,\n      color: props.color ? getColor(props.color, undefined, true) : iconConfig.value.color,\n      fontSize: sizeComputed.value,\n      height: sizeComputed.value,\n      lineHeight: sizeComputed.value,\n    }))\n\n    const tabindexComputed = computed(() => attrs.tabindex as number | undefined ?? -1)\n    const ariaHiddenComputed = computed(() => attrs.role !== 'button' || tabindexComputed.value < 0)\n\n    return {\n      iconConfig,\n      computedTag,\n      computedAttrs,\n      computedClass,\n      computedStyle,\n      ariaHiddenComputed,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n@import '../../styles/resources';\n\n.va-icon {\n  vertical-align: var(--va-icon-vertical-align);\n  user-select: var(--va-icon-user-select);\n\n  &[role^=\"button\"][tabindex]:not([tabindex^=\"-\"]) {\n    cursor: pointer;\n\n    @include keyboard-focus-outline($radius: 2px);\n  }\n\n  &#{&} {\n    // need 2 classes to make it work\n    font-style: normal;\n  }\n\n  &--spin {\n    animation: va-icon--spin-animation 1500ms linear infinite;\n\n    &-reverse {\n      animation: va-icon--spin-animation 1500ms linear infinite;\n      animation-direction: reverse;\n    }\n  }\n\n  @keyframes va-icon--spin-animation {\n    from {\n      transform: rotate(0deg);\n    }\n\n    to {\n      transform: rotate(360deg);\n    }\n  }\n\n  svg {\n    fill: currentColor;\n    height: 100%;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}