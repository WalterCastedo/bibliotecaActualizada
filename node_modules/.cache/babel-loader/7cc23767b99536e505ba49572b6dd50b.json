{"ast":null,"code":"import axios from \"axios\";\nexport const RUTA_SERVIDOR_ALUMNOS = process.env.VUE_APP_RUTA_API_ALUMNOS;\nexport const RUTA_SERVIDOR_LIBROS = process.env.VUE_APP_RUTA_API_LIBROS;\nexport default {\n  name: \"ListarAutores\",\n\n  data() {\n    return {\n      totalAutores: [],\n      nombreAutor: \"\",\n      autores: [],\n      elementosPorPagina: 10,\n      datosPaginados: [],\n      paginaActual: 1,\n      autorEditar: {\n        nombre: \"\",\n        id: 0\n      }\n    };\n  },\n\n  created: function () {\n    this.consultarAutores();\n  },\n\n  mounted() {\n    this.ObtenerDatosPag(1);\n  },\n\n  methods: {\n    consultarAutores() {\n      fetch(RUTA_SERVIDOR_LIBROS + \"/autor\").then(respuesta => respuesta.json()).then(datosRespuesta => {\n        this.libros = [];\n\n        if (typeof datosRespuesta[0].success === \"undefined\") {\n          datosRespuesta.sort((a, b) => {\n            if (a.nombre.toUpperCase() == b.nombre.toUpperCase()) {\n              return 0;\n            }\n\n            if (a.nombre.toUpperCase() > b.nombre.toUpperCase()) {\n              return 1;\n            }\n\n            if (a.nombre.toUpperCase() < b.nombre.toUpperCase()) {\n              return -1;\n            }\n          });\n          this.autores = datosRespuesta;\n          this.filtrarAutores();\n        }\n      }).catch(console.log);\n    },\n\n    filtrarAutores() {\n      this.totalAutores = [];\n\n      for (let index = 0; index < this.autores.length; index++) {\n        if (this.autores[index].activo === 1 && this.autores[index].nombre.toUpperCase().includes(this.nombreAutor.toUpperCase())) {\n          this.totalAutores = this.totalAutores.concat(this.autores[index]);\n          this.ObtenerDatosPag(1);\n        }\n      }\n\n      if (this.totalAutores.length === 0) {\n        this.paginaPrevia(); //this.paginaActual=0;\n      }\n    },\n\n    eliminar(autor) {\n      console.log(autor);\n      axios.put(RUTA_SERVIDOR_LIBROS + \"/autor/\" + autor.id, {\n        nombre: autor.nombre,\n        idEmpleado: autor.idEmpleado,\n        activo: 0\n      }).then(function (response) {\n        console.log(response);\n        location.reload();\n      }).catch(function (error) {\n        console.log(error); // console.log(this.libro);\n      });\n    },\n\n    totalPaginas() {\n      return Math.ceil(this.totalAutores.length / this.elementosPorPagina);\n    },\n\n    ObtenerDatosPag(noPag) {\n      this.paginaActual = noPag;\n      this.datosPaginados = [];\n      let ini = noPag * this.elementosPorPagina - this.elementosPorPagina;\n      let fin = noPag * this.elementosPorPagina;\n      this.datosPaginados = this.totalAutores.slice(ini, fin);\n    },\n\n    paginaPrevia() {\n      if (this.paginaActual > 1) {\n        this.paginaActual--;\n      }\n\n      this.ObtenerDatosPag(this.paginaActual);\n    },\n\n    paginaSiguiente() {\n      if (this.paginaActual < this.totalPaginas()) {\n        this.paginaActual++;\n      }\n\n      this.ObtenerDatosPag(this.paginaActual);\n    },\n\n    activo(noPoag) {\n      return noPoag === this.paginaActual ? \"active\" : \"\";\n    },\n\n    obtenerAutor(idAutor) {\n      this.autorEditar.nombre = idAutor.nombre;\n      this.autorEditar.id = idAutor.id;\n    },\n\n    actualizar() {\n      axios.put(RUTA_SERVIDOR_LIBROS + \"/autor/\" + this.autorEditar.id, {\n        nombre: this.autorEditar.nombre.toUpperCase(),\n        idEmpleado: parseInt(localStorage.getItem('id')),\n        activo: 1\n      }).then(function (response) {\n        console.log(response);\n        location.reload();\n      }).then(alert(\"El autor se actualizo correctamente\")).catch(function (error) {\n        console.log(error); // console.log(this.libro);\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAmHA;AACA;AACA;AAEA;EACAA,qBADA;;EAEAC;IACA;MACAC,gBADA;MAEAC,eAFA;MAGAC,WAHA;MAIAC,sBAJA;MAKAC,kBALA;MAMAC,eANA;MAOAC;QACAC,UADA;QAEAC;MAFA;IAPA;EAYA,CAfA;;EAiBAC;IACA;EACA,CAnBA;;EAoBAC;IACA;EACA,CAtBA;;EAuBAC;IACAC;MACAC,uCACAC,IADA,CACAC,6BADA,EAEAD,IAFA,CAEAE;QACA;;QACA;UACAA;YACA;cACA;YACA;;YACA;cACA;YACA;;YACA;cACA;YACA;UACA,CAVA;UAWA;UACA;QACA;MACA,CAnBA,EAoBAC,KApBA,CAoBAC,WApBA;IAqBA,CAvBA;;IAyBAC;MACA;;MACA;QACA,IACA,oCACA,2BACAC,WADA,GAEAC,QAFA,CAEA,8BAFA,CAFA,EAKA;UACA;UACA;QACA;MACA;;MACA;QACA,oBADA,CAEA;MACA;IACA,CA1CA;;IA4CAC;MACAJ;MACAK,MACAC,GADA,CACAC,2CADA,EACA;QACAlB,oBADA;QAEAmB,4BAFA;QAGAC;MAHA,CADA,EAMAb,IANA,CAMA;QACAI;QACAU;MACA,CATA,EAUAX,KAVA,CAUA;QACAC,mBADA,CAEA;MACA,CAbA;IAcA,CA5DA;;IA8DAW;MACA;IACA,CAhEA;;IAkEAC;MACA;MACA;MACA;MACA;MACA;IACA,CAxEA;;IA0EAC;MACA;QACA;MACA;;MACA;IACA,CA/EA;;IAiFAC;MACA;QACA;MACA;;MACA;IACA,CAtFA;;IAuFAL;MACA;IACA,CAzFA;;IA2FAM;MACA;MACA;IACA,CA9FA;;IA+FAC;MACAX,MACAC,GADA,CACAC,sDADA,EACA;QACAlB,6CADA;QAEAmB,gDAFA;QAGAC;MAHA,CADA,EAMAb,IANA,CAMA;QACAI;QACAU;MACA,CATA,EAUAd,IAVA,CAUAqB,4CAVA,EAWAlB,KAXA,CAWA;QACAC,mBADA,CAEA;MACA,CAdA;IAeA;;EA/GA;AAvBA","names":["name","data","totalAutores","nombreAutor","autores","elementosPorPagina","datosPaginados","paginaActual","autorEditar","nombre","id","created","mounted","methods","consultarAutores","fetch","then","respuesta","datosRespuesta","catch","console","filtrarAutores","toUpperCase","includes","eliminar","axios","put","RUTA_SERVIDOR_LIBROS","idEmpleado","activo","location","totalPaginas","ObtenerDatosPag","paginaPrevia","paginaSiguiente","obtenerAutor","actualizar","alert"],"sourceRoot":"src/components","sources":["ListarAutores.vue"],"sourcesContent":["<template class=\"fondo\">\n  <div class=\"row align-items-center\">\n    <div class=\"col\">\n      <div class=\"container align-items-center\">\n        <div class=\"form-group text-center\">\n          <label for=\"\">Ingresa el nombre del autor</label>\n          <input\n            v-on:keyup=\"filtrarAutores()\"\n            v-model=\"nombreAutor\"\n            type=\"text\"\n            class=\"form-control text-center\"\n            placeholder=\"Nombre del autor\"\n          />\n        </div>\n<br>\n        <div class=\" d-md-block  table-responsive table-sm small\">\n          <table class=\"table table-striped border text-center tableMb\">\n            <thead class=\"thMb\">\n              <tr class=\"trMb\">\n                <!-- <th>ID</th> -->\n                <th>NOMBRE</th>\n                <th>ACCIONES</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"autor in datosPaginados\" :key=\"autor.id\">\n                <!-- <td>{{ libro.id }}</td> -->\n                <td>{{ autor.nombre }}</td>\n                <!-- <td>{{ libro.codigo }}</td>\n                    <td>{{ libro.copias }}</td>\n                    <td>{{ libro.categoria }}</td>\n                    <td>{{ libro.edicion }}</td>\n                    <td>{{ autor[[libro.idAutor] - 1].nombre }}</td>\n                    <td>{{ editoriales[[libro.idEditorial] - 1].nombreEditorial }}</td>\n                    <td>{{ carreras[[libro.idCarrera] - 1].nombreCarrera }}</td>\n                    <td>{{ libro.observacion }}</td> -->\n                <td>\n                  <div class=\"btn-group\" role=\"group\" aria-label=\"\">\n                    <button\n                      v-b-modal.modal-center\n                      @click=\"obtenerAutor(autor)\"\n                      class=\"btn btn-info btn-sm\"\n                    >\n                      Editar\n                    </button>\n                    <button\n                      type=\"button\"\n                      @click=\"eliminar(autor)\"\n                      class=\"btn btn-danger btn-sm\"\n                    >\n                      Eliminar\n                    </button>\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <!-- <nav aria-label=\"Page navigation example\">\n            <ul class=\"pagination\">\n                <li class=\"page-item\" v-on:click=\"paginaPrevia()\">\n                    <a class=\"page-link\" href=\"#\">Previous</a>\n                </li>\n                <li v-for=\"pagina in totalPaginas()\" :key=\"pagina\" class=\"page-item\" v-bind:class=\"activo(pagina)\">\n                    <a class=\"page-link\" href=\"#\" v-on:click=\"ObtenerDatosPag(pagina)\">{{pagina}}</a>\n                </li>\n                <li class=\"page-item\" v-on:click=\"paginaSiguiente()\">\n                    <a class=\"page-link\" href=\"#\">Next</a>\n                </li>\n            </ul>\n        </nav> -->\n      </div>\n    </div>\n\n    <nav aria-label=\"Page navigation example\">\n      <ul class=\"pagination\">\n        <li class=\"page-item\" v-on:click=\"paginaPrevia()\">\n          <a class=\"page-link\" href=\"#\">Previous</a>\n        </li>\n        <li\n          v-for=\"paginaE in totalPaginas()\"\n          :key=\"paginaE\"\n          class=\"page-item\"\n          v-bind:class=\"activo(paginaE)\"\n        >\n          <a class=\"page-link\" href=\"#\" v-on:click=\"ObtenerDatosPag(paginaE)\">{{\n            paginaE\n          }}</a>\n        </li>\n        <li class=\"page-item\" v-on:click=\"paginaSiguiente()\">\n          <a class=\"page-link\" href=\"#\">Next</a>\n        </li>\n      </ul>\n    </nav>\n\n    <b-modal id=\"modal-center\" centered title=\"Modificar autor\">\n      <div class=\"form-group\">\n        <label for=\"\">nombre autor</label>\n        <input\n          v-model=\"autorEditar.nombre\"\n          type=\"text\"\n          name=\"\"\n          id=\"\"\n          class=\"form-control\"\n          placeholder=\"autorEditar.nombre\"\n          aria-describedby=\"helpId\"\n        />\n        <button @click=\"actualizar()\"></button>\n      </div>\n    </b-modal>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport const RUTA_SERVIDOR_ALUMNOS = process.env.VUE_APP_RUTA_API_ALUMNOS;\nexport const RUTA_SERVIDOR_LIBROS = process.env.VUE_APP_RUTA_API_LIBROS;\n\nexport default {\n  name: \"ListarAutores\",\n  data() {\n    return {\n      totalAutores: [],\n      nombreAutor: \"\",\n      autores: [],\n      elementosPorPagina: 10,\n      datosPaginados: [],\n      paginaActual: 1,\n      autorEditar: {\n        nombre: \"\",\n        id: 0,\n      },\n    };\n  },\n\n  created: function () {\n    this.consultarAutores();\n  },\n  mounted() {\n    this.ObtenerDatosPag(1);\n  },\n  methods: {\n    consultarAutores() {\n      fetch(RUTA_SERVIDOR_LIBROS+\"/autor\")\n        .then((respuesta) => respuesta.json())\n        .then((datosRespuesta) => {\n          this.libros = [];\n          if (typeof datosRespuesta[0].success === \"undefined\") {\n            datosRespuesta.sort((a, b) => {\n              if (a.nombre.toUpperCase() == b.nombre.toUpperCase()) {\n                return 0;\n              }\n              if (a.nombre.toUpperCase() > b.nombre.toUpperCase()) {\n                return 1;\n              }\n              if (a.nombre.toUpperCase() < b.nombre.toUpperCase()) {\n                return -1;\n              }\n            });\n            this.autores = datosRespuesta;\n            this.filtrarAutores();\n          }\n        })\n        .catch(console.log);\n    },\n\n    filtrarAutores() {\n      this.totalAutores = [];\n      for (let index = 0; index < this.autores.length; index++) {\n        if (\n          this.autores[index].activo === 1 &&\n          this.autores[index].nombre\n            .toUpperCase()\n            .includes(this.nombreAutor.toUpperCase())\n        ) {\n          this.totalAutores = this.totalAutores.concat(this.autores[index]);\n          this.ObtenerDatosPag(1);\n        }\n      }\n      if (this.totalAutores.length === 0) {\n        this.paginaPrevia();\n        //this.paginaActual=0;\n      }\n    },\n\n    eliminar(autor) {\n      console.log(autor);\n      axios\n        .put(RUTA_SERVIDOR_LIBROS+\"/autor/\" + autor.id, {\n          nombre: autor.nombre,\n          idEmpleado: autor.idEmpleado,\n          activo: 0,\n        })\n        .then(function (response) {\n          console.log(response);\n          location.reload();\n        })\n        .catch(function (error) {\n          console.log(error);\n          // console.log(this.libro);\n        });\n    },\n\n    totalPaginas() {\n      return Math.ceil(this.totalAutores.length / this.elementosPorPagina);\n    },\n\n    ObtenerDatosPag(noPag) {\n      this.paginaActual = noPag;\n      this.datosPaginados = [];\n      let ini = noPag * this.elementosPorPagina - this.elementosPorPagina;\n      let fin = noPag * this.elementosPorPagina;\n      this.datosPaginados = this.totalAutores.slice(ini, fin);\n    },\n\n    paginaPrevia() {\n      if (this.paginaActual > 1) {\n        this.paginaActual--;\n      }\n      this.ObtenerDatosPag(this.paginaActual);\n    },\n\n    paginaSiguiente() {\n      if (this.paginaActual < this.totalPaginas()) {\n        this.paginaActual++;\n      }\n      this.ObtenerDatosPag(this.paginaActual);\n    },\n    activo(noPoag) {\n      return noPoag === this.paginaActual ? \"active\" : \"\";\n    },\n\n    obtenerAutor(idAutor) {\n      this.autorEditar.nombre = idAutor.nombre;\n      this.autorEditar.id = idAutor.id;\n    },\n    actualizar() {\n      axios\n        .put(RUTA_SERVIDOR_LIBROS+\"/autor/\" + this.autorEditar.id, {\n          nombre: this.autorEditar.nombre.toUpperCase(),\n          idEmpleado: parseInt(localStorage.getItem('id')),\n          activo: 1,\n        })\n        .then(function (response) {\n          console.log(response);\n          location.reload();\n        })\n        .then(alert(\"El autor se actualizo correctamente\"))\n        .catch(function (error) {\n          console.log(error);\n          // console.log(this.libro);\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}