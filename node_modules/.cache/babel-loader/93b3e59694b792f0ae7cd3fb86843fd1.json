{"ast":null,"code":"import { reactive, watchEffect, computed } from \"vue\";\nimport { u as useEvent } from \"../../../composables/useEvent.js\";\n\nconst useCursorAnchor = (anchorRef, noUpdate) => {\n  const mouse = reactive({\n    x: 0,\n    y: 0\n  });\n  useEvent([\"mousemove\", \"mousedown\", \"mouseup\"], e => {\n    const {\n      x,\n      y\n    } = anchorRef.value.getBoundingClientRect();\n    mouse.x = e.clientX - x;\n    mouse.y = e.clientY - y;\n  }, anchorRef);\n  const mouseOffset = {\n    x: 0,\n    y: 0\n  };\n  watchEffect(() => {\n    if (noUpdate.value) {\n      return;\n    }\n\n    mouseOffset.x = mouse.x;\n    mouseOffset.y = mouse.y;\n  });\n  return computed(() => {\n    if (!anchorRef.value) {\n      return void 0;\n    }\n\n    const target = anchorRef.value;\n\n    const getBoundingClientRect = () => {\n      const rect = target.getBoundingClientRect();\n      const x = rect.left + mouseOffset.x;\n      const y = rect.top + mouseOffset.y;\n      return { ...rect,\n        x,\n        y,\n        bottom: y + 1,\n        right: x + 1,\n        left: x,\n        top: y\n      };\n    };\n\n    return new Proxy(target, {\n      get(target2, key) {\n        if (key === \"getBoundingClientRect\") {\n          return getBoundingClientRect;\n        }\n\n        return target2[key];\n      }\n\n    });\n  });\n};\n\nexport { useCursorAnchor as u };","map":{"version":3,"mappings":";;;AAGa,wBAAkB,CAACA,SAAD,EAA0CC,QAA1C,KAAqE;EAClG,MAAMC,QAAQC,SAAS;IAAEC,GAAG,CAAL;IAAQC,GAAG;EAAX,CAAT,CAAd;EAEAC,SAAS,CAAC,WAAD,EAAc,WAAd,EAA2B,SAA3B,CAAT,EAAiDC,CAAD,IAAmB;IACjE,MAAM;MAAEH,CAAF;MAAKC;IAAL,IAAWL,UAAUQ,KAAV,CAAiBC,qBAAjB,EAAjB;IACMP,UAAIK,EAAEG,OAAF,GAAYN,CAAhB;IACAF,UAAIK,EAAEI,OAAF,GAAYN,CAAhB;EAAgB,CAHxB,EAIGL,SAJH;EAMA,MAAMY,cAAc;IAClBR,GAAG,CADe;IAElBC,GAAG;EAFe,CAApB;EAKAQ,YAAY,MAAM;IAChB,IAAIZ,SAASO,KAAb,EAAoB;MAAE;IAAO;;IAC7BI,YAAYR,CAAZ,GAAgBF,MAAME,CAAtB;IACAQ,YAAYP,CAAZ,GAAgBH,MAAMG,CAAtB;EACD,CAJD;EAMA,OAAOS,SAAS,MAAM;IAChB,KAACd,UAAUQ,KAAX,EAAkB;MAAS;IAAU;;IAEzC,MAAMO,SAASf,UAAUQ,KAAzB;;IAEA,MAAMC,wBAAwB,MAAM;MAC5B,aAAOM,OAAON,qBAAP,EAAP;MACA,UAAIO,KAAKC,IAAL,GAAYL,YAAYR,CAA5B;MACA,UAAIY,KAAKE,GAAL,GAAWN,YAAYP,CAA3B;MAEC,SACL,GAAGW,IADE;QAELZ,CAFK;QAGLC,CAHK;QAILc,QAAQd,IAAI,CAJP;QAKLe,OAAOhB,IAAI,CALN;QAMLa,MAAMb,CAND;QAOLc,KAAKb;MAPA;IAQP,CAbF;;IAgBO,WAAIgB,KAAJ,CAAuBN,MAAvB,EAA+B;MACpCO,IAAKC,OAAL,EAAaC,GAAb,EAAuC;QACrC,IAAIA,QAAQ,uBAAZ,EAAqC;UAC5B;QACT;;QAEA,OAAOD,QAAOC,GAAP,CAAP;MACF;;IAPoC,CAA/B;EASR,CA9BM,CAAP;AA+BF,CAnDa","names":["anchorRef","noUpdate","mouse","reactive","x","y","useEvent","e","value","getBoundingClientRect","clientX","clientY","mouseOffset","watchEffect","computed","target","rect","left","top","bottom","right","Proxy","get","target2","key"],"sources":["../../../../../../src/components/va-dropdown/hooks/useCursorAnchor.ts"],"sourcesContent":["import { computed, reactive, Ref, watch, watchEffect } from 'vue'\nimport { useEvent } from '../../../composables/useEvent'\n\nexport const useCursorAnchor = (anchorRef: Ref<HTMLElement | undefined>, noUpdate: Ref<boolean>) => {\n  const mouse = reactive({ x: 0, y: 0 })\n\n  useEvent(['mousemove', 'mousedown', 'mouseup'], (e: MouseEvent) => {\n    const { x, y } = anchorRef.value!.getBoundingClientRect()\n    mouse.x = e.clientX - x\n    mouse.y = e.clientY - y\n  }, anchorRef)\n\n  const mouseOffset = {\n    x: 0,\n    y: 0,\n  }\n\n  watchEffect(() => {\n    if (noUpdate.value) { return }\n    mouseOffset.x = mouse.x\n    mouseOffset.y = mouse.y\n  })\n\n  return computed(() => {\n    if (!anchorRef.value) { return undefined }\n\n    const target = anchorRef.value\n\n    const getBoundingClientRect = () => {\n      const rect = target.getBoundingClientRect()\n      const x = rect.left + mouseOffset.x\n      const y = rect.top + mouseOffset.y\n\n      return {\n        ...rect,\n        x: x,\n        y: y,\n        bottom: y + 1,\n        right: x + 1,\n        left: x,\n        top: y,\n      }\n    }\n\n    return new Proxy<HTMLElement>(target, {\n      get (target, key: keyof typeof target) {\n        if (key === 'getBoundingClientRect') {\n          return getBoundingClientRect\n        }\n\n        return target[key]\n      },\n    })\n  })\n}\n"]},"metadata":{},"sourceType":"module"}