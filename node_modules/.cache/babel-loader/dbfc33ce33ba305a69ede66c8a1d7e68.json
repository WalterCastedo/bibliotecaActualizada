{"ast":null,"code":"import { reactive, computed, watch } from \"vue\";\nimport { b as isClient } from \"../utils/ssr.js\";\nimport { u as useEvent } from \"./useEvent.js\";\n\nfunction useWindowSize() {\n  const windowSizes = reactive({\n    width: void 0,\n    height: void 0\n  });\n\n  const setCurrentWindowSizes = () => {\n    windowSizes.width = window == null ? void 0 : window.innerWidth;\n    windowSizes.height = window == null ? void 0 : window.innerHeight;\n  };\n\n  const isMounted = computed(isClient);\n  watch(isMounted, newValue => {\n    if (!newValue) {\n      return;\n    }\n\n    setCurrentWindowSizes();\n  }, {\n    immediate: true\n  });\n  useEvent(\"resize\", setCurrentWindowSizes, true);\n  return {\n    windowSizes\n  };\n}\n\nexport { useWindowSize as u };","map":{"version":3,"mappings":";;;;AAOiC;EAC/B,MAAMA,cAAcC,SAAsB;IACxCC,OAAO,MADiC;IAExCC,QAAQ;EAFgC,CAAtB,CAApB;;EAKA,MAAMC,wBAAwB,MAAM;IAClCJ,YAAYE,KAAZ,GAAoBG,iCAAQC,UAA5B;IACAN,YAAYG,MAAZ,GAAqBE,iCAAQE,WAA7B;EAA6B,CAF/B;;EAKM,kBAAYC,SAASC,QAAT,CAAZ;EACAC,iBAAYC,QAAD,IAAc;IAC7B,IAAI,CAACA,QAAL,EAAe;MAAE;IAAO;;IACFP;EAAA,CAFlB,EAGH;IAAEQ,WAAW;EAAb,CAHG;EAIGC,mBAAUT,qBAAV,EAAiC,IAAjC;EAET,OAAO;IAAEJ;EAAF,CAAP;AACF","names":["windowSizes","reactive","width","height","setCurrentWindowSizes","window","innerWidth","innerHeight","computed","isClient","watch","newValue","immediate","useEvent"],"sources":["../../../../src/composables/useWindowSize.ts"],"sourcesContent":["import { reactive, computed, watch } from 'vue'\n\nimport { useEvent } from './'\nimport { isClient } from '../utils/ssr'\n\ntype WindowSizes = Record<'width' | 'height', number | undefined>\n\nexport function useWindowSize () {\n  const windowSizes = reactive<WindowSizes>({\n    width: undefined,\n    height: undefined,\n  })\n\n  const setCurrentWindowSizes = () => {\n    windowSizes.width = window?.innerWidth\n    windowSizes.height = window?.innerHeight\n  }\n\n  const isMounted = computed(isClient)\n  watch(isMounted, (newValue) => {\n    if (!newValue) { return }\n    setCurrentWindowSizes()\n  }, { immediate: true })\n  useEvent('resize', setCurrentWindowSizes, true)\n\n  return { windowSizes }\n}\n"]},"metadata":{},"sourceType":"module"}