{"ast":null,"code":"import { ref, watch, onBeforeUnmount, unref } from \"vue\";\n\nconst useIntersectionObserver = (cb, options = {}, targetsList = ref([])) => {\n  const observer = ref();\n\n  const disconnectObserver = () => {\n    var _a;\n\n    (_a = observer.value) == null ? void 0 : _a.disconnect();\n  };\n\n  const observeTarget = target => {\n    var _a;\n\n    const disclosedTarget = unref(target);\n    disclosedTarget && ((_a = observer.value) == null ? void 0 : _a.observe(disclosedTarget));\n  };\n\n  const observeAll = targets => {\n    const disclosedTargets = unref(targets);\n    disclosedTargets.forEach(observeTarget);\n  };\n\n  const initObserver = () => {\n    observer.value = new IntersectionObserver(cb, unref(options));\n  };\n\n  watch([targetsList, options], ([newList, newOptions], [oldList, oldOptions]) => {\n    disconnectObserver();\n\n    if (newOptions !== oldOptions) {\n      if (newList.length) {\n        initObserver();\n        observeAll(newList);\n      }\n\n      return;\n    }\n\n    if (newList.length) {\n      if (!observer.value) {\n        initObserver();\n      }\n\n      observeAll(newList);\n    }\n  }, {\n    immediate: true\n  });\n  onBeforeUnmount(disconnectObserver);\n  return observer;\n};\n\nexport { useIntersectionObserver as u };","map":{"version":3,"mappings":";;AAIa,gCAA0B,CACrCA,EADqC,EAErCC,UAA8C,EAFT,EAGrCC,cAAkCC,IAAI,EAAJ,CAHG,KAIlC;EACH,MAAMC,WAAWD,KAAjB;;EAEA,MAAME,qBAAqB,MAAM;;;IAC/B,eAASC,KAAT,wBAAgBC,UAAhB;EAA2B,CAD7B;;EAIM,sBAAiBC,MAAD,IAAyB;;;IACvC,wBAAkBC,MAAMD,MAAN,CAAlB;IACaE,mCAASJ,KAAT,wBAAgBK,OAAhB,CAAwBD,eAAxB;EAAuC,CAFtD;;EAKA,mBAAcE,OAAD,IAAsC;IACjD,yBAAmBH,MAAMG,OAAN,CAAnB;IACNC,iBAAiBC,OAAjB,CAAyBC,aAAzB;EAAsC,CAFlC;;EAKN,MAAMC,eAAe,MAAM;IACzBZ,SAASE,KAAT,GAAiB,IAAIW,oBAAJ,CAAyBjB,EAAzB,EAA6BS,MAAMR,OAAN,CAA7B,CAAjB;EAA4D,CAD9D;;EAIMiB,OAAChB,WAAD,EAAcD,OAAd,GAAwB,CAAC,CAACkB,OAAD,EAAUC,UAAV,CAAD,EAAwB,CAACC,OAAD,EAAUC,UAAV,CAAxB,KAAkD;IAC3DjB;;IAEnB,IAAIe,eAAeE,UAAnB,EAA+B;MAC7B,IAAIH,QAAQI,MAAZ,EAAoB;QACLP;QACbQ,WAAWL,OAAX;MACF;;MAEA;IACF;;IAEA,IAAIA,QAAQI,MAAZ,EAAoB;MACd,KAACnB,SAASE,KAAV,EAAiB;QACNU;MACf;;MAEAQ,WAAWL,OAAX;IACF;EAAA,CAlBI,EAmBH;IAAEM,WAAW;EAAb,CAnBG;EAqBNC,gBAAgBrB,kBAAhB;EAEO;AACT,CAjDa","names":["cb","options","targetsList","ref","observer","disconnectObserver","value","disconnect","target","unref","disclosedTarget","observe","targets","disclosedTargets","forEach","observeTarget","initObserver","IntersectionObserver","watch","newList","newOptions","oldList","oldOptions","length","observeAll","immediate","onBeforeUnmount"],"sources":["../../../../src/composables/useIntersectionObserver.ts"],"sourcesContent":["import { onBeforeUnmount, ref, Ref, unref, watch } from 'vue'\n\ntype MaybeRef<T> = T | Ref<T>\n\nexport const useIntersectionObserver = <T extends HTMLElement | undefined>(\n  cb: (entries: IntersectionObserverEntry[], observer: IntersectionObserver) => void,\n  options: MaybeRef<IntersectionObserverInit> = {},\n  targetsList: Ref<MaybeRef<T>[]> = ref([]),\n) => {\n  const observer = ref<IntersectionObserver>()\n\n  const disconnectObserver = () => {\n    observer.value?.disconnect()\n  }\n\n  const observeTarget = (target: MaybeRef<T>) => {\n    const disclosedTarget = unref(target)\n    disclosedTarget && observer.value?.observe(disclosedTarget)\n  }\n\n  const observeAll = (targets: MaybeRef<MaybeRef<T>[]>) => {\n    const disclosedTargets = unref(targets)\n    disclosedTargets.forEach(observeTarget)\n  }\n\n  const initObserver = () => {\n    observer.value = new IntersectionObserver(cb, unref(options))\n  }\n\n  watch([targetsList, options], ([newList, newOptions], [oldList, oldOptions]) => {\n    disconnectObserver()\n\n    if (newOptions !== oldOptions) {\n      if (newList.length) {\n        initObserver()\n        observeAll(newList)\n      }\n\n      return\n    }\n\n    if (newList.length) {\n      if (!observer.value) {\n        initObserver()\n      }\n\n      observeAll(newList)\n    }\n  }, { immediate: true })\n\n  onBeforeUnmount(disconnectObserver)\n\n  return observer\n}\n"]},"metadata":{},"sourceType":"module"}