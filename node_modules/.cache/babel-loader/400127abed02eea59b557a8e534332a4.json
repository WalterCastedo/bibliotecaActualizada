{"ast":null,"code":"const extractGlobalProperties = app => app.config.globalProperties;\n\nconst defineGlobalProperty = (app, key, v) => {\n  const globalProperties = extractGlobalProperties(app);\n  globalProperties[key] = v;\n};\n\nconst getGlobalProperty = (app, key) => {\n  return extractGlobalProperties(app)[key];\n};\n\nexport { defineGlobalProperty as d, getGlobalProperty as g };","map":{"version":3,"mappings":"AAGO,MAAMA,0BAA2BC,GAAD,IAA2BA,IAAIC,MAAJ,CAAWC,gBAAtE;;AAcA,MAAMC,uBAAuB,CAA4FH,GAA5F,EAAsGI,GAAtG,EAAgHC,CAAhH,KAA6H;EACzJ,yBAAmBN,wBAAwBC,GAAxB,CAAnB;EACNE,iBAAiBE,GAAjB,IAAwBC,CAAxB;AACF,CAHO;;AAMM,0BAAoB,CAA8CL,GAA9C,EAAqEI,GAArE,KAAkH;EAC1I,+BAAwBJ,GAAxB,EAA6BI,GAA7B;AACT,CAFa","names":["extractGlobalProperties","app","config","globalProperties","defineGlobalProperty","key","v"],"sources":["../../../../../../src/services/vue-plugin/utils/global-properties.ts"],"sourcesContent":["import { App, AppContext, ComponentCustomProperties } from 'vue'\n\n/** Type safe return app global properties for assign */\nexport const extractGlobalProperties = (app: App | AppContext) => app.config.globalProperties as ComponentCustomProperties\n\n/**\n * Type safe set vue global property\n * Declare type before use this method.\n * ```\ndeclare module 'vue' {\n  export interface ComponentCustomProperties {\n    $vaThing: ThingType\n  }\n}\n * ```\n * @example See `global-config` or `color-config` for example\n */\nexport const defineGlobalProperty = <Key extends keyof ComponentCustomProperties, Value extends ComponentCustomProperties[Key]>(app: App, key: Key, v: Value) => {\n  const globalProperties = extractGlobalProperties(app)\n  globalProperties[key] = v\n}\n\n/** Type safe return vue global property */\nexport const getGlobalProperty = <Key extends keyof ComponentCustomProperties>(app: App | AppContext, key: Key): ComponentCustomProperties[Key] => {\n  return extractGlobalProperties(app)[key]\n}\n"]},"metadata":{},"sourceType":"module"}