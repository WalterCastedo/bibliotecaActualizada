{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport const RUTA_SERVIDOR_ALUMNOS = process.env.VUE_APP_RUTA_API_ALUMNOS;\nexport const RUTA_SERVIDOR_LIBROS = process.env.VUE_APP_RUTA_API_LIBROS;\nexport default {\n  data() {\n    return {\n      colorBoton: \"#56CCFF\",\n      botonTexto: \"Solicitar material\",\n      desabilitado: false,\n      idAdmin: localStorage.getItem(\"id\"),\n      usuario: {\n        cod_alum: localStorage.getItem(\"cod_alum\"),\n        nombre: localStorage.getItem(\"nombre\"),\n        apellidoP: localStorage.getItem(\"ap_paterno\"),\n        apellidoM: localStorage.getItem(\"ap_materno\"),\n        ci_pasaporte: localStorage.getItem(\"ci_pasaporte\")\n      },\n      cod_alum: \"\",\n      nombre: \"\",\n      apellidoP: \"\",\n      apellidoM: \"\",\n      solicitudRealizada: false,\n      // Agregar esta línea\n      fechas: {\n        inicio: \"\",\n        fin: \"\"\n      },\n      telefono: null\n    };\n  },\n\n  props: {\n    material: {}\n  },\n  methods: {\n    deudas(codigoAlumno, material) {\n      fetch(RUTA_SERVIDOR_LIBROS + \"/prestamos/deuda/\" + codigoAlumno).then(respuesta => respuesta.json()).then(datosRespuesta => {\n        if (datosRespuesta != \"\") {\n          this.desabilitado = false;\n          this.botonTexto = \"Solicitar material\";\n          alert(\"El alumno tiene material pendiente de devolución\");\n        } else {\n          this.prestamo(material);\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n\n    prestamo(material) {\n      // ver si hay material disponible\n      fetch(RUTA_SERVIDOR_LIBROS + \"/materiales/\" + material).then(respuesta => respuesta.json()).then(datosRespuesta => {\n        if (datosRespuesta.copiasDisponibles > 0) {\n          axios.post(RUTA_SERVIDOR_LIBROS + \"/prestamos/\", {\n            idEmpleado: parseInt(localStorage.getItem(\"id\")),\n            codigoUsuario: localStorage.getItem(\"cod_alum\"),\n            idMaterial: material,\n            cantidad: 1,\n            fechaPrestamo: this.fechas.inicio,\n            fechaDevolucion: this.fechas.fin,\n            observacion: \"null\",\n            estado: 1,\n            activo: 1,\n            telefono: this.telefono,\n            idSubsede: localStorage.getItem(\"idSubsede\")\n          }).then(function (response) {\n            console.log(response);\n          }, this.botonTexto = \"Solicitud enviada\", this.colorBoton = \"#00D12F\", this.solicitudRealizada = true).catch(function (error) {\n            console.log(error);\n          });\n        } else {\n          alert(\"No hay copias disponibles\");\n        }\n      }).catch(console.log);\n    },\n\n    VerificarLogin(material) {\n      if (this.fechas.inicio.trim() === \"\" || this.fechas.fin.trim() === \"\" || this.telefono === \"\") {\n        alert(\"Por favor, complete todos los campos antes de solicitar el prestamo.\");\n        return;\n      }\n\n      fetch(RUTA_SERVIDOR_ALUMNOS + \"/alumno/\" + localStorage.getItem(\"cod_alum\") + \"/\" + localStorage.getItem(\"ci_pasaporte\")).then(respuesta => respuesta.json()).then(datosRespuesta => {\n        if (datosRespuesta != \"\") {\n          var fechaActual = new Date();\n          fechaActual.setUTCHours(0, 0, 0, 0); // Establece la hora a medianoche en UTC\n\n          console.log(fechaActual);\n          var fechaInicio = new Date(this.fechas.inicio);\n          fechaInicio.setUTCHours(0, 0, 0, 0); // Establece la hora a medianoche en UTC\n\n          console.log(fechaInicio);\n          var fechaFin = new Date(this.fechas.fin);\n          fechaFin.setUTCHours(0, 0, 0, 0); // Establece la hora a medianoche en UTC\n\n          var tiempo = (fechaFin - fechaInicio) / (1000 * 60 * 60 * 24);\n\n          if (fechaInicio >= fechaActual) {\n            if (tiempo < 15 && tiempo >= 0) {\n              this.desabilitado = true;\n              this.botonTexto = \"Solicitando material\";\n              this.deudas(localStorage.getItem(\"cod_alum\"), material);\n            } else {\n              alert(\"El tiempo del préstamo debe ser entre 1 y 15 días\");\n            }\n          } else {\n            alert(\"La fecha debe ser mayor o igual a la fecha actual\");\n          }\n        }\n      }).catch(function () {\n        localStorage.setItem(\"acceso\", 0);\n        localStorage.setItem(\"cod_alum\", \"\");\n        localStorage.setItem(\"ci_pasaporte\", \"\");\n        localStorage.setItem(\"nombre\", \"\");\n        localStorage.setItem(\"ap_paterno\", \"\");\n        localStorage.setItem(\"ap_materno\", \"\");\n        localStorage.setItem(\"sede\", \"\");\n        localStorage.setItem(\"id\", 0);\n        location.reload();\n        this.$router.push(\"/\");\n      });\n    },\n\n    VerificarAlumno(material) {\n      this.elemento = document.getElementById(\"solicitar\");\n      fetch(RUTA_SERVIDOR_ALUMNOS + \"/alumno/\" + this.cod_alum).then(respuesta => respuesta.json()).then(datosRespuesta => {\n        if (datosRespuesta != \"\") {\n          var fechaActual = new Date();\n          fechaActual.setUTCHours(0, 0, 0, 0); // Establece la hora a medianoche en UTC\n\n          console.log(fechaActual);\n          var fechaInicio = new Date(this.fechas.inicio);\n          fechaInicio.setUTCHours(0, 0, 0, 0); // Establece la hora a medianoche en UTC\n\n          console.log(fechaInicio);\n          var fechaFin = new Date(this.fechas.fin);\n          fechaFin.setUTCHours(0, 0, 0, 0); // Establece la hora a medianoche en UTC\n\n          var tiempo = (fechaFin - fechaInicio) / (1000 * 60 * 60 * 24);\n\n          if (fechaInicio >= fechaActual) {\n            if (tiempo < 15 && tiempo >= 0) {\n              this.desabilitado = true;\n              this.botonTexto = \"Solicitando material\";\n              this.deudas(localStorage.getItem(\"cod_alum\"), material);\n            } else {\n              alert(\"El tiempo del préstamo debe ser entre 1 y 15 días\");\n            }\n          } else {\n            alert(\"La fecha debe ser mayor o igual a la fecha actual\");\n          }\n        }\n      }).catch(function () {\n        alert(\"Existen datos incorrectos\");\n      });\n    },\n\n    buscarAlumno() {\n      fetch(RUTA_SERVIDOR_ALUMNOS + \"/alumno/\" + this.cod_alum).then(respuesta => respuesta.json()).then(datosRespuesta => {\n        this.nombre = datosRespuesta.nombre;\n        this.apellidop = datosRespuesta.ap_paterno;\n        this.apellidoM = datosRespuesta.ap_materno;\n        localStorage.setItem(\"cod_alum\", datosRespuesta.cod_alum);\n      }).catch(this.nombre = \"Usuario no encontrado\", this.apellidop = \"\", this.apellidoM = \"\", localStorage.setItem(\"cod_alum\", \"\")).catch(console.clear);\n    }\n\n  }\n};","map":{"version":3,"mappings":";AAkLA;AACA;AACA;AAEA;EACAA;IACA;MACAC,qBADA;MAEAC,gCAFA;MAGAC,mBAHA;MAKAC,mCALA;MAMAC;QACAC,0CADA;QAEAC,sCAFA;QAGAC,6CAHA;QAIAC,6CAJA;QAKAC;MALA,CANA;MAcAJ,YAdA;MAeAC,UAfA;MAgBAC,aAhBA;MAiBAC,aAjBA;MAkBAE,yBAlBA;MAkBA;MACAC;QACAC,UADA;QAEAC;MAFA,CAnBA;MAuBAC;IAvBA;EAyBA,CA3BA;;EA6BAC;IACAC;EADA,CA7BA;EAiCAC;IAEAC;MACAC,iEACAC,IADA,CACAC,6BADA,EAEAD,IAFA,CAEAE;QACA;UACA;UACA;UACAC;QAEA,CALA,MAMA;UACA;QACA;MACA,CAZA,EAcAC,KAdA,CAcA;QACAC;MACA,CAhBA;IAiBA,CApBA;;IAwBAC;MAEA;MACAP,wDACAC,IADA,CACAC,6BADA,EAEAD,IAFA,CAEAE;QACA;UACAK,MACAC,IADA,CACAC,oCADA,EACA;YACAC,gDADA;YAEAC,+CAFA;YAGAC,oBAHA;YAIAC,WAJA;YAKAC,iCALA;YAMAC,gCANA;YAOAC,mBAPA;YAQAC,SARA;YASAC,SATA;YAUAxB,uBAVA;YAWAyB;UAXA,CADA,EAcAnB,IAdA,CAeA;YACAK;UACA,CAjBA,EAkBA,qCAlBA,EAmBA,2BAnBA,EAoBA,8BApBA,EAuBAD,KAvBA,CAuBA;YACAC;UACA,CAzBA;QA0BA,CA3BA,MA2BA;UACAF;QACA;MACA,CAjCA,EAkCAC,KAlCA,CAkCAC,WAlCA;IAmCA,CA9DA;;IAgEAe;MACA,IACA,oCACA,6BADA,IAEA,oBAHA,EAIA;QACAjB;QACA;MACA;;MACAJ,MACAsB,wBACA,UADA,GAEAC,gCAFA,GAGA,GAHA,GAIAA,oCALA,EAOAtB,IAPA,CAOAC,6BAPA,EAQAD,IARA,CAQAE;QACA;UACA;UACAqB,oCAFA,CAEA;;UACAlB;UAEA;UACAmB,oCANA,CAMA;;UACAnB;UAEA;UACAoB,iCAVA,CAUA;;UAEA;;UACA;YACA;cACA;cACA;cACA;YACA,CAJA,MAIA;cACAtB;YACA;UACA,CARA,MAQA;YACAA;UACA;QACA;MACA,CAlCA,EAmCAC,KAnCA,CAmCA;QACAkB;QACAA;QACAA;QACAA;QACAA;QACAA;QACAA;QACAA;QACAI;QACA;MACA,CA9CA;IA+CA,CAxHA;;IA0HAC;MACA;MACA5B,0DACAC,IADA,CACAC,6BADA,EAEAD,IAFA,CAEAE;QACA;UACA;UACAqB,oCAFA,CAEA;;UACAlB;UAEA;UACAmB,oCANA,CAMA;;UACAnB;UAEA;UACAoB,iCAVA,CAUA;;UAEA;;UACA;YACA;cACA;cACA;cACA;YACA,CAJA,MAIA;cACAtB;YACA;UACA,CARA,MAQA;YACAA;UACA;QACA;MACA,CA5BA,EA6BAC,KA7BA,CA6BA;QACAD;MACA,CA/BA;IAgCA,CA5JA;;IA8JAyB;MACA7B,0DACAC,IADA,CACAC,6BADA,EAEAD,IAFA,CAEAE;QACA;QACA;QACA;QACAoB;MACA,CAPA,EAQAlB,KARA,CASA,qCATA,EAUA,mBAVA,EAWA,mBAXA,EAYAkB,oCAZA,EAcAlB,KAdA,CAcAC,aAdA;IAeA;;EA9KA;AAjCA","names":["data","colorBoton","botonTexto","desabilitado","idAdmin","usuario","cod_alum","nombre","apellidoP","apellidoM","ci_pasaporte","solicitudRealizada","fechas","inicio","fin","telefono","props","material","methods","deudas","fetch","then","respuesta","datosRespuesta","alert","catch","console","prestamo","axios","post","RUTA_SERVIDOR_LIBROS","idEmpleado","codigoUsuario","idMaterial","cantidad","fechaPrestamo","fechaDevolucion","observacion","estado","activo","idSubsede","VerificarLogin","RUTA_SERVIDOR_ALUMNOS","localStorage","fechaActual","fechaInicio","fechaFin","location","VerificarAlumno","buscarAlumno"],"sourceRoot":"src/components","sources":["modalPrestamo.vue"],"sourcesContent":["<template>\n  \n  <div class=\"row modalCompleto\">\n    \n    <div v-if=\"solicitudRealizada\" class=\"alert alert-success\" align=\"center\">\n      Solicitud realizada con éxito.\n    </div>\n    <div class=\"col-md-6\">\n      <div>\n        <label\n          >Material solicitado: {{ material.nombreMaterial }}. <br />\n          Tipo: {{ material.tipo }}. <br />\n          Autor: {{ material.autor }}. <br />Editorial:\n          {{ material.editorial }}.<br />\n          Edición: {{ material.edicion }}</label\n        >\n      </div>\n\n      <hr />\n      <div class=\"form-group\">\n        <div v-if=\"idAdmin == 0 || idAdmin == null || idAdmin == undefined\">\n          <div>\n            <label for=\"\"\n              >Nombre Completo: {{ usuario.nombre }} {{ usuario.apellidoP }}\n              {{ usuario.apellidoM }}</label\n            >\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <label for=\"\">Codigo de alumno</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                name=\"codigoUsuario\"\n                id=\"codigoUsuario\"\n                v-bind:value=\"usuario.cod_alum\"\n                aria-describedby=\"helpId\"\n                placeholder=\"\"\n                readonly\n              />\n            </div>\n            <div class=\"col-6\">\n              <label for=\"\">Ci/Pasaporte</label>\n              <input\n                type=\"password\"\n                class=\"form-control\"\n                name=\"ci\"\n                id=\"ci\"\n                v-bind:value=\"usuario.ci_pasaporte\"\n                aria-describedby=\"helpId\"\n                placeholder=\"\"\n                readonly\n              />\n            </div>\n          </div>\n          <br />\n\n          <div>\n            <label for=\"\">Cantidad</label>\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              name=\"cantidad\"\n              id=\"cantidad\"\n              disabled=\"true\"\n              v-bind:value=\"1\"\n              aria-describedby=\"helpId\"\n              placeholder=\"\"\n            />\n          </div>\n        </div>\n        <div v-else>\n          <div>\n            <label for=\"\"\n              >Nombre Completo: {{ nombre }} {{ apellidoP }}\n              {{ apellidoM }}</label\n            >\n          </div>\n          <div class=\"row\">\n            <div class=\"col\">\n              <label for=\"\">Codigo de alumno</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                name=\"codigoUsuario1\"\n                id=\"codigoUsuario1\"\n                v-on:keyup=\"buscarAlumno()\"\n                v-model=\"cod_alum\"\n                aria-describedby=\"helpId\"\n                placeholder=\"\"\n              />\n            </div>\n          </div>\n          <br />\n\n          <div>\n            <label for=\"\">Cantidad</label>\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              name=\"cantidad1\"\n              id=\"cantidad1\"\n              disabled=\"true\"\n              v-bind:value=\"1\"\n              aria-describedby=\"helpId\"\n              placeholder=\"\"\n            />\n          </div>\n        </div>\n\n        <div>\n          <label for=\"\">Fecha para recoger el material</label>\n          <input\n            type=\"date\"\n            v-model=\"fechas.inicio\"\n            class=\"form-control\"\n            aria-describedby=\"helpId\"\n            placeholder=\"\"\n            required\n          />\n        </div>\n        <div>\n          <label for=\"\">Fecha para devolver el material</label>\n          <input\n            type=\"date\"\n            v-model=\"fechas.fin\"\n            class=\"form-control\"\n            aria-describedby=\"helpId\"\n            placeholder=\"\"\n            required\n          />\n        </div>\n        <div>\n          <label for=\"\">Numero de whatsapp</label>\n          <br />\n          <input\n            class=\"col-12\"\n            type=\"number\"\n            aria-describedby=\"helpId\"\n            placeholder=\"Notificara la confirmacion de la solicitud\"\n            v-model=\"telefono\"\n          />\n        </div>\n        <br />\n      </div>\n      <div v-if=\"idAdmin > 0\">\n        <button\n          class=\"col-12 btn align-items-center btn-info \"\n          @click=\"VerificarAlumno(material.id)\"\n          id=\"solicitar\"\n          :disabled=\"desabilitado\"\n          v-bind:style=\"{ backgroundColor: colorBoton }\"\n        >\n          {{ botonTexto }}\n        </button>\n      </div>\n      <div v-else>\n        <button\n          class=\"col-12 btn align-items-center btn-info\"\n          @click=\"VerificarLogin(material.id)\"\n          id=\"solicitar\"\n          :disabled=\"desabilitado\"\n          v-bind:style=\"{ backgroundColor: colorBoton }\"\n        >\n          {{ botonTexto }}\n        </button>\n      </div>\n      \n<br>\n    </div>\n\n\n    <img class=\"col-md-6\" v-bind:src=\"'' + material.urlPortada\" />\n    \n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport const RUTA_SERVIDOR_ALUMNOS = process.env.VUE_APP_RUTA_API_ALUMNOS;\nexport const RUTA_SERVIDOR_LIBROS = process.env.VUE_APP_RUTA_API_LIBROS;\n\nexport default {\n  data() {\n    return {\n      colorBoton: \"#56CCFF\",\n      botonTexto: \"Solicitar material\",\n      desabilitado: false,\n\n      idAdmin: localStorage.getItem(\"id\"),\n      usuario: {\n        cod_alum: localStorage.getItem(\"cod_alum\"),\n        nombre: localStorage.getItem(\"nombre\"),\n        apellidoP: localStorage.getItem(\"ap_paterno\"),\n        apellidoM: localStorage.getItem(\"ap_materno\"),\n        ci_pasaporte: localStorage.getItem(\"ci_pasaporte\"),\n      },\n\n      cod_alum: \"\",\n      nombre: \"\",\n      apellidoP: \"\",\n      apellidoM: \"\",\n      solicitudRealizada: false, // Agregar esta línea\n      fechas: {\n        inicio: \"\",\n        fin: \"\",\n      },\n      telefono: null,\n    };\n  },\n\n  props: {\n    material: {},\n  },\n\n  methods: {\n\n    deudas(codigoAlumno,material){\n      fetch(RUTA_SERVIDOR_LIBROS + \"/prestamos/deuda/\"+ codigoAlumno) \n        .then((respuesta) => respuesta.json())\n        .then((datosRespuesta) => {\n          if(datosRespuesta != \"\"){\n            this.desabilitado = false;\n            this.botonTexto = \"Solicitar material\";\n            alert(\"El alumno tiene material pendiente de devolución\");\n           \n          }\n          else{\n            this.prestamo(material)\n          }\n        })\n\n              .catch(function (error) {\n                console.log(error);\n              });\n    },\n    \n\n\n    prestamo(material) {\n\n      // ver si hay material disponible\n      fetch(RUTA_SERVIDOR_LIBROS + \"/materiales/\" + material)\n        .then((respuesta) => respuesta.json())\n        .then((datosRespuesta) => {\n          if (datosRespuesta.copiasDisponibles > 0) {\n            axios\n              .post(RUTA_SERVIDOR_LIBROS + \"/prestamos/\", {\n                idEmpleado: parseInt(localStorage.getItem(\"id\")),\n                codigoUsuario: localStorage.getItem(\"cod_alum\"),\n                idMaterial: material,\n                cantidad: 1,\n                fechaPrestamo: this.fechas.inicio,\n                fechaDevolucion: this.fechas.fin,\n                observacion: \"null\",\n                estado: 1,\n                activo: 1,\n                telefono: this.telefono,\n                idSubsede: localStorage.getItem(\"idSubsede\"),\n              })\n              .then(\n                function (response) {\n                  console.log(response);\n                },\n                (this.botonTexto = \"Solicitud enviada\"),\n                (this.colorBoton = \"#00D12F\"),\n                (this.solicitudRealizada = true)\n              )\n\n              .catch(function (error) {\n                console.log(error);\n              });\n          } else {\n            alert(\"No hay copias disponibles\");\n          }\n        })\n        .catch(console.log);\n    },\n\n    VerificarLogin(material) {\n      if (\n    this.fechas.inicio.trim() === \"\" ||\n    this.fechas.fin.trim() === \"\" || \n    this.telefono === \"\"\n  ) {\n    alert(\"Por favor, complete todos los campos antes de solicitar el prestamo.\");\n    return;\n  }\n      fetch(\n        RUTA_SERVIDOR_ALUMNOS +\n          \"/alumno/\" +\n          localStorage.getItem(\"cod_alum\") +\n          \"/\" +\n          localStorage.getItem(\"ci_pasaporte\")\n      )\n        .then((respuesta) => respuesta.json())\n        .then((datosRespuesta) => {\n          if (datosRespuesta != \"\") {\n            var fechaActual = new Date();\n            fechaActual.setUTCHours(0, 0, 0, 0); // Establece la hora a medianoche en UTC\n            console.log(fechaActual);\n\n            var fechaInicio = new Date(this.fechas.inicio);\n            fechaInicio.setUTCHours(0, 0, 0, 0); // Establece la hora a medianoche en UTC\n            console.log(fechaInicio);\n\n            var fechaFin = new Date(this.fechas.fin);\n            fechaFin.setUTCHours(0, 0, 0, 0); // Establece la hora a medianoche en UTC\n\n            var tiempo = (fechaFin - fechaInicio) / (1000 * 60 * 60 * 24);\n            if (fechaInicio >= fechaActual) {\n              if (tiempo < 15 && tiempo >= 0) {\n                this.desabilitado = true;\n                this.botonTexto = \"Solicitando material\";\n                this.deudas(localStorage.getItem(\"cod_alum\"),material);\n              } else {\n                alert(\"El tiempo del préstamo debe ser entre 1 y 15 días\");\n              }\n            } else {\n              alert(\"La fecha debe ser mayor o igual a la fecha actual\");\n            }\n          }\n        })\n        .catch(function () {\n          localStorage.setItem(\"acceso\", 0);\n          localStorage.setItem(\"cod_alum\", \"\");\n          localStorage.setItem(\"ci_pasaporte\", \"\");\n          localStorage.setItem(\"nombre\", \"\");\n          localStorage.setItem(\"ap_paterno\", \"\");\n          localStorage.setItem(\"ap_materno\", \"\");\n          localStorage.setItem(\"sede\", \"\");\n          localStorage.setItem(\"id\", 0);\n          location.reload();\n          this.$router.push(\"/\");\n        });\n    },\n\n    VerificarAlumno(material) {\n      this.elemento = document.getElementById(\"solicitar\");\n      fetch(RUTA_SERVIDOR_ALUMNOS + \"/alumno/\" + this.cod_alum)\n        .then((respuesta) => respuesta.json())\n        .then((datosRespuesta) => {\n          if (datosRespuesta != \"\") {\n            var fechaActual = new Date();\n            fechaActual.setUTCHours(0, 0, 0, 0); // Establece la hora a medianoche en UTC\n            console.log(fechaActual);\n\n            var fechaInicio = new Date(this.fechas.inicio);\n            fechaInicio.setUTCHours(0, 0, 0, 0); // Establece la hora a medianoche en UTC\n            console.log(fechaInicio);\n\n            var fechaFin = new Date(this.fechas.fin);\n            fechaFin.setUTCHours(0, 0, 0, 0); // Establece la hora a medianoche en UTC\n\n            var tiempo = (fechaFin - fechaInicio) / (1000 * 60 * 60 * 24);\n            if (fechaInicio >= fechaActual) {\n              if (tiempo < 15 && tiempo >= 0) {\n                this.desabilitado = true;\n                this.botonTexto = \"Solicitando material\";\n                this.deudas(localStorage.getItem(\"cod_alum\"),material);\n              } else {\n                alert(\"El tiempo del préstamo debe ser entre 1 y 15 días\");\n              }\n            } else {\n              alert(\"La fecha debe ser mayor o igual a la fecha actual\");\n            }\n          }\n        })\n        .catch(function () {\n          alert(\"Existen datos incorrectos\");\n        });\n    },\n\n    buscarAlumno() {\n      fetch(RUTA_SERVIDOR_ALUMNOS + \"/alumno/\" + this.cod_alum)\n        .then((respuesta) => respuesta.json())\n        .then((datosRespuesta) => {\n          this.nombre = datosRespuesta.nombre;\n          this.apellidop = datosRespuesta.ap_paterno;\n          this.apellidoM = datosRespuesta.ap_materno;\n          localStorage.setItem(\"cod_alum\", datosRespuesta.cod_alum);\n        })\n        .catch(\n          (this.nombre = \"Usuario no encontrado\"),\n          (this.apellidop = \"\"),\n          (this.apellidoM = \"\"),\n          localStorage.setItem(\"cod_alum\", \"\")\n        )\n        .catch(console.clear);\n    },\n  },\n};\n</script>\n\n<style></style>\n"]},"metadata":{},"sourceType":"module"}