{"ast":null,"code":"import { defineComponent, computed, resolveComponent, openBlock, createBlock, normalizeClass, withCtx, createElementBlock, Fragment, renderList, createCommentVNode } from \"vue\";\nimport { b as VaList } from \"../../va-list/index.js\";\nimport { V as VaFileUploadListItem } from \"../VaFileUploadListItem/index.js\";\nimport { V as VaFileUploadGalleryItem } from \"../VaFileUploadGalleryItem/index.js\";\nimport { V as VaFileUploadSingleItem } from \"../VaFileUploadSingleItem/index.js\";\nimport { _ as _export_sfc } from \"../../../../plugin-vue_export-helper.js\";\n\nvar VaFileUploadList_vue_vue_type_style_index_0_lang = /* @__PURE__ */(() => \".va-file-upload-list{display:flex;flex-wrap:wrap;padding:0 0 1.5rem}.va-file-upload-list--gallery{padding-bottom:.5rem}\\n\")();\n\nconst _sfc_main = defineComponent({\n  name: \"VaFileUploadList\",\n  components: {\n    VaList,\n    VaFileUploadListItem,\n    VaFileUploadGalleryItem,\n    VaFileUploadSingleItem\n  },\n  emits: [\"remove\", \"removeSingle\"],\n  props: {\n    type: {\n      type: String,\n      default: \"\"\n    },\n    files: {\n      type: Array,\n      default: null\n    },\n    color: {\n      type: String,\n      default: \"success\"\n    }\n  },\n\n  setup(props) {\n    const filesList = computed(() => props.files.map(convertFile));\n\n    const convertFile = file => ({\n      name: file.name || file.url || \"\",\n      size: formatSize(file.size),\n      date: formatDate(new Date()),\n      image: file\n    });\n\n    const formatSize = bytes => {\n      if (bytes === 0) {\n        return \"0 Bytes\";\n      }\n\n      if (!bytes) {\n        return \"\";\n      }\n\n      const k = 1024;\n      const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\n    };\n\n    const formatDate = (date = new Date()) => {\n      return date.toLocaleDateString(\"en-US\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        month: \"short\",\n        day: \"numeric\",\n        year: \"numeric\"\n      });\n    };\n\n    return {\n      filesList\n    };\n  }\n\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_va_file_upload_list_item = resolveComponent(\"va-file-upload-list-item\");\n\n  const _component_va_file_upload_gallery_item = resolveComponent(\"va-file-upload-gallery-item\");\n\n  const _component_va_file_upload_single_item = resolveComponent(\"va-file-upload-single-item\");\n\n  const _component_va_list = resolveComponent(\"va-list\");\n\n  return openBlock(), createBlock(_component_va_list, {\n    class: normalizeClass([\"va-file-upload-list\", `va-file-upload-list--${_ctx.type}`]),\n    role: _ctx.type !== \"single\" ? \"list\" : void 0\n  }, {\n    default: withCtx(() => [_ctx.type === \"list\" ? (openBlock(true), createElementBlock(Fragment, {\n      key: 0\n    }, renderList(_ctx.filesList, (file, index) => {\n      return openBlock(), createBlock(_component_va_file_upload_list_item, {\n        key: file.name,\n        file,\n        color: _ctx.color,\n        role: \"listitem\",\n        onRemove: $event => _ctx.$emit(\"remove\", index)\n      }, null, 8, [\"file\", \"color\", \"onRemove\"]);\n    }), 128)) : createCommentVNode(\"\", true), _ctx.type === \"gallery\" ? (openBlock(true), createElementBlock(Fragment, {\n      key: 1\n    }, renderList(_ctx.filesList, (file, index) => {\n      return openBlock(), createBlock(_component_va_file_upload_gallery_item, {\n        key: file.name,\n        file,\n        color: _ctx.color,\n        role: \"listitem\",\n        onRemove: $event => _ctx.$emit(\"remove\", index)\n      }, null, 8, [\"file\", \"color\", \"onRemove\"]);\n    }), 128)) : createCommentVNode(\"\", true), _ctx.type === \"single\" && _ctx.filesList.length ? (openBlock(), createBlock(_component_va_file_upload_single_item, {\n      key: 2,\n      file: _ctx.filesList[_ctx.filesList.length - 1],\n      onRemove: _cache[0] || (_cache[0] = $event => _ctx.$emit(\"removeSingle\"))\n    }, null, 8, [\"file\"])) : createCommentVNode(\"\", true)]),\n    _: 1\n  }, 8, [\"role\", \"class\"]);\n}\n\nvar _VaFileUploadList = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { _VaFileUploadList as _ };\nimport './VaFileUploadList.css';","map":{"version":3,"mappings":";;;;;;;;;AA6CA,MAAKA,YAAaC,gBAAa;EAC7BC,MAAM,kBADuB;EAE7BC,YAAY;IACVC,MADU;IAEVC,oBAFU;IAGVC,uBAHU;IAIVC;EAJU,CAFiB;EAQ7BC,OAAO,CAAC,QAAD,EAAW,cAAX,CARsB;EAS7BC,OAAO;IACLC,MAAM;MAAEA,MAAMC,MAAR;MAAgBC,SAAS;IAAzB,CADD;IAELC,OAAO;MAAEH,MAAMI,KAAR;MAAqCF,SAAS;IAA9C,CAFF;IAGLG,OAAO;MAAEL,MAAMC,MAAR;MAAgBC,SAAS;IAAzB;EAHF,CATsB;;EAc7BI,MAAOP,KAAP,EAAc;IACZ,MAAMQ,YAAYC,SAAS,MAAMT,MAAMI,KAAN,CAAYM,GAAZ,CAAgBC,WAAhB,CAAf,CAAlB;;IAEM,oBAAeC,IAAD,KAAkC;MACpDnB,MAAMmB,KAAKnB,IAAL,IAAamB,KAAKC,GAAlB,IAAyB,EADqB;MAEpDC,MAAMC,WAAWH,KAAKE,IAAhB,CAF8C;MAGpDE,MAAMC,WAAW,IAAIC,IAAJ,EAAX,CAH8C;MAIpDC,OAAOP;IAJ6C,CAAlC,CAAd;;IAOA,mBAAcQ,KAAD,IAAoB;MACrC,IAAIA,UAAU,CAAd,EAAiB;QAAS;MAAU;;MACpC,IAAI,CAACA,KAAL,EAAY;QAAS;MAAG;;MAExB,MAAMC,IAAI,IAAV;MACM,cAAQ,CAAC,OAAD,EAAU,IAAV,EAAgB,IAAhB,EAAsB,IAAtB,EAA4B,IAA5B,EAAkC,IAAlC,EAAwC,IAAxC,EAA8C,IAA9C,EAAoD,IAApD,CAAR;MACA,UAAIC,KAAKC,KAAL,CAAWD,KAAKE,GAAL,CAASJ,KAAT,IAAkBE,KAAKE,GAAL,CAASH,CAAT,CAA7B,CAAJ;MAEN,OAAOI,WAAY,SAAQH,KAAKI,GAAL,CAASL,CAAT,EAAYM,CAAZ,CAAR,EAAwBC,OAAxB,CAAgC,CAAhC,CAAZ,IAAkD,GAAlD,GAAwDC,MAAMF,CAAN,CAA/D;IAAqE,CARjE;;IAWN,MAAMV,aAAa,CAACD,OAAO,IAAIE,IAAJ,EAAR,KAAuB;MACjC,YAAKY,kBAAL,CAAwB,OAAxB,EAAiC;QACtCC,MAAM,SADgC;QAEtCC,QAAQ,SAF8B;QAGtCC,OAAO,OAH+B;QAItCC,KAAK,SAJiC;QAKtCC,MAAM;MALgC,CAAjC;IAMN,CAPH;;IAUO;MACL3B;IADK;EAGT;;AAhD6B,CAAb,CAAlB;;;;;;;;;;;sBA5CE4B,YA+BUC,kBA/BVD,EA+BU;IA9BRE,OAAKC,gBAAC,qBAAD,EAAsB,wBAEKC,KAAIvC,MAF/B,EA8BG;IA7BPwC,MAAMD,cAAI,QAAJ,GAA6B,MAA7B,GAA6B;EA6B5B,CA/BVJ,EAEsC;IAAAjC,iBAGpC,MASW,CATKqC,cAAI,MAAJ,IACdE,oCAOEC,QAPFC,EAOED;MAAAA;IAAAA,CAPFC,EAOED,WANwBH,KAAShC,SAMjCmC,EANiC,CAAzB/B,IAAyB,EAAnBiC,KAAmB,KAAd;0BADrBT,YAOEU,mCAPFV,EAOE;QALCW,KAAKnC,KAAKnB,IAKX;QAJCmB,IAID;QAHCN,OAAOkC,UAGR;QAFAC,MAAK,UAEL;QADCO,UAAMC,UAAET,KAAKU,KAAL,CAAK,QAAL,EAAgBL,KAAhB;MACT,CAPFT,EAMgC,IANhCA,EAMgC,CANhCA,EAMgC,6BANhCA;IAMgC,CAC9BO,CAPFC,EAMgC,GANhCA,CADc,IAOkBO,4BAEvB,EACKX,cAAI,SAAJ,IAAIY,iBAClBR,mBAOED,QAPFC,EAOE;MAAAG;IAAA,CAPFH,EAOES,WANwBb,KAAShC,SAMjC6C,EANiC,CAAzBzC,IAAyB,EAAnBiC,KAAmB,KAAd;0BADrBT,YAOEkB,sCAPFlB,EAOE;QALCW,KAAKnC,KAAKnB,IAKX;QAJCmB,IAID;QAHCN,OAAOkC,UAGR;QAFAC,MAAK,UAEL;QADCO,UAAMC,UAAET,KAAKU,KAAL,CAAK,QAAL,EAAgBL,KAAhB;MACT,CAPFT,EAMgC,IANhCA,EAMgC,CANhCA,EAMgC,6BANhCA;IAMgC,CAC9BiB,CAPFT,EAMgC,GANhCA,CADc,IAOkBO,4BARvB,EAWKX,KAAIvC,IAAJ,KAAI,QAAJ,IAAqBuC,KAAUhC,SAAV,CAAU+C,MAA/B,IAA+Bb,aAC7CN,YAGEoB,qCAHFpB,EAGE;MAAAW;MAFCnC,MAAM4B,eAAUA,eAAUe,MAAV,GAAgB,CAA1B,CAEP;MADCP,UAAMS,oCAAEjB,KAAKU,KAAL,CAAK,cAAL,CAAF;IACP,CAHFd,EAEgB,IAFhBA,EAEgB,CAFhBA,EAEgB,QAFhBA,CADc,IAGEsB,4BAdP,CAZyB;;EAAA,CAFtCtB","names":["_sfc_main","defineComponent","name","components","VaList","VaFileUploadListItem","VaFileUploadGalleryItem","VaFileUploadSingleItem","emits","props","type","String","default","files","Array","color","setup","filesList","computed","map","convertFile","file","url","size","formatSize","date","formatDate","Date","image","bytes","k","Math","floor","log","parseFloat","pow","i","toFixed","sizes","toLocaleDateString","hour","minute","month","day","year","_createBlock","_component_va_list","class","_normalizeClass","_ctx","role","_openBlock","_Fragment","_createElementBlock","index","_component_va_file_upload_list_item","key","onRemove","$event","$emit","createCommentVNode","openBlock","_renderList","_component_va_file_upload_gallery_item","length","_component_va_file_upload_single_item","_cache","_createCommentVNode"],"sources":["../../../../../../src/components/va-file-upload/VaFileUploadList/VaFileUploadList.vue"],"sourcesContent":["<template>\n  <va-list\n    class=\"va-file-upload-list\"\n    :role=\"type !== 'single' ? 'list' : undefined\"\n    :class=\"`va-file-upload-list--${type}`\"\n  >\n    <template v-if=\"type === 'list'\">\n      <va-file-upload-list-item\n        v-for=\"(file, index) in filesList\"\n        :key=\"file.name\"\n        :file=\"file\"\n        :color=\"color\"\n        role=\"listitem\"\n        @remove=\"$emit('remove', index)\"\n      />\n    </template>\n    <template v-if=\"type === 'gallery'\">\n      <va-file-upload-gallery-item\n        v-for=\"(file, index) in filesList\"\n        :key=\"file.name\"\n        :file=\"file\"\n        :color=\"color\"\n        role=\"listitem\"\n        @remove=\"$emit('remove', index)\"\n      />\n    </template>\n    <template v-if=\"type === 'single' && filesList.length\">\n      <va-file-upload-single-item\n        :file=\"filesList[filesList.length - 1]\"\n        @remove=\"$emit('removeSingle')\"\n      />\n    </template>\n  </va-list>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed } from 'vue'\n\nimport { VaList } from '../../index'\nimport { VaFileUploadListItem } from '../VaFileUploadListItem'\nimport { VaFileUploadGalleryItem } from '../VaFileUploadGalleryItem'\nimport { VaFileUploadSingleItem } from '../VaFileUploadSingleItem'\n\nimport type { VaFile, ConvertedFile } from '../types'\n\nexport default defineComponent({\n  name: 'VaFileUploadList',\n  components: {\n    VaList,\n    VaFileUploadListItem,\n    VaFileUploadGalleryItem,\n    VaFileUploadSingleItem,\n  },\n  emits: ['remove', 'removeSingle'],\n  props: {\n    type: { type: String, default: '' },\n    files: { type: Array as PropType<VaFile[]>, default: null },\n    color: { type: String, default: 'success' },\n  },\n  setup (props) {\n    const filesList = computed(() => props.files.map(convertFile))\n\n    const convertFile = (file: VaFile): ConvertedFile => ({\n      name: file.name || file.url || '',\n      size: formatSize(file.size),\n      date: formatDate(new Date()),\n      image: file,\n    })\n\n    const formatSize = (bytes?: number) => {\n      if (bytes === 0) { return '0 Bytes' }\n      if (!bytes) { return '' }\n\n      const k = 1024\n      const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n      const i = Math.floor(Math.log(bytes) / Math.log(k))\n\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n    }\n\n    const formatDate = (date = new Date()) => {\n      return date.toLocaleDateString('en-US', {\n        hour: '2-digit',\n        minute: '2-digit',\n        month: 'short',\n        day: 'numeric',\n        year: 'numeric',\n      })\n    }\n\n    return {\n      filesList,\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n.va-file-upload-list {\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0 0 1.5rem;\n\n  &--gallery {\n    padding-bottom: 0.5rem;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}