{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Bar } from 'vue-chartjs';\nimport { Chart as ChartJS, Title, ArcElement, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\nimport { Doughnut } from 'vue-chartjs';\nChartJS.register(Title, ArcElement, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\nexport const RUTA_SERVIDOR_ALUMNOS = process.env.VUE_APP_RUTA_API_ALUMNOS;\nexport const RUTA_SERVIDOR_LIBROS = process.env.VUE_APP_RUTA_API_LIBROS;\nexport default {\n  name: \"ListarEstadisticas\",\n  components: {\n    Bar,\n    Doughnut // modalPrestamo,\n    // Loading\n    // CrearLibro,\n    // Carousel,\n    // Slide\n\n  },\n\n  data() {\n    return {\n      subsede: localStorage.getItem(\"idSubsede\"),\n      acceso: localStorage.getItem(\"acceso\"),\n      chartDataL: {\n        labels: [],\n        datasets: [{\n          backgroundColor: ['#41B883', '#E46651', '#00D8FF', '#DD1B16', '#E412351', '#45D8FF', '#aa1B16'],\n          data: []\n        }]\n      },\n      chartDataP: {\n        labels: [],\n        datasets: [{\n          backgroundColor: ['#41B883', '#E46651', '#00D8FF', '#DD1B16', '#E412351', '#45D8FF', '#aa1B16'],\n          data: []\n        }]\n      },\n      totalesL: 0,\n      totalesD: 0,\n      dataBar: {\n        labels: [],\n        datasets: [{\n          backgroundColor: '#33C4FF',\n          label: [],\n          data: []\n        }, {\n          backgroundColor: '#54FF7E',\n          label: [],\n          data: []\n        }]\n      },\n      chartOptions: {\n        maintainAspectRatio: true,\n        responsive: true,\n        plugins: {\n          chartAreaBorder: {\n            borderColor: 'red',\n            borderWidth: 2,\n            borderDash: [5, 5],\n            borderDashOffset: 2\n          }\n        }\n      },\n      chartOptionsBar: {\n        indexAxis: 'y',\n        maintainAspectRatio: true,\n        responsive: true\n      }\n    };\n  },\n\n  async mounted() {\n    await this.consultarCantidad();\n  },\n\n  methods: {\n    obtenersolicitudes() {\n      fetch(RUTA_SERVIDOR_LIBROS + \"/prestamo/\" + localStorage.getItem(\"idSubsede\")).then(respuesta => respuesta.json()).then(datosRespuesta => {\n        this.solicitudes = datosRespuesta.reverse();\n      }).then(() => {\n        for (let index = 0; index < this.solicitudes.length; index++) {\n          this.asignarNombre(this.solicitudes[index].codigoUsuario, this.solicitudes[index].id);\n        }\n      }).catch(console.log);\n    },\n\n    asignarNombre(codigoAlumnon, index) {\n      if (this.NombreSolicitate[index] == undefined) {\n        fetch(RUTA_SERVIDOR_ALUMNOS + \"/alumno/\" + codigoAlumnon).then(respuesta => respuesta.json()).then(datosRespuesta => {\n          this.filtrarSolicitudes();\n          this.NombreSolicitate[index] = datosRespuesta.nombre + \" \" + datosRespuesta.ap_paterno + \" \" + datosRespuesta.ap_materno;\n        });\n      } else {\n        return;\n      }\n    },\n\n    filtrarSolicitudes() {\n      // Filtrar por estado\n      let solicitudesFiltradas = this.solicitudes.filter(solicitud => {\n        return this.estado == -1 || solicitud.estado === parseInt(this.estado);\n      });\n\n      if (this.fechaInicio !== \"\" && this.fechaFin !== \"\") {\n        solicitudesFiltradas = solicitudesFiltradas.filter(solicitud => {\n          return solicitud.fechaPrestamo >= this.fechaInicio && solicitud.fechaPrestamo <= this.fechaFin;\n        });\n      } // Filtrar por fecha de préstamo si se proporcionan fechas válidas\n\n\n      if (this.fechaInicio !== \"\" && this.fechaFin !== \"\") {\n        solicitudesFiltradas = solicitudesFiltradas.filter(solicitud => {\n          return solicitud.fechaPrestamo >= this.fechaInicio && solicitud.fechaPrestamo <= this.fechaFin;\n        });\n      } // Filtrar por código de usuario (coincidencia parcial)\n\n\n      if (this.busquedaCodigo !== \"\") {\n        solicitudesFiltradas = solicitudesFiltradas.filter(solicitud => {\n          // Comprobar si el código de usuario o el título contiene la cadena de búsqueda\n          return solicitud.codigoUsuario.includes(this.busquedaCodigo) || solicitud.titulo.includes(this.busquedaCodigo);\n        }); // No es necesario repetir el bloque de fecha aquí\n      } else {// Si no hay cadena de búsqueda, mantener los filtros anteriores\n        // (no es necesario cambiar nada aquí)\n      } // El resto del código permanece igual\n\n\n      this.solicitudesFiltradas = solicitudesFiltradas; // Realizar alguna acción, como obtener datos de una página\n\n      this.ObtenerDatosPag(1); // Manejo de errores o retroceso de página si no se encontraron resultados\n\n      if (solicitudesFiltradas.length === 0) {\n        this.paginaPrevia();\n      }\n    },\n\n    totalPaginas() {\n      if (this.elementosPorPagina === -1) {\n        return 1; // Mostrar todo en una sola página\n      }\n\n      return Math.ceil(this.solicitudesFiltradas.length / this.elementosPorPagina);\n    },\n\n    ObtenerDatosPag(noPag) {\n      this.paginaActual = noPag;\n      this.datosPaginados = [];\n      let ini = noPag * this.elementosPorPagina - this.elementosPorPagina;\n      let fin = noPag * this.elementosPorPagina;\n      this.datosPaginados = this.solicitudesFiltradas.slice(ini, fin);\n    },\n\n    paginaPrevia() {\n      if (this.paginaActual > 1) {\n        this.paginaActual--;\n      }\n\n      this.ObtenerDatosPag(this.paginaActual);\n    },\n\n    paginaSiguiente() {\n      if (this.paginaActual < this.totalPaginas()) {\n        this.paginaActual++;\n      }\n\n      this.ObtenerDatosPag(this.paginaActual);\n    },\n\n    activo(noPoag) {\n      return noPoag === this.paginaActual ? \"active\" : \"\";\n    },\n\n    consultarCantidad() {\n      fetch(RUTA_SERVIDOR_LIBROS + \"/cantidadLibros/\" + this.subsede).then(respuesta => respuesta.json()).then(datosRespuesta => {\n        if (typeof datosRespuesta[0].success === \"undefined\") {\n          for (let index = 0; index < datosRespuesta[1].length; index++) {\n            if (datosRespuesta[1][index][0] == 'Fisioterapia y Kinesiología') {\n              this.chartDataL.labels.push('Fis. & Kin.' + ' : ' + datosRespuesta[1][index][1]);\n            } else if (datosRespuesta[1][index][0] == 'Bioquímica y farmacia') {\n              this.chartDataL.labels.push('Bio. & Far.' + ' : ' + datosRespuesta[1][index][1]);\n            } else if (datosRespuesta[1][index][0] == 'Ingeniería de sistemas') {\n              this.chartDataL.labels.push('Ing. sistem.' + ' : ' + datosRespuesta[1][index][1]);\n            } else {\n              this.chartDataL.labels.push(datosRespuesta[1][index][0] + ' : ' + datosRespuesta[1][index][1]);\n            }\n\n            this.chartDataL.datasets[0].data.push(datosRespuesta[1][index][1]);\n            this.totalesL += datosRespuesta[1][index][1];\n            this.totalesD += datosRespuesta[2][index][1];\n\n            if (datosRespuesta[1][index][0] == 'Fisioterapia y Kinesiología') {\n              this.dataBar.labels.push('Fis. & Kin.');\n            } else if (datosRespuesta[1][index][0] == 'Bioquímica y farmacia') {\n              this.dataBar.labels.push('Bio. & Far.');\n            } else if (datosRespuesta[1][index][0] == 'Ingeniería de sistemas') {\n              this.dataBar.labels.push('Ing. sistem.');\n            } else {\n              this.dataBar.labels.push(datosRespuesta[1][index][0]);\n            }\n\n            this.dataBar.datasets[0].data.push(datosRespuesta[1][index][1]);\n            this.dataBar.datasets[1].data.push(datosRespuesta[2][index][1]);\n          } // this.data.labels.push(datosRespuesta[1][index][0]+ ' : '+datosRespuesta[1][index][1] )\n\n\n          for (let index = 0; index < datosRespuesta[0].length; index++) {\n            if (datosRespuesta[0][index][0] == 'Fisioterapia y Kinesiología') {\n              this.chartDataP.labels.push('Fis. & Kin.' + ' : ' + datosRespuesta[0][index][1]);\n            } else if (datosRespuesta[0][index][0] == 'Bioquímica y farmacia') {\n              this.chartDataP.labels.push('Bio. & Far.' + ' : ' + datosRespuesta[0][index][1]);\n            } else if (datosRespuesta[0][index][0] == 'Ingeniería de sistemas') {\n              this.chartDataP.labels.push('Ing. sistem.' + ' : ' + datosRespuesta[0][index][1]);\n            } else {\n              this.chartDataP.labels.push(datosRespuesta[0][index][0] + ' : ' + datosRespuesta[0][index][1]);\n            }\n\n            this.chartDataP.datasets[0].data.push(datosRespuesta[0][index][1]);\n          }\n        }\n\n        this.dataBar.datasets[0].label.push('Libros Totales');\n        this.dataBar.datasets[1].label.push('Libros Disponibles');\n      }).catch(console.log);\n    }\n\n  }\n};","map":{"version":3,"mappings":";AAuDA;AACA;AACA;AACAA;AACA;AACA;AAEA;EACAC,0BADA;EAGAC;IACAC,GADA;IAEAC,QAFA,CAGA;IACA;IACA;IACA;IACA;;EAPA,CAHA;;EAaAC;IACA;MACAC,0CADA;MAEAC,sCAFA;MAGAC;QACAC,UADA;QAEAC;UAAAC;UAAAN;QAAA;MAFA,CAHA;MAOAO;QACAH,UADA;QAEAC;UAAAC;UAAAN;QAAA;MAFA,CAPA;MAYAQ,WAZA;MAaAC,WAbA;MAcAC;QACAN,UADA;QAEAC;UACAC,0BADA;UAEAK,SAFA;UAGAX;QAHA,GAKA;UACAM,0BADA;UAEAK,SAFA;UAGAX;QAHA,CALA;MAFA,CAdA;MA6BAY;QACAC,yBADA;QAEAC,gBAFA;QAGAC;UACAC;YACAC,kBADA;YAEAC,cAFA;YAGAC,kBAHA;YAIAC;UAJA;QADA;MAHA,CA7BA;MAyCAC;QACAC,cADA;QAEAT,yBAFA;QAGAC;MAHA;IAzCA;EAiDA,CA/DA;;EAiEA;IAEA;EAGA,CAtEA;;EAwEAS;IACAC;MACAC,MACAC,uEADA,EAGAC,IAHA,CAGAC,6BAHA,EAIAD,IAJA,CAIAE;QACA;MACA,CANA,EAOAF,IAPA,CAOA;QACA;UACA,mBACA,qCADA,EAEA,0BAFA;QAIA;MACA,CAdA,EAeAG,KAfA,CAeAC,WAfA;IAgBA,CAlBA;;IAoBAC;MACA;QACAP,0DACAE,IADA,CACAC,6BADA,EAEAD,IAFA,CAEAE;UACA;UACA,+BACAA,wBACA,GADA,GAEAA,yBAFA,GAGA,GAHA,GAIAA,yBALA;QAMA,CAVA;MAWA,CAZA,MAYA;QACA;MACA;IACA,CApCA;;IAsCAI;MACA;MACA;QACA;MACA,CAFA;;MAIA;QACAC;UACA,OACAC,+CACAA,wCAFA;QAIA,CALA;MAMA,CAbA,CAcA;;;MACA;QACAD;UACA,OACAC,+CACAA,wCAFA;QAIA,CALA;MAMA,CAtBA,CAwBA;;;MACA;QACAD;UACA;UACA,OACAC,yDACAA,8CAFA;QAIA,CANA,EADA,CAQA;MACA,CATA,MASA,CACA;QACA;MACA,CArCA,CAuCA;;;MACA,iDAxCA,CA0CA;;MACA,wBA3CA,CA6CA;;MACA;QACA;MACA;IAAA,CAtFA;;IAuFAC;MACA;QACA,SADA,CACA;MACA;;MACA,iBACA,0DADA;IAGA,CA9FA;;IA+FAC;MACA;MACA;MAGA;MACA;MACA;IAEA,CAxGA;;IA0GAC;MACA;QACA;MACA;;MACA;IACA,CA/GA;;IAgHAC;MACA;QACA;MACA;;MACA;IACA,CArHA;;IAsHAC;MACA;IACA,CAxHA;;IA2HAC;MACAhB,gEACAE,IADA,CACAC,6BADA,EAEAD,IAFA,CAEAE;QAEA;UAEA;YAEA;cACA;YACA,CAFA,MAGA;cACA;YACA,CAFA,MAGA;cACA;YACA,CAFA,MAGA;cACA;YACA;;YAEA;YAGA;YACA;;YACA;cACA;YACA,CAFA,MAGA;cACA;YACA,CAFA,MAGA;cACA;YACA,CAFA,MAGA;cACA;YACA;;YAIA;YACA;UACA,CAvCA,CAwCA;;;UACA;YAEA;cACA;YACA,CAFA,MAGA;cACA;YACA,CAFA,MAGA;cACA;YACA,CAFA,MAGA;cACA;YACA;;YAGA;UAEA;QAAA;;QACA;QACA;MAEA,CAnEA,EAoEAC,KApEA,CAoEAC,WApEA;IAqEA;;EAjMA;AAxEA","names":["ChartJS","name","components","Bar","Doughnut","data","subsede","acceso","chartDataL","labels","datasets","backgroundColor","chartDataP","totalesL","totalesD","dataBar","label","chartOptions","maintainAspectRatio","responsive","plugins","chartAreaBorder","borderColor","borderWidth","borderDash","borderDashOffset","chartOptionsBar","indexAxis","methods","obtenersolicitudes","fetch","RUTA_SERVIDOR_LIBROS","then","respuesta","datosRespuesta","catch","console","asignarNombre","filtrarSolicitudes","solicitudesFiltradas","solicitud","totalPaginas","ObtenerDatosPag","paginaPrevia","paginaSiguiente","activo","consultarCantidad"],"sourceRoot":"src/components","sources":["ListarEstadisticasSolicitudes.vue"],"sourcesContent":["<template>\n\n    <div class=\"align-items-center \" >\n  \n        <div class=\"row\">\n            <div class=\"col-4\">\n              \n                <div class=\"col-12\">\n                    {{totalesL}}\n                </div>\n                <div class=\"col-12\">\n                    Libros fisicos Tolates\n                </div>\n            </div>\n        </div>\n\n\n\n      <div class=\"row\">\n  \n        <div class=\"col-sm-12 col-md-3\">\n          <div align=\"center\">Libros Fisicos : {{totalesL}}</div>\n          <Doughnut \n          v-if=\"chartDataL.labels.length\"\n          id=\"my-chart-id\"\n          :options=\"chartOptions\"\n          :data=\"chartDataL\"\n          \n          />\n        </div>\n        <div class=\"col-sm-12 col-md-3\">\n          <div align=\"center\">Libros Virtuales</div>\n          <Doughnut \n          v-if=\"chartDataP.labels.length\"\n          id=\"my-chart-id\"\n          :options=\"chartOptions\"\n          :data=\"chartDataP\"\n          \n          />\n        </div>\n      \n        <div  v-if=\"dataBar.datasets[0].data.length\" class=\"col-sm-12 col-md-6\">\n          <div align=\"center\">Libros Totales: {{this.totalesL}} / Disponible: {{this.totalesD}}</div>\n          <Bar\n  \n      :options=\"chartOptionsBar\"\n      :data=\"dataBar\"\n    />\n        </div>\n      </div>\n    </div>\n    </template>\n\n    <script>\n\nimport { Bar } from 'vue-chartjs'\nimport { Chart as ChartJS,Title, ArcElement, Tooltip, Legend,BarElement, CategoryScale, LinearScale } from 'chart.js'\nimport { Doughnut } from 'vue-chartjs'\nChartJS.register(Title, ArcElement, Tooltip, Legend, BarElement, CategoryScale, LinearScale)\nexport const RUTA_SERVIDOR_ALUMNOS = process.env.VUE_APP_RUTA_API_ALUMNOS;\nexport const RUTA_SERVIDOR_LIBROS = process.env.VUE_APP_RUTA_API_LIBROS;\n\nexport default {\n  name: \"ListarEstadisticas\",\n\n  components: {\n    Bar,\n    Doughnut,\n    // modalPrestamo,\n    // Loading\n    // CrearLibro,\n    // Carousel,\n    // Slide\n  },\n\n  data() {\n    return {\n        subsede:localStorage.getItem(\"idSubsede\"),\n        acceso: localStorage.getItem(\"acceso\"),\n        chartDataL: {\n        labels: [],\n        datasets: [ {backgroundColor: ['#41B883', '#E46651', '#00D8FF', '#DD1B16','#E412351', '#45D8FF', '#aa1B16'], data: [] } ]\n      },\n      chartDataP: {\n        labels: [],\n        datasets: [ {backgroundColor: ['#41B883', '#E46651', '#00D8FF', '#DD1B16','#E412351', '#45D8FF', '#aa1B16'], data: [] } ]\n      },\n\n      totalesL:0,\n      totalesD:0,\n      dataBar:{\n        labels: [],\n        datasets: [{\n          backgroundColor: '#33C4FF',\n        label: [],\n        data:[]\n      },\n      {\n        backgroundColor: '#54FF7E',\n        label: [],\n        data:[]\n      },\n    ],\n      },\n      \n      chartOptions: {\n        maintainAspectRatio: true,\n        responsive: true,\n        plugins: {\n      chartAreaBorder: {\n        borderColor: 'red',\n        borderWidth: 2,\n        borderDash: [5, 5],\n        borderDashOffset: 2,\n      }\n    }\n      },\n      chartOptionsBar: {\n        indexAxis: 'y',\n        maintainAspectRatio: true,\n        responsive: true\n\n      }\n     \n    }\n  },\n  \n  async mounted() {\n   \n   await this.consultarCantidad();\n     \n    \n  },\n\n  methods: {\n    obtenersolicitudes() {\n      fetch(\n        RUTA_SERVIDOR_LIBROS + \"/prestamo/\" + localStorage.getItem(\"idSubsede\")\n      )\n        .then((respuesta) => respuesta.json())\n        .then((datosRespuesta) => {\n          this.solicitudes = datosRespuesta.reverse();\n        })\n        .then(() => {\n          for (let index = 0; index < this.solicitudes.length; index++) {\n            this.asignarNombre(\n              this.solicitudes[index].codigoUsuario,\n              this.solicitudes[index].id\n            );\n          }\n        })\n        .catch(console.log);\n    },\n\n    asignarNombre(codigoAlumnon, index) {\n      if (this.NombreSolicitate[index] == undefined) {\n        fetch(RUTA_SERVIDOR_ALUMNOS + \"/alumno/\" + codigoAlumnon)\n          .then((respuesta) => respuesta.json())\n          .then((datosRespuesta) => {\n            this.filtrarSolicitudes();\n            this.NombreSolicitate[index] =\n              datosRespuesta.nombre +\n              \" \" +\n              datosRespuesta.ap_paterno +\n              \" \" +\n              datosRespuesta.ap_materno;\n          });\n      } else {\n        return;\n      }\n    },\n\n    filtrarSolicitudes() {\n      // Filtrar por estado\n      let solicitudesFiltradas = this.solicitudes.filter((solicitud) => {\n        return this.estado == -1 || solicitud.estado === parseInt(this.estado);\n      });\n\n      if (this.fechaInicio !== \"\" && this.fechaFin !== \"\") {\n        solicitudesFiltradas = solicitudesFiltradas.filter((solicitud) => {\n          return (\n            solicitud.fechaPrestamo >= this.fechaInicio &&\n            solicitud.fechaPrestamo <= this.fechaFin\n          );\n        });\n      }\n      // Filtrar por fecha de préstamo si se proporcionan fechas válidas\n      if (this.fechaInicio !== \"\" && this.fechaFin !== \"\") {\n        solicitudesFiltradas = solicitudesFiltradas.filter((solicitud) => {\n          return (\n            solicitud.fechaPrestamo >= this.fechaInicio &&\n            solicitud.fechaPrestamo <= this.fechaFin\n          );\n        });\n      }\n     \n      // Filtrar por código de usuario (coincidencia parcial)\n      if (this.busquedaCodigo !== \"\") {\n  solicitudesFiltradas = solicitudesFiltradas.filter((solicitud) => {\n    // Comprobar si el código de usuario o el título contiene la cadena de búsqueda\n    return (\n      solicitud.codigoUsuario.includes(this.busquedaCodigo) ||\n      solicitud.titulo.includes(this.busquedaCodigo)\n    );\n  });\n  // No es necesario repetir el bloque de fecha aquí\n} else {\n  // Si no hay cadena de búsqueda, mantener los filtros anteriores\n  // (no es necesario cambiar nada aquí)\n}\n\n// El resto del código permanece igual\nthis.solicitudesFiltradas = solicitudesFiltradas;\n\n// Realizar alguna acción, como obtener datos de una página\nthis.ObtenerDatosPag(1);\n\n// Manejo de errores o retroceso de página si no se encontraron resultados\nif (solicitudesFiltradas.length === 0) {\n  this.paginaPrevia();\n}},\n    totalPaginas() {\n      if (this.elementosPorPagina === -1) {\n        return 1; // Mostrar todo en una sola página\n      }\n      return Math.ceil(\n        this.solicitudesFiltradas.length / this.elementosPorPagina\n      );\n    },\n    ObtenerDatosPag(noPag) {\n  this.paginaActual = noPag;\n  this.datosPaginados = [];\n\n \n    let ini = noPag * this.elementosPorPagina - this.elementosPorPagina;\n    let fin = noPag * this.elementosPorPagina;\n    this.datosPaginados = this.solicitudesFiltradas.slice(ini, fin);\n  \n},\n\n    paginaPrevia() {\n      if (this.paginaActual > 1) {\n        this.paginaActual--;\n      }\n      this.ObtenerDatosPag(this.paginaActual);\n    },\n    paginaSiguiente() {\n      if (this.paginaActual < this.totalPaginas()) {\n        this.paginaActual++;\n      }\n      this.ObtenerDatosPag(this.paginaActual);\n    },\n    activo(noPoag) {\n      return noPoag === this.paginaActual ? \"active\" : \"\";\n    },\n\n\n    consultarCantidad() {\n      fetch(RUTA_SERVIDOR_LIBROS+\"/cantidadLibros/\"+ this.subsede)\n        .then((respuesta) => respuesta.json())\n        .then((datosRespuesta) => {\n          \n          if (typeof datosRespuesta[0].success === \"undefined\") {      \n         \n          for (let index = 0; index < datosRespuesta[1].length; index++) {\n\n            if(datosRespuesta[1][index][0]=='Fisioterapia y Kinesiología'){\n                this.chartDataL.labels.push('Fis. & Kin.' + ' : '+datosRespuesta[1][index][1] )\n            }\n            else if(datosRespuesta[1][index][0]=='Bioquímica y farmacia'){\n                this.chartDataL.labels.push('Bio. & Far.' + ' : '+datosRespuesta[1][index][1] )\n            }\n            else if(datosRespuesta[1][index][0]=='Ingeniería de sistemas'){\n                this.chartDataL.labels.push('Ing. sistem.'+ ' : '+datosRespuesta[1][index][1] )\n            }\n            else{\n                this.chartDataL.labels.push(datosRespuesta[1][index][0]+ ' : '+datosRespuesta[1][index][1] )\n            }\n            \n            this.chartDataL.datasets[0].data.push(datosRespuesta[1][index][1])\n\n\n            this.totalesL+=datosRespuesta[1][index][1]\n            this.totalesD+=datosRespuesta[2][index][1]\n            if(datosRespuesta[1][index][0]=='Fisioterapia y Kinesiología'){\n                this.dataBar.labels.push('Fis. & Kin.' )\n            }\n            else if(datosRespuesta[1][index][0]=='Bioquímica y farmacia'){\n                this.dataBar.labels.push('Bio. & Far.' )\n            }\n            else if(datosRespuesta[1][index][0]=='Ingeniería de sistemas'){\n                this.dataBar.labels.push('Ing. sistem.' )\n            }\n            else{\n                this.dataBar.labels.push(datosRespuesta[1][index][0] )\n            }\n           \n\n\n             this.dataBar.datasets[0].data.push(datosRespuesta[1][index][1] )\n             this.dataBar.datasets[1].data.push(datosRespuesta[2][index][1] )\n          }\n          // this.data.labels.push(datosRespuesta[1][index][0]+ ' : '+datosRespuesta[1][index][1] )\n          for (let index = 0; index < datosRespuesta[0].length; index++) {\n\n            if(datosRespuesta[0][index][0]=='Fisioterapia y Kinesiología'){\n                this.chartDataP.labels.push('Fis. & Kin.' + ' : '+datosRespuesta[0][index][1] )\n            }\n            else if(datosRespuesta[0][index][0]=='Bioquímica y farmacia'){\n                this.chartDataP.labels.push('Bio. & Far.' + ' : '+datosRespuesta[0][index][1] )\n            }\n            else if(datosRespuesta[0][index][0]=='Ingeniería de sistemas'){\n                this.chartDataP.labels.push('Ing. sistem.'+ ' : '+datosRespuesta[0][index][1] )\n            }\n            else{\n                this.chartDataP.labels.push(datosRespuesta[0][index][0]+ ' : '+datosRespuesta[0][index][1] )\n            }\n\n           \n            this.chartDataP.datasets[0].data.push(datosRespuesta[0][index][1])\n            \n          }}\n            this.dataBar.datasets[0].label.push('Libros Totales');\n            this.dataBar.datasets[1].label.push('Libros Disponibles');\n\n        })\n        .catch(console.log);\n    },\n    \n  }\n\n}\n\n\n\n\n\n    </script>\n"]},"metadata":{},"sourceType":"module"}