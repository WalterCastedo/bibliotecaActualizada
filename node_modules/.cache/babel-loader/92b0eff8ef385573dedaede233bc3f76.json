{"ast":null,"code":"import { getCurrentInstance, computed } from \"vue\";\n\nconst filterComponentProps = childProps => {\n  const {\n    props\n  } = getCurrentInstance();\n  return computed(() => {\n    return Object.keys(childProps).reduce((acc, propName) => {\n      acc[propName] = props[propName];\n      return acc;\n    }, {});\n  });\n};\n\nexport { filterComponentProps as f };","map":{"version":3,"mappings":";;AASa,6BAEXA,UAFkC,IAEP;EACrB;IAAEC;EAAF,IAAYC,oBAAZ;EAEN,OAAOC,SAAS,MAAM;IACpB,OAAOC,OACJC,IADI,CACCL,UADD,EAEJM,MAFI,CAEG,CAACC,GAAD,EAAMC,QAAN,KAA2B;MAChCD,IAAYC,QAAZ,IAAwBP,MAAMO,QAAN,CAAxB;MACM;IACT,CALK,EAKF,EALE,CAAP;EAMD,CAPM,CAAP;AAQF,CAba","names":["childProps","props","getCurrentInstance","computed","Object","keys","reduce","acc","propName"],"sources":["../../../../../src/utils/component-options/filter-props.ts"],"sourcesContent":["import { computed, ExtractPropTypes, getCurrentInstance } from 'vue'\n\n/**\n * Filter current component props to much `childProps` param\n *\n * Used to proxy child component props from parent.\n *\n * @param childProps - child component props declaration\n */\nexport const filterComponentProps = <\n  ChildProps extends Record<string, unknown>,\n>(childProps: ChildProps) => {\n  const { props } = getCurrentInstance()!\n\n  return computed(() => {\n    return Object\n      .keys(childProps)\n      .reduce((acc, propName: string) => {\n        (acc as any)[propName] = props[propName]\n        return acc\n      }, {} as ExtractPropTypes<ChildProps>)\n  })\n}\n"]},"metadata":{},"sourceType":"module"}