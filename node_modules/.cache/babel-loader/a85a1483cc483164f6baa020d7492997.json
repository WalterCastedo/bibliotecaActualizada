{"ast":null,"code":"import { computed } from \"vue\";\nconst useAlignProps = {\n  align: {\n    type: String,\n    default: \"left\"\n  },\n  vertical: {\n    type: Boolean,\n    default: false\n  }\n};\nconst horizontalMap = {\n  left: \"flex-start\",\n  center: \"center\",\n  right: \"flex-end\",\n  between: \"space-between\",\n  around: \"space-around\"\n};\nconst verticalMap = {\n  left: \"flex-start\",\n  center: \"center\",\n  right: \"flex-end\",\n  stretch: \"stretch\"\n};\n\nconst justify = (align, vertical) => {\n  return vertical ? \"center\" : align ? horizontalMap[align] : \"flex-start\";\n};\n\nconst items = (align, vertical) => {\n  return vertical ? verticalMap[align] : \"center\";\n};\n\nfunction useAlign(props) {\n  const alignComputed = computed(() => {\n    return {\n      display: \"flex\",\n      flexDirection: props.vertical ? \"column\" : \"row\",\n      justifyContent: justify(props.align, props.vertical),\n      alignItems: items(props.align, props.vertical)\n    };\n  });\n  return {\n    alignComputed\n  };\n}\n\nexport { useAlign as a, useAlignProps as u };","map":{"version":3,"mappings":";AAEO,MAAMA,gBAAgB;EAC3BC,OAAO;IACLC,MAAMC,MADD;IAELC,SAAS;EAFJ,CADoB;EAK3BC,UAAU;IACRH,MAAMI,OADE;IAERF,SAAS;EAFD;AALiB,CAAtB;AAWP,MAAMG,gBAAgB;EACpBC,MAAM,YADc;EAEpBC,QAAQ,QAFY;EAGpBC,OAAO,UAHa;EAIpBC,SAAS,eAJW;EAKpBC,QAAQ;AALY,CAAtB;AAQA,MAAMC,cAAc;EAClBL,MAAM,YADY;EAElBC,QAAQ,QAFU;EAGlBC,OAAO,UAHW;EAIlBI,SAAS;AAJS,CAApB;;AAOA,MAAMC,UAAU,CAACd,KAAD,EAAgBI,QAAhB,KAAsC;EACpD,OAAOA,WACH,QADG,GAEHJ,QACEM,cAAcN,KAAd,CADF,GAEE,YAJN;AAKF,CANA;;AAQA,MAAMe,QAAQ,CAACf,KAAD,EAAgBI,QAAhB,KAAsC;EAC3C,kBAAWQ,YAAYZ,KAAZ,CAAX,GAA4D,QAA5D;AACT,CAFA;;AAIO,kBAAmBgB,KAAnB,EAA+B;EAC9B,sBAAgBC,SAAS,MAAM;IAC5B;MACLC,SAAS,MADJ;MAELC,eAAeH,MAAMZ,QAAN,GAAiB,QAAjB,GAA4B,KAFtC;MAGLgB,gBAAgBN,QAAQE,MAAMhB,KAAd,EAAqBgB,MAAMZ,QAA3B,CAHX;MAILiB,YAAYN,MAAMC,MAAMhB,KAAZ,EAAmBgB,MAAMZ,QAAzB;IAJP;EAMR,CAPqB,CAAhB;EASC;IACLkB;EADK;AAGT","names":["useAlignProps","align","type","String","default","vertical","Boolean","horizontalMap","left","center","right","between","around","verticalMap","stretch","justify","items","props","computed","display","flexDirection","justifyContent","alignItems","alignComputed"],"sources":["../../../../src/composables/useAlign.ts"],"sourcesContent":["import { computed } from 'vue'\n\nexport const useAlignProps = {\n  align: {\n    type: String,\n    default: 'left',\n  },\n  vertical: {\n    type: Boolean,\n    default: false,\n  },\n}\n\nconst horizontalMap = {\n  left: 'flex-start',\n  center: 'center',\n  right: 'flex-end',\n  between: 'space-between',\n  around: 'space-around',\n}\n\nconst verticalMap = {\n  left: 'flex-start',\n  center: 'center',\n  right: 'flex-end',\n  stretch: 'stretch',\n}\n\nconst justify = (align: string, vertical: boolean) => {\n  return vertical\n    ? 'center'\n    : align\n      ? horizontalMap[align as keyof typeof horizontalMap]\n      : 'flex-start'\n}\n\nconst items = (align: string, vertical: boolean) => {\n  return vertical ? verticalMap[align as keyof typeof verticalMap] : 'center'\n}\n\nexport function useAlign (props: any) {\n  const alignComputed = computed(() => {\n    return {\n      display: 'flex',\n      flexDirection: props.vertical ? 'column' : 'row' as 'row' | 'column',\n      justifyContent: justify(props.align, props.vertical),\n      alignItems: items(props.align, props.vertical),\n    }\n  })\n\n  return {\n    alignComputed,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}