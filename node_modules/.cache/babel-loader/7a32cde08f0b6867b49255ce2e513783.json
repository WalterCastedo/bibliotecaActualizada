{"ast":null,"code":"import { computed } from \"vue\";\nimport { p as pick_1 } from \"../../vendor.js\";\nimport { u as useBem } from \"./useBem.js\";\nconst useFormProps = {\n  disabled: {\n    type: Boolean,\n    default: false\n  },\n  readonly: {\n    type: Boolean,\n    default: false\n  }\n};\n\nconst useForm = (prefix, props) => {\n  const computedClasses = useBem(prefix, computed(() => pick_1(props, [\"disabled\", \"readonly\"])));\n  return {\n    computedClasses\n  };\n};\n\nexport { useForm as a, useFormProps as u };","map":{"version":3,"mappings":";;;AAKO,MAAMA,eAAe;EAC1BC,UAAU;IAAEC,MAAMC,OAAR;IAAiBC,SAAS;EAA1B,CADgB;EAE1BC,UAAU;IAAEH,MAAMC,OAAR;IAAiBC,SAAS;EAA1B;AAFgB,CAArB;;AAiBM,gBAAU,CACrBE,MADqB,EAErBC,KAFqB,KAGlB;EACH,MAAMC,kBAAkBC,OAAwCH,MAAxC,EAAgDI,SAAS,MAAMC,OAAKJ,KAALI,EAAY,CAAC,UAAD,EAAa,UAAb,CAAZA,CAAf,CAAhD,CAAxB;EACA,OAAO;IAAEH;EAAF,CAAP;AACF,CANa","names":["useFormProps","disabled","type","Boolean","default","readonly","prefix","props","computedClasses","useBem","computed","pick"],"sources":["../../../../src/composables/useForm.ts"],"sourcesContent":["import { computed, ExtractPropTypes } from 'vue'\nimport pick from 'lodash/pick.js'\n\nimport { useBem } from './useBem'\n\nexport const useFormProps = {\n  disabled: { type: Boolean, default: false },\n  readonly: { type: Boolean, default: false },\n}\n\nexport const useFormPropsWithId = {\n  ...useFormProps,\n  id: { type: [String, Number], default: undefined },\n  name: { type: [String, Number], default: undefined },\n}\n\n/**\n * @description creates `readonly` and `disabled` BEM modifiers.\n * @param prefix string that classes start with (base BEM class).\n * @param props component props.\n * @returns computed classes object starting with `prefix` and ending with form state BEM modifier.\n */\nexport const useForm = <Prefix extends string = ''>(\n  prefix: Prefix,\n  props: ExtractPropTypes<typeof useFormProps>,\n) => {\n  const computedClasses = useBem<'disabled' | 'readonly', Prefix>(prefix, computed(() => pick(props, ['disabled', 'readonly'])))\n  return { computedClasses }\n}\n"]},"metadata":{},"sourceType":"module"}