{"ast":null,"code":"import axios from \"axios\";\nexport const RUTA_SERVIDOR_ALUMNOS = process.env.VUE_APP_RUTA_API_ALUMNOS;\nexport const RUTA_SERVIDOR_LIBROS = process.env.VUE_APP_RUTA_API_LIBROS;\nexport default {\n  data() {\n    return {\n      idAdmin: localStorage.getItem('idSubsede'),\n      nombreAdmin: \"\",\n      subsedes: [],\n      subSede: localStorage.getItem('idSubsede'),\n      usuarioA: '',\n      contra1: '',\n      contra2: '',\n      cargo: '',\n      idAdminSubsede: {}\n    };\n  },\n\n  props: {\n    variable: {\n      type: Number,\n      default: 0\n    }\n  },\n  created: function () {\n    this.consultarSubsedes();\n  },\n  methods: {\n    agregarAdmin() {\n      if (this.contra1 == this.contra2) {\n        axios.post(RUTA_SERVIDOR_LIBROS + \"/empleados/\", {\n          nombre: this.nombreAdmin,\n          idEmpleado: parseInt(localStorage.getItem('id')),\n          activo: 1,\n          usuario: this.usuarioA,\n          cargo: this.cargo,\n          password: this.contra1,\n          idSubsede: this.subSede\n        }).then(function (response) {\n          location.reload();\n          console.log(response);\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else {\n        alert(\"Las contraseñas no coinciden\");\n      }\n    },\n\n    volver() {\n      location.reload();\n    },\n\n    consultarSubsedes() {\n      if (this.idAdmin == 1) {\n        fetch(RUTA_SERVIDOR_ALUMNOS + \"/subsedes\").then(respuesta => respuesta.json()).then(datosRespuesta => {\n          this.subsedes = [];\n\n          if (typeof datosRespuesta[0].success === \"undefined\") {\n            this.subsedes = datosRespuesta;\n          }\n        }).catch(console.log);\n      } else {\n        fetch(RUTA_SERVIDOR_ALUMNOS + \"/subsede/\" + this.idAdmin).then(respuesta => respuesta.json()).then(datosRespuesta => {\n          this.subsedes = [];\n\n          if (typeof datosRespuesta[0].success === \"undefined\") {\n            this.subsedes = datosRespuesta;\n          }\n        }).catch(console.log);\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAuGA;AACA;AACA;AAEA;EACAA;IACA;MACAC,0CADA;MAEAC,eAFA;MAGAC,YAHA;MAIAC,0CAJA;MAKAC,YALA;MAMAC,WANA;MAOAC,WAPA;MAQAC,SARA;MASAC;IATA;EAWA,CAbA;;EAcAC;IACAC;MACAC,YADA;MAEAC;IAFA;EADA,CAdA;EAqBAC;IACA;EACA,CAvBA;EA0BAC;IAIAC;MACA;QACAC,MACAC,IADA,CACAC,oCADA,EACA;UACAC,wBADA;UAEAC,gDAFA;UAGAC,SAHA;UAIAC,sBAJA;UAKAf,iBALA;UAMAgB,sBANA;UAOAC;QAPA,CADA,EAWAC,IAXA,CAWA;UACAC;UACAC;QAEA,CAfA,EAgBAC,KAhBA,CAgBA;UACAD;QACA,CAlBA;MAmBA,CApBA,MAqBA;QACAE;MACA;IAEA,CA9BA;;IAiCAC;MACAJ;IACA,CAnCA;;IAwCAK;MACA;QACAC,2CACAP,IADA,CACAQ,6BADA,EAEAR,IAFA,CAEAS;UACA;;UACA;YACA;UAEA;QACA,CARA,EASAN,KATA,CASAD,WATA;MAUA,CAXA,MAYA;QACAK,0DACAP,IADA,CACAQ,6BADA,EAEAR,IAFA,CAEAS;UACA;;UACA;YACA;UAEA;QACA,CARA,EASAN,KATA,CASAD,WATA;MAUA;IAGA;;EAnEA;AA1BA","names":["data","idAdmin","nombreAdmin","subsedes","subSede","usuarioA","contra1","contra2","cargo","idAdminSubsede","props","variable","type","default","created","methods","agregarAdmin","axios","post","RUTA_SERVIDOR_LIBROS","nombre","idEmpleado","activo","usuario","password","idSubsede","then","location","console","catch","alert","volver","consultarSubsedes","fetch","respuesta","datosRespuesta"],"sourceRoot":"src/components","sources":["CrearAdmin.vue"],"sourcesContent":["<template>\n  <div class=\"container row\" ref=\"accionEditar\">\n    <form v-on:submit.prevent=\"agregarAdmin\" class=\"col\">\n      <div class=\"row align-items-center text-center\">\n        <div class=\"form-group col-sm\">\n          <label for=\"titulo\">Ingrese el nombre del administrador</label>\n          <input\n            required\n            type=\"text\"\n            name=\"nombre\"\n            v-model=\"nombreAdmin\"\n            id=\"nombreAdmin\"\n            class=\"form-control text-center\"\n            placeholder=\"Nombre del administrador\"\n            aria-describedby=\"nombreAdmin\"\n          />\n          <label for=\"titulo\">Ingrese su nuevo usuario</label>\n          <input\n            required\n            type=\"text\"\n            name=\"usuarioA\"\n            v-model=\"usuarioA\"\n            id=\"usuarioA\"\n            class=\"form-control text-center\"\n            placeholder=\"usuario para iniciar sesión\"\n            aria-describedby=\"usuarioA\"\n          />\n          <label for=\"titulo\">Ingrese la contraseña</label>\n          <input\n            required\n            type=\"current-password\"\n            name=\"contra1\"\n            v-model=\"contra1\"\n            id=\"contra1\"\n            class=\"form-control text-center\"\n            placeholder=\"contraseña\"\n            aria-describedby=\"contra1\"\n          />\n          <label for=\"titulo\">Ingrese otra vez la contraseña</label>\n          <input\n            required\n            type=\"current-password\"\n            name=\"contra2\"\n            v-model=\"contra2\"\n            id=\"contra2\"\n            class=\"form-control text-center\"\n            placeholder=\"contraseña\"\n            aria-describedby=\"contra2\"\n          />\n          <label for=\"titulo\">Ingrese el cargo del administrador</label>\n          <input\n            required\n            type=\"text\"\n            name=\"cargo\"\n            v-model=\"cargo\"\n            id=\"cargo\"\n            class=\"form-control text-center\"\n            placeholder=\"cargo\"\n            aria-describedby=\"cargo\"\n          />\n         \n           \n           \n           <div  class=\"form-group col text-center\">\n        <label>Selecciona una carrera</label>\n        <select\n          v-model=\"subSede\"\n          class=\"form-control\"\n        > \n          <option \n            v-for=\"sub in subsedes\"\n            :key=\"sub.id\"\n            v-bind:value=\"sub.id\"\n          >\n            {{ sub.subsede }}\n          </option>\n        </select>\n       \n      </div>\n\n\n\n        </div>\n      </div>\n\n      <br />\n      <div class=\"container row\" raria-label=\"\">\n        <a\n          v-if=\"variable < 0\"\n          v-on:click.stop=\"agregarAdmin()\"\n          class=\"btn btn-success col-5\"\n        >\n          Agregar nuevo autor\n        </a>\n        <span class=\"col-2\"></span>\n       \n        <a v-on:click.stop=\"volver()\" class=\"btn btn-danger col-5\">Cancelar</a>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport const RUTA_SERVIDOR_ALUMNOS = process.env.VUE_APP_RUTA_API_ALUMNOS;\nexport const RUTA_SERVIDOR_LIBROS = process.env.VUE_APP_RUTA_API_LIBROS;\n\nexport default {\n  data() {\n    return {\n      idAdmin:localStorage.getItem('idSubsede'),\n      nombreAdmin: \"\",\n       subsedes: [],\n       subSede:localStorage.getItem('idSubsede'),\n       usuarioA:'',\n       contra1:'',\n       contra2:'',\n       cargo:'',\n       idAdminSubsede:{},\n    };\n  },\n  props: {\n    variable: {\n      type: Number,\n      default: 0,\n    },\n  },\n    \n created: function () {\n   this.consultarSubsedes();\n  },\n\n\n  methods: {\n   \n\n\n    agregarAdmin() {\n      if(this.contra1==this.contra2){\naxios\n        .post(RUTA_SERVIDOR_LIBROS+\"/empleados/\", {\n          nombre: this.nombreAdmin,\n          idEmpleado: parseInt(localStorage.getItem('id')),\n          activo: 1,\n          usuario:this.usuarioA,\n          cargo:this.cargo,\n          password:this.contra1,\n          idSubsede:this.subSede\n\n        })\n        .then(function (response) {\n            location.reload();\n          console.log(response);\n          \n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n      }\n      else{\n        alert(\"Las contraseñas no coinciden\")\n      }\n      \n    },\n\n   \n    volver() {\n      location.reload();\n    },\n  \n    \n\n\n    consultarSubsedes() {\n      if(this.idAdmin==1){\n fetch(RUTA_SERVIDOR_ALUMNOS+\"/subsedes\")\n        .then((respuesta) => respuesta.json())\n        .then((datosRespuesta) => {\n          this.subsedes = [];\n          if (typeof datosRespuesta[0].success === \"undefined\") {\n            this.subsedes = datosRespuesta;\n      \n          }\n        })\n        .catch(console.log);\n    }\n    else{\n      fetch(RUTA_SERVIDOR_ALUMNOS+\"/subsede/\"+this.idAdmin)\n        .then((respuesta) => respuesta.json())\n        .then((datosRespuesta) => {\n          this.subsedes = [];\n          if (typeof datosRespuesta[0].success === \"undefined\") {\n            this.subsedes = datosRespuesta;\n      \n          }\n        })\n        .catch(console.log);\n    }\n\n\n      }\n     \n\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}