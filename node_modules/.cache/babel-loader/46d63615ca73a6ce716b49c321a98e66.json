{"ast":null,"code":"import { i as isDate_1 } from \"../../../../vendor.js\";\n\nconst isDatesDayEqual = (date1, date2) => (date1 == null ? void 0 : date1.toDateString()) === (date2 == null ? void 0 : date2.toDateString());\n\nconst isDatesYearEqual = (date1, date2) => {\n  return (date1 == null ? void 0 : date1.getFullYear()) === (date2 == null ? void 0 : date2.getFullYear());\n};\n\nconst isDatesMonthEqual = (date1, date2) => {\n  return isDatesYearEqual(date1, date2) && (date1 == null ? void 0 : date1.getMonth()) === (date2 == null ? void 0 : date2.getMonth());\n};\n\nconst createYearDate = year => {\n  const date = new Date();\n  date.setFullYear(year);\n  return date;\n};\n\nconst isRange = value => {\n  return typeof value === \"object\" && (\"start\" in value || \"end\" in value);\n};\n\nconst isSingleDate = value => isDate_1(value);\n\nconst isDates = value => Array.isArray(value);\n\nexport { isSingleDate as a, isRange as b, createYearDate as c, isDatesMonthEqual as d, isDatesDayEqual as e, isDatesYearEqual as f, isDates as i };","map":{"version":3,"mappings":";;AAKa,wBAAkB,CAACA,KAAD,EAAsBC,KAAtB,KAAuD,gCAAOC,YAAP,SAA0BD,+BAAOC,YAAP,EAA1B,CAAzE;;AAEA,yBAAmB,CAACF,KAAD,EAAsBC,KAAtB,KAAuD;EACrF,OAAO,gCAAOE,WAAP,SAAyBF,+BAAOE,WAAP,EAAzB,CAAP;AACF,CAFa;;AAIA,0BAAoB,CAACH,KAAD,EAAsBC,KAAtB,KAAuD;EAC/E,wBAAiBD,KAAjB,EAAwBC,KAAxB,KAAkC,gCAAOG,QAAP,SAAsBH,+BAAOG,QAAP,EAAtB,CAAlC;AACT,CAFa;;AAIA,uBAAkBC,IAAD,IAAkB;EACxC,aAAO,IAAIC,IAAJ,EAAP;EACNC,KAAKC,WAAL,CAAiBH,IAAjB;EACO;AACT,CAJa;;AAcA,gBAAWI,KAAD,IAAiF;EACtG,OAAO,OAAOA,KAAP,KAAiB,QAAjB,KAA8B,WAAWA,KAAX,IAAoB,SAASA,KAA3D,CAAP;AACF,CAFa;;AAIN,MAAMC,eAAgBD,KAAD,IAAsEE,SAAOF,KAAPE,CAA3F;;AAEA,MAAMC,UAAWH,KAAD,IAAwEI,MAAMC,OAAN,CAAcL,KAAd,CAAxF","names":["date1","date2","toDateString","getFullYear","getMonth","year","Date","date","setFullYear","value","isSingleDate","isDate","isDates","Array","isArray"],"sources":["../../../../../../src/components/va-date-picker/utils/date-utils.ts"],"sourcesContent":["import isDate from 'lodash/isDate.js'\n\nimport { DatePickerModelValue, DatePickerRange } from '../types'\nimport { DateInputModelValue } from '../../va-date-input/types'\n\nexport const isDatesDayEqual = (date1?: Date | null, date2?: Date | null): boolean => date1?.toDateString() === date2?.toDateString()\n\nexport const isDatesYearEqual = (date1?: Date | null, date2?: Date | null): boolean => {\n  return date1?.getFullYear() === date2?.getFullYear()\n}\n\nexport const isDatesMonthEqual = (date1?: Date | null, date2?: Date | null): boolean => {\n  return isDatesYearEqual(date1, date2) && date1?.getMonth() === date2?.getMonth()\n}\n\nexport const createYearDate = (year: number) => {\n  const date = new Date()\n  date.setFullYear(year)\n  return date\n}\n\nexport const isDatesArrayIncludeDay = (dates: Date[], date: Date): boolean => {\n  return !!dates.find((d) => isDatesDayEqual(d, date))\n}\n\nexport const isDatesArrayIncludeMonth = (dates: Date[], date: Date): boolean => {\n  return !!dates.find((d) => isDatesMonthEqual(d, date))\n}\n\nexport const isRange = (value: DatePickerModelValue | DateInputModelValue): value is DatePickerRange => {\n  return typeof value === 'object' && ('start' in value || 'end' in value)\n}\n\nexport const isSingleDate = (value: DatePickerModelValue | DateInputModelValue): value is Date => isDate(value)\n\nexport const isDates = (value: DatePickerModelValue | DateInputModelValue): value is Date[] => Array.isArray(value)\n"]},"metadata":{},"sourceType":"module"}