{"ast":null,"code":"import { c as createProxyComponent } from \"./createProxyComponent.js\";\nconst CLASS_COMPONENT_KEY = \"__c\";\n\nconst patchClassComponent = component => {\n  component[CLASS_COMPONENT_KEY] = createProxyComponent(component[CLASS_COMPONENT_KEY]);\n  return component;\n};\n\nconst withConfigTransport = component => {\n  if (\"setup\" in component) {\n    return createProxyComponent(component);\n  } else if (CLASS_COMPONENT_KEY in component) {\n    return patchClassComponent(component);\n  } else {\n    component.setup = () => ({});\n\n    return createProxyComponent(component);\n  }\n};\n\nexport { withConfigTransport as w };","map":{"version":3,"mappings":";AAEA,MAAMA,sBAAsB,KAA5B;;AAEA,MAAMC,sBAAuBC,SAAD,IAAoD;EACpEA,iCAAuBC,qBAAqBD,UAAUF,mBAAV,CAArB,CAAvB;EACH;AACT,CAHA;;AAMa,4BAA0BE,SAAJ,IAAwB;EACzD,IAAI,WAAYA,SAAhB,EAAmC;IACjC,OAAOC,qBAAqBD,SAArB,CAAP;EAA4C,CAD9C,MAC8C,IACnCF,uBAAwBE,SADW,EACQ;IAEpD,OAAOD,oBAAoBC,SAApB,CAAP;EAA2C,CAHC,MAIvC;IAEJA,UAAkBE,KAAlB,GAA0B,OAAkC,EAAlC,CAA1B;;IAED,OAAOD,qBAAqBD,SAArB,CAAP;EACF;AACF,CAZa","names":["CLASS_COMPONENT_KEY","patchClassComponent","component","createProxyComponent","setup"],"sources":["../../../../../src/services/config-transport/withConfigTransport.ts"],"sourcesContent":["import { createProxyComponent } from './createProxyComponent'\n\nconst CLASS_COMPONENT_KEY = '__c'\n\nconst patchClassComponent = (component: { [CLASS_COMPONENT_KEY]: any }): any => {\n  component[CLASS_COMPONENT_KEY] = createProxyComponent(component[CLASS_COMPONENT_KEY])\n  return component\n}\n\n/** Allows props to be passed from vuestic config if they were not provided */\nexport const withConfigTransport = <T>(component: T): T => {\n  if ('setup' in (component as any)) {\n    return createProxyComponent(component as any)\n  } else if (CLASS_COMPONENT_KEY in (component as any)) {\n    // TODO: Remove this. We don't want to use class components\n    return patchClassComponent(component as any)\n  } else {\n    // Options api. We need to transform it to Composition API and then create proxy.\n    (component as any).setup = () => ({ /* Fake setup function */})\n    // TODO: remove this? no point if this will not work anyway\n    return createProxyComponent(component as any)\n  }\n}\n\nexport default withConfigTransport\n"]},"metadata":{},"sourceType":"module"}