{"ast":null,"code":"import { computed } from \"vue\";\nimport { s as safeCSSLength } from \"../../../utils/css.js\";\nimport { u as useColors } from \"../../../composables/useColors.js\";\nconst prefix = \"--va-data-table\";\n\nconst isFunction = val => typeof val === \"function\";\n\nconst getClass = classes => isFunction(classes) ? classes() : classes;\n\nconst getStyle = styles => isFunction(styles) ? styles() : styles;\n\nfunction useStylable(props) {\n  const {\n    getColor,\n    getFocusColor,\n    getHoverColor\n  } = useColors();\n  const color = computed(() => getColor(props.selectedColor));\n  const CSSVariables = computed(() => ({\n    hoverColor: getHoverColor(color.value),\n    selectedColor: props.selectable ? getFocusColor(color.value) : void 0,\n    tableHeight: props.height ? safeCSSLength(props.height) : \"var(--va-data-table-height)\",\n    theadBg: props.stickyHeader ? \"var(--va-data-table-thead-background, var(--va-data-table-header-background))\" : \"var(--va-data-table-thead-background)\",\n    tfootBg: props.stickyFooter ? \"var(--va-data-table-tfoot-background, var(--va-data-table-header-background))\" : \"var(--va-data-table-tfoot-background)\"\n  }));\n\n  const getHeaderCSSVariables = column => ({\n    [`${prefix}-width`]: column.width && safeCSSLength(column.width),\n    [`${prefix}-align`]: column.thAlign,\n    [`${prefix}-vertical-align`]: column.thVerticalAlign,\n    [`${prefix}-cursor`]: column.sortable ? \"pointer\" : \"default\"\n  });\n\n  const getCellCSSVariables = cell => ({\n    [`${prefix}-align`]: cell.column.tdAlign,\n    [`${prefix}-vertical-align`]: cell.column.tdVerticalAlign\n  });\n\n  const getFooterCSSVariables = column => ({\n    [`${prefix}-align`]: column.thAlign,\n    [`${prefix}-vertical-align`]: column.thVerticalAlign,\n    [`${prefix}-cursor`]: props.allowFooterSorting && column.sortable ? \"pointer\" : \"default\"\n  });\n\n  return {\n    CSSVariables,\n    getHeaderCSSVariables,\n    getCellCSSVariables,\n    getFooterCSSVariables,\n    getClass,\n    getStyle\n  };\n}\n\nexport { useStylable as u };","map":{"version":3,"mappings":";;;AAYA,MAAMA,SAAS,iBAAf;;AAEA,MAAMC,aAAcC,GAAD,IAAmC,OAAOA,GAAP,KAAe,UAArE;;AAWA,MAAMC,WAAYC,OAAD,IAAmCH,WAAWG,OAAX,IAAsBA,SAAtB,GAAkCA,OAAtF;;AACA,MAAMC,WAAYC,MAAD,IAAkCL,WAAWK,MAAX,IAAqBA,QAArB,GAAgCA,MAAnF;;AAEA,qBAAqCC,KAArC,EAA8D;EAC5D,MAAM;IAAEC,QAAF;IAAYC,aAAZ;IAA2BC;EAA3B,IAA6CC,WAAnD;EAEA,MAAMC,QAAQC,SAAS,MAAML,SAASD,MAAMO,aAAf,CAAf,CAAd;EAEM,qBAAeD,SAAS,OAAO;IACnCE,YAAYL,cAAcE,MAAMI,KAApB,CADuB;IAEnCF,eAAeP,MAAMU,UAAN,GAAmBR,cAAcG,MAAMI,KAApB,CAAnB,GAAgD,MAF5B;IAGnCE,aAAaX,MAAMY,MAAN,GAAeC,cAAcb,MAAMY,MAApB,CAAf,GAA6C,6BAHvB;IAInCE,SAASd,MAAMe,YAAN,GACL,+EADK,GAEL,uCAN+B;IAOnCC,SAAShB,MAAMiB,YAAN,GACL,+EADK,GAEL;EAT+B,CAAP,CAAT,CAAf;;EAYA,8BAAyBC,MAAD,KAAsC;IAClE,CAAC,GAAGzB,cAAJ,GAAqByB,OAAOC,KAAP,IAAgBN,cAAcK,OAAOC,KAArB,CAD6B;IAElE,CAAC,GAAG1B,cAAJ,GAAqByB,OAAOE,OAFsC;IAGlE,CAAC,GAAG3B,uBAAJ,GAA8ByB,OAAOG,eAH6B;IAIlE,CAAC,GAAG5B,eAAJ,GAAsByB,OAAOI,QAAP,GAAkB,SAAlB,GAA8B;EAJc,CAAtC,CAAxB;;EAOA,4BAAuBC,IAAD,KAA0B;IACpD,CAAC,GAAG9B,cAAJ,GAAqB8B,KAAKL,MAAL,CAAYM,OADmB;IAEpD,CAAC,GAAG/B,uBAAJ,GAA8B8B,KAAKL,MAAL,CAAYO;EAFU,CAA1B,CAAtB;;EAKA,8BAAyBP,MAAD,KAAsC;IAClE,CAAC,GAAGzB,cAAJ,GAAqByB,OAAOE,OADsC;IAElE,CAAC,GAAG3B,uBAAJ,GAA8ByB,OAAOG,eAF6B;IAGlE,CAAC,GAAG5B,eAAJ,GAAsBO,MAAM0B,kBAAN,IAA4BR,OAAOI,QAAnC,GAA8C,SAA9C,GAA0D;EAHd,CAAtC,CAAxB;;EAMC;IACLK,YADK;IAELC,qBAFK;IAGLC,mBAHK;IAILC,qBAJK;IAKLlC,QALK;IAMLE;EANK;AAQT","names":["prefix","isFunction","val","getClass","classes","getStyle","styles","props","getColor","getFocusColor","getHoverColor","useColors","color","computed","selectedColor","hoverColor","value","selectable","tableHeight","height","safeCSSLength","theadBg","stickyHeader","tfootBg","stickyFooter","column","width","thAlign","thVerticalAlign","sortable","cell","tdAlign","tdVerticalAlign","allowFooterSorting","CSSVariables","getHeaderCSSVariables","getCellCSSVariables","getFooterCSSVariables"],"sources":["../../../../../../src/components/va-data-table/hooks/useStylable.ts"],"sourcesContent":["import { computed } from 'vue'\n\nimport { safeCSSLength } from '../../../utils/css'\nimport { useColors } from '../../../composables'\n\nimport type {\n  DataTableColumnInternal,\n  DataTableColumnClass,\n  DataTableColumnStyle,\n  DataTableCell,\n} from '../types'\n\nconst prefix = '--va-data-table'\n\nconst isFunction = (val: unknown): val is Function => typeof val === 'function'\n\ninterface useStylableProps {\n  selectable: boolean\n  selectedColor: string\n  allowFooterSorting: boolean\n  stickyHeader: boolean\n  stickyFooter: boolean\n  height: string | number | undefined\n}\n\nconst getClass = (classes: DataTableColumnClass) => isFunction(classes) ? classes() : classes\nconst getStyle = (styles: DataTableColumnStyle) => isFunction(styles) ? styles() : styles\n\nexport default function useStylable (props: useStylableProps) {\n  const { getColor, getFocusColor, getHoverColor } = useColors()\n\n  const color = computed(() => getColor(props.selectedColor))\n\n  const CSSVariables = computed(() => ({\n    hoverColor: getHoverColor(color.value),\n    selectedColor: props.selectable ? getFocusColor(color.value) : undefined,\n    tableHeight: props.height ? safeCSSLength(props.height) : 'var(--va-data-table-height)',\n    theadBg: props.stickyHeader\n      ? 'var(--va-data-table-thead-background, var(--va-data-table-header-background))'\n      : 'var(--va-data-table-thead-background)',\n    tfootBg: props.stickyFooter\n      ? 'var(--va-data-table-tfoot-background, var(--va-data-table-header-background))'\n      : 'var(--va-data-table-tfoot-background)',\n  }))\n\n  const getHeaderCSSVariables = (column: DataTableColumnInternal) => ({\n    [`${prefix}-width`]: column.width && safeCSSLength(column.width),\n    [`${prefix}-align`]: column.thAlign,\n    [`${prefix}-vertical-align`]: column.thVerticalAlign,\n    [`${prefix}-cursor`]: column.sortable ? 'pointer' : 'default',\n  })\n\n  const getCellCSSVariables = (cell: DataTableCell) => ({\n    [`${prefix}-align`]: cell.column.tdAlign,\n    [`${prefix}-vertical-align`]: cell.column.tdVerticalAlign,\n  })\n\n  const getFooterCSSVariables = (column: DataTableColumnInternal) => ({\n    [`${prefix}-align`]: column.thAlign,\n    [`${prefix}-vertical-align`]: column.thVerticalAlign,\n    [`${prefix}-cursor`]: props.allowFooterSorting && column.sortable ? 'pointer' : 'default',\n  })\n\n  return {\n    CSSVariables,\n    getHeaderCSSVariables,\n    getCellCSSVariables,\n    getFooterCSSVariables,\n    getClass,\n    getStyle,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}