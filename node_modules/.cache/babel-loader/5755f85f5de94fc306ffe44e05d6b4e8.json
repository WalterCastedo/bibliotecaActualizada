{"ast":null,"code":"import { u as useElementBackground } from \"./useElementBackground/useElementBackground.js\";\nimport { u as useTextColor } from \"./useTextColor.js\";\n\nconst isRefString = r => typeof (r == null ? void 0 : r.value) === \"string\";\n\nconst useElementTextColor = background => {\n  if (isRefString(background) || typeof background === \"string\") {\n    const {\n      textColorComputed: textColorComputed2\n    } = useTextColor(background);\n    return textColorComputed2;\n  }\n\n  const {\n    background: elBg\n  } = useElementBackground(background);\n  const {\n    textColorComputed\n  } = useTextColor(elBg);\n  return textColorComputed;\n};\n\nexport { useElementTextColor as u };","map":{"version":3,"mappings":";;;AAKA,MAAMA,cAAeC,CAAD,IAA8B,QAAOA,uBAAGC,KAAV,MAAoB,QAAtE;;AAWa,4BAAuBC,UAAD,IAAqE;EACtG,IAAIH,YAAYG,UAAZ,KAA2B,OAAOA,UAAP,KAAsB,QAArD,EAA+D;IACvD;MAAEC,mBAAsBC;IAAxB,IAAwBC,aAAaH,UAAb,CAAxB;IACC;EACT;;EAEA,MAAM;IAAEA,YAAYI;EAAd,IAAuBC,qBAAqBL,UAArB,CAA7B;EACM;IAAEC;EAAF,IAAwBE,aAAaC,IAAb,CAAxB;EACC;AACT,CATa","names":["isRefString","r","value","background","textColorComputed","textColorComputed2","useTextColor","elBg","useElementBackground"],"sources":["../../../../src/composables/useElementTextColor.ts"],"sourcesContent":["import type { Ref } from 'vue'\nimport type { CssColor } from '../composables/useColors'\nimport { useElementBackground } from './useElementBackground'\nimport { useTextColor } from './useTextColor'\n\nconst isRefString = (r: any): r is Ref<string> => typeof r?.value === 'string'\n\n/**\n * Returns text color based on element background.\n *\n * If HTMLElement provided will take element background counting opacity.\n *\n * If string (CSS color) provided will use it as background color.\n *\n * If element not provided current instance element will be used.\n */\nexport const useElementTextColor = (background?: Ref<HTMLElement | CssColor | undefined> | CssColor) => {\n  if (isRefString(background) || typeof background === 'string') {\n    const { textColorComputed } = useTextColor(background)\n    return textColorComputed\n  }\n\n  const { background: elBg } = useElementBackground(background as Ref<HTMLElement | undefined>)\n  const { textColorComputed } = useTextColor(elBg)\n  return textColorComputed\n}\n"]},"metadata":{},"sourceType":"module"}