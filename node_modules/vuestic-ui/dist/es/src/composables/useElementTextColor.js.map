{"version":3,"file":"useElementTextColor.js","sources":["../../../../src/composables/useElementTextColor.ts"],"sourcesContent":["import type { Ref } from 'vue'\nimport type { CssColor } from '../composables/useColors'\nimport { useElementBackground } from './useElementBackground'\nimport { useTextColor } from './useTextColor'\n\nconst isRefString = (r: any): r is Ref<string> => typeof r?.value === 'string'\n\n/**\n * Returns text color based on element background.\n *\n * If HTMLElement provided will take element background counting opacity.\n *\n * If string (CSS color) provided will use it as background color.\n *\n * If element not provided current instance element will be used.\n */\nexport const useElementTextColor = (background?: Ref<HTMLElement | CssColor | undefined> | CssColor) => {\n  if (isRefString(background) || typeof background === 'string') {\n    const { textColorComputed } = useTextColor(background)\n    return textColorComputed\n  }\n\n  const { background: elBg } = useElementBackground(background as Ref<HTMLElement | undefined>)\n  const { textColorComputed } = useTextColor(elBg)\n  return textColorComputed\n}\n"],"names":[],"mappings":";;AAKA,MAAM,cAAc,CAAC,MAA6B,OAAO,wBAAG,WAAU;AAWzD,MAAA,sBAAsB,CAAC,eAAoE;AACtG,MAAI,YAAY,UAAU,KAAK,OAAO,eAAe,UAAU;AACvD,UAAA,EAAE,mBAAsB,uBAAA,aAAa,UAAU;AAC9C,WAAA;AAAA,EACT;AAEA,QAAM,EAAE,YAAY,SAAS,qBAAqB,UAA0C;AACtF,QAAA,EAAE,sBAAsB,aAAa,IAAI;AACxC,SAAA;AACT;;"}