import { defineComponent, openBlock, createElementBlock, renderSlot } from "vue";



import { u as useComponentPresetProp } from "../../composables/useComponentPreset.js";



import { u as useStatefulEmits, a as useStatefulProps, b as useStateful } from "../../composables/useStateful.js";
import { u as useAccordion } from "./hooks/useAccordion.js";
import { _ as _export_sfc } from "../../../plugin-vue_export-helper.js";
var VaAccordion_vue_vue_type_style_index_0_lang = /* @__PURE__ */ (() => ".va-accordion{font-family:var(--va-font-family)}.va-accordion .va-collapse:not(:first-child,:last-child) .va-collapse__header{border-radius:0}.va-accordion .va-collapse.va-collapse--expanded:last-child .va-collapse__header{border-radius:0}.va-accordion .va-collapse:first-child .va-collapse__header{border-bottom-left-radius:0;border-bottom-right-radius:0}.va-accordion .va-collapse:last-child .va-collapse__header{border-top-left-radius:0;border-top-right-radius:0}\n")();
const _sfc_main = defineComponent({
  name: "VaAccordion",
  emits: useStatefulEmits,
  props: {
    ...useStatefulProps,
    ...useComponentPresetProp,
    modelValue: { type: Array, default: () => [] },
    multiple: { type: Boolean, default: false },
    inset: { type: Boolean, default: false },
    popout: { type: Boolean, default: false }
  },
  setup(props, { emit }) {
    const { valueComputed } = useStateful(props, emit, "modelValue", { defaultValue: [] });
    const { items } = useAccordion(props, valueComputed);
    return { collapses: items, value: valueComputed };
  }
});
const _hoisted_1 = { class: "va-accordion" };
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", _hoisted_1, [
    renderSlot(_ctx.$slots, "default")
  ]);
}
var _VaAccordion = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { _VaAccordion as _ };

import './VaAccordion.css';
//# sourceMappingURL=VaAccordion.js.map
