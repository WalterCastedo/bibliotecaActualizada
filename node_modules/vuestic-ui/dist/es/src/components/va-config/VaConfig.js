import { computed, defineComponent, provide, inject } from "vue";
import { u as useComponentPresetProp } from "../../composables/useComponentPreset.js";
const LocalConfigKey = Symbol("LocalConfigKey");
const CONFIGS_DEFAULT = computed(() => []);
function useLocalConfig() {
  return inject(LocalConfigKey, CONFIGS_DEFAULT);
}
var VaConfig = defineComponent({
  name: "VaConfig",
  props: {
    ...useComponentPresetProp,
    components: { type: Object, default: () => ({}) }
  },
  setup(props) {
    const prevChain = useLocalConfig();
    const nextChain = computed(() => [...prevChain.value, props.components]);
    provide(LocalConfigKey, nextChain);
    return {};
  },
  render() {
    return this.$slots.default ? this.$slots.default() : null;
  }
});
export { VaConfig as V, useLocalConfig as u };
//# sourceMappingURL=VaConfig.js.map
