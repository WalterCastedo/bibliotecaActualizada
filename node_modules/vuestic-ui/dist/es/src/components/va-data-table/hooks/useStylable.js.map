{"version":3,"file":"useStylable.js","sources":["../../../../../../src/components/va-data-table/hooks/useStylable.ts"],"sourcesContent":["import { computed } from 'vue'\n\nimport { safeCSSLength } from '../../../utils/css'\nimport { useColors } from '../../../composables'\n\nimport type {\n  DataTableColumnInternal,\n  DataTableColumnClass,\n  DataTableColumnStyle,\n  DataTableCell,\n} from '../types'\n\nconst prefix = '--va-data-table'\n\nconst isFunction = (val: unknown): val is Function => typeof val === 'function'\n\ninterface useStylableProps {\n  selectable: boolean\n  selectedColor: string\n  allowFooterSorting: boolean\n  stickyHeader: boolean\n  stickyFooter: boolean\n  height: string | number | undefined\n}\n\nconst getClass = (classes: DataTableColumnClass) => isFunction(classes) ? classes() : classes\nconst getStyle = (styles: DataTableColumnStyle) => isFunction(styles) ? styles() : styles\n\nexport default function useStylable (props: useStylableProps) {\n  const { getColor, getFocusColor, getHoverColor } = useColors()\n\n  const color = computed(() => getColor(props.selectedColor))\n\n  const CSSVariables = computed(() => ({\n    hoverColor: getHoverColor(color.value),\n    selectedColor: props.selectable ? getFocusColor(color.value) : undefined,\n    tableHeight: props.height ? safeCSSLength(props.height) : 'var(--va-data-table-height)',\n    theadBg: props.stickyHeader\n      ? 'var(--va-data-table-thead-background, var(--va-data-table-header-background))'\n      : 'var(--va-data-table-thead-background)',\n    tfootBg: props.stickyFooter\n      ? 'var(--va-data-table-tfoot-background, var(--va-data-table-header-background))'\n      : 'var(--va-data-table-tfoot-background)',\n  }))\n\n  const getHeaderCSSVariables = (column: DataTableColumnInternal) => ({\n    [`${prefix}-width`]: column.width && safeCSSLength(column.width),\n    [`${prefix}-align`]: column.thAlign,\n    [`${prefix}-vertical-align`]: column.thVerticalAlign,\n    [`${prefix}-cursor`]: column.sortable ? 'pointer' : 'default',\n  })\n\n  const getCellCSSVariables = (cell: DataTableCell) => ({\n    [`${prefix}-align`]: cell.column.tdAlign,\n    [`${prefix}-vertical-align`]: cell.column.tdVerticalAlign,\n  })\n\n  const getFooterCSSVariables = (column: DataTableColumnInternal) => ({\n    [`${prefix}-align`]: column.thAlign,\n    [`${prefix}-vertical-align`]: column.thVerticalAlign,\n    [`${prefix}-cursor`]: props.allowFooterSorting && column.sortable ? 'pointer' : 'default',\n  })\n\n  return {\n    CSSVariables,\n    getHeaderCSSVariables,\n    getCellCSSVariables,\n    getFooterCSSVariables,\n    getClass,\n    getStyle,\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;AAYA,MAAM,SAAS;AAEf,MAAM,aAAa,CAAC,QAAkC,OAAO,QAAQ;AAWrE,MAAM,WAAW,CAAC,YAAkC,WAAW,OAAO,IAAI,QAAY,IAAA;AACtF,MAAM,WAAW,CAAC,WAAiC,WAAW,MAAM,IAAI,OAAW,IAAA;AAEnF,qBAAqC,OAAyB;AAC5D,QAAM,EAAE,UAAU,eAAe,kBAAkB,UAAU;AAE7D,QAAM,QAAQ,SAAS,MAAM,SAAS,MAAM,aAAa,CAAC;AAEpD,QAAA,eAAe,SAAS,MAAO;AAAA,IACnC,YAAY,cAAc,MAAM,KAAK;AAAA,IACrC,eAAe,MAAM,aAAa,cAAc,MAAM,KAAK,IAAI;AAAA,IAC/D,aAAa,MAAM,SAAS,cAAc,MAAM,MAAM,IAAI;AAAA,IAC1D,SAAS,MAAM,eACX,kFACA;AAAA,IACJ,SAAS,MAAM,eACX,kFACA;AAAA,EACJ,EAAA;AAEI,QAAA,wBAAwB,CAAC,WAAqC;AAAA,IAClE,CAAC,GAAG,iBAAiB,OAAO,SAAS,cAAc,OAAO,KAAK;AAAA,IAC/D,CAAC,GAAG,iBAAiB,OAAO;AAAA,IAC5B,CAAC,GAAG,0BAA0B,OAAO;AAAA,IACrC,CAAC,GAAG,kBAAkB,OAAO,WAAW,YAAY;AAAA,EAAA;AAGhD,QAAA,sBAAsB,CAAC,SAAyB;AAAA,IACpD,CAAC,GAAG,iBAAiB,KAAK,OAAO;AAAA,IACjC,CAAC,GAAG,0BAA0B,KAAK,OAAO;AAAA,EAAA;AAGtC,QAAA,wBAAwB,CAAC,WAAqC;AAAA,IAClE,CAAC,GAAG,iBAAiB,OAAO;AAAA,IAC5B,CAAC,GAAG,0BAA0B,OAAO;AAAA,IACrC,CAAC,GAAG,kBAAkB,MAAM,sBAAsB,OAAO,WAAW,YAAY;AAAA,EAAA;AAG3E,SAAA;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAAA;AAEJ;;"}