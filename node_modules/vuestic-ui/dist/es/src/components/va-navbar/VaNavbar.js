import { defineComponent, computed, openBlock, createElementBlock, normalizeStyle, renderSlot, createCommentVNode } from "vue";

import { u as useColors } from "../../composables/useColors.js";
import { u as useComponentPresetProp } from "../../composables/useComponentPreset.js";


import { u as useFixedBarProps, a as useFixedBar } from "../../composables/useFixedBar.js";



import { s as setupScroll } from "../../composables/useScroll.js";
import { u as useTextColor } from "../../composables/useTextColor.js";
import { _ as _export_sfc } from "../../../plugin-vue_export-helper.js";
var VaNavbar_vue_vue_type_style_index_0_lang = /* @__PURE__ */ (() => '.va-navbar{--va-navbar-mobile-height: 6.5rem;--va-navbar-height: 4.0625rem;--va-navbar-padding-left: 1rem;--va-navbar-padding-right: 1rem;--va-navbar-transition: transform .5s ease;--va-navbar-position: relative;--va-nav-z-index: calc(var(--va-z-index-teleport-overlay) - 100);--va-navbar-sm-padding: 1.1875rem 1rem 1rem;--va-navbar-shape-width: 33%;--va-navbar-shape-max-width: 467px;--va-navbar-shape-bg: rgba(0, 0, 0, .5);--va-navbar-shape-border-left: 3.1875rem solid transparent;--va-navbar-shape-border-right: 3.1875rem solid transparent;--va-navbar-shape-transition: border-top-color .3s ease;--va-navbar-item-margin: .75rem;--va-navbar-item-margin-side: calc(2 * var(--va-navbar-item-margin))}.va-navbar{display:grid;grid-template:"left center right"/1fr 1fr 1fr;align-items:center;transition:var(--va-navbar-transition);position:var(--va-navbar-position);height:var(--va-navbar-height);padding-left:var(--va-navbar-padding-left);padding-right:var(--va-navbar-padding-right);background-color:var(--va-primary);font-family:var(--va-font-family);top:0;left:0;width:100%;min-width:100%;z-index:var(--va-navbar-z-index)}.va-navbar__left{display:flex;flex-direction:row;grid-area:left;justify-self:start}.va-navbar__left>.va-navbar__item{margin-right:var(--va-navbar-item-margin-side)}.va-navbar__left>.va-navbar__item:last-child{margin-right:0}@media (max-width: 767.98px){.va-navbar__left{justify-content:center;align-items:center}}.va-navbar__center{display:flex;grid-area:center;justify-self:center}.va-navbar__center>.va-navbar__item{margin:0 var(--va-navbar-item-margin)}.va-navbar__center>.va-navbar__item:last-child{margin-right:0}.va-navbar__center>.va-navbar__item:first-child{margin-left:0}.va-navbar__right{display:flex;flex-direction:row;justify-content:flex-end;grid-area:right;justify-self:end}.va-navbar__right>.va-navbar__item{margin-right:var(--va-navbar-item-margin-side)}.va-navbar__right>.va-navbar__item:last-child{margin-right:0}@media (max-width: 767.98px){.va-navbar__right{justify-content:center;align-items:center}}.va-navbar__background-shape{transition:var(--va-navbar-shape-transition);width:var(--va-navbar-shape-width);max-width:var(--va-navbar-shape-max-width);position:absolute;left:0;right:0;top:0;margin:auto;border-top:var(--va-navbar-height) solid var(--va-navbar-shape-bg);border-left:var(--va-navbar-shape-border-left);border-right:var(--va-navbar-shape-border-right);height:0}@media (max-width: 767.98px){.va-navbar{display:flex;flex-direction:column;justify-content:center;align-items:center;height:var(--va-navbar-mobile-height);padding:var(--va-navbar-sm-padding)}.va-navbar>*{width:100%}.va-navbar__center,.va-navbar__background-shape{display:none}}\n')();
const _sfc_main = defineComponent({
  name: "VaNavbar",
  props: {
    ...useFixedBarProps,
    ...useComponentPresetProp,
    color: { type: String, default: "background-secondary" },
    textColor: { type: String },
    shape: { type: Boolean, default: false }
  },
  setup(props) {
    const { scrollRoot, isScrolledDown } = setupScroll(props.fixed);
    const { fixedBarStyleComputed } = useFixedBar(props, isScrolledDown);
    const { getColor, shiftHSLAColor } = useColors();
    const { textColorComputed } = useTextColor();
    const color = computed(() => getColor(props.color));
    const shapeStyleComputed = computed(() => ({
      borderTopColor: shiftHSLAColor(color.value, { h: -1, s: -11, l: 10 })
    }));
    const computedStyle = computed(() => ({
      ...fixedBarStyleComputed.value,
      backgroundColor: color.value,
      color: textColorComputed.value,
      fill: textColorComputed.value
    }));
    return { computedStyle, shapeStyleComputed, scrollRoot };
  }
});
const _hoisted_1 = {
  key: 0,
  class: "va-navbar__left"
};
const _hoisted_2 = {
  key: 1,
  class: "va-navbar__center"
};
const _hoisted_3 = {
  key: 2,
  class: "va-navbar__right"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("header", {
    ref: "scrollRoot",
    class: "va-navbar",
    style: normalizeStyle(_ctx.computedStyle)
  }, [
    _ctx.$slots.left ? (openBlock(), createElementBlock("div", _hoisted_1, [
      renderSlot(_ctx.$slots, "left")
    ])) : createCommentVNode("", true),
    _ctx.$slots.center || _ctx.$slots.default ? (openBlock(), createElementBlock("div", _hoisted_2, [
      _ctx.$slots.center && !_ctx.$slots.default ? renderSlot(_ctx.$slots, "center", { key: 0 }) : createCommentVNode("", true),
      _ctx.$slots.default && !_ctx.$slots.center ? renderSlot(_ctx.$slots, "default", { key: 1 }) : createCommentVNode("", true)
    ])) : createCommentVNode("", true),
    _ctx.$slots.right ? (openBlock(), createElementBlock("div", _hoisted_3, [
      renderSlot(_ctx.$slots, "right")
    ])) : createCommentVNode("", true),
    _ctx.shape ? (openBlock(), createElementBlock("div", {
      key: 3,
      class: "va-navbar__background-shape",
      style: normalizeStyle(_ctx.shapeStyleComputed)
    }, null, 4)) : createCommentVNode("", true)
  ], 4);
}
var _VaNavbar = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { _VaNavbar as _ };

import './VaNavbar.css';
//# sourceMappingURL=VaNavbar.js.map
