import { defineComponent, computed, openBlock, createBlock, resolveDynamicComponent, normalizeClass, withCtx, createElementVNode, renderSlot } from "vue";
import { p as pick_1 } from "../../../vendor.js";
import { u as useBem } from "../../composables/useBem.js";


import { u as useComponentPresetProp } from "../../composables/useComponentPreset.js";



import { u as useRouterLinkProps, a as useRouterLink } from "../../composables/useRouterLink.js";
import { _ as _export_sfc } from "../../../plugin-vue_export-helper.js";
var VaListItem_vue_vue_type_style_index_0_lang = /* @__PURE__ */ (() => ":root{--va-list-width: 100%;--va-list-label-text-align: center;--va-list-label-padding: .3rem 0;--va-list-item-display: flex;--va-list-item-align-items: center;--va-list-item-width: 100%;--va-list-item-height: 100%;--va-list-item-label-color: #34495e;--va-list-item-label-display: -webkit-box;--va-list-item-label-box-orient: vertical;--va-list-item-label-overflow: hidden;--va-list-item-label-line-height: normal;--va-list-item-label-caption-font-size: 85%;--va-list-item-label-caption-color: #babfc2;--va-list-item-section-display: flex;--va-list-item-section-icon-min-width: 1.5rem;--va-list-item-section-icon-align-items: center;--va-list-item-section-icon-justify-content: center;--va-list-item-section-icon-margin: .6rem .75rem;--va-list-item-section-icon-font-size: 1.25rem;--va-list-item-section-avatar-min-width: 3rem}.va-list-item{display:block;font-family:var(--va-font-family)}.va-list-item--disabled{cursor:default;opacity:.4;pointer-events:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.va-list-item:not(.va-list-item--disabled):focus-visible{outline:2px solid var(--va-focus)!important;border-radius:2px;outline-offset:-2px}.va-list-item__inner{display:var(--va-list-item-display);align-items:var(--va-list-item-align-items);width:var(--va-list-item-width);height:var(--va-list-item-height)}\n")();
const _sfc_main = defineComponent({
  name: "VaListItem",
  emits: ["focus", "click"],
  props: {
    ...useRouterLinkProps,
    ...useComponentPresetProp,
    tag: { type: String, default: "div" },
    disabled: { type: Boolean, default: false }
  },
  setup(props) {
    const tabIndexComputed = computed(() => props.disabled ? -1 : 0);
    const computedClass = useBem("va-list-item", () => ({
      ...pick_1(props, ["disabled"])
    }));
    return {
      ...useRouterLink(props),
      tabIndexComputed,
      computedClass
    };
  }
});
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createBlock(resolveDynamicComponent(_ctx.tagComputed), {
    class: normalizeClass(["va-list-item", _ctx.computedClass]),
    role: "listitem",
    href: _ctx.hrefComputed,
    target: _ctx.target,
    to: _ctx.to,
    replace: _ctx.replace,
    exact: _ctx.exact,
    "active-class": _ctx.activeClass,
    "exact-active-class": _ctx.exactActiveClass,
    tabindex: _ctx.tabIndexComputed
  }, {
    default: withCtx(() => [
      createElementVNode("div", {
        class: "va-list-item__inner",
        onClick: _cache[0] || (_cache[0] = ($event) => _ctx.$emit("click")),
        onFocus: _cache[1] || (_cache[1] = ($event) => _ctx.$emit("focus"))
      }, [
        renderSlot(_ctx.$slots, "default")
      ], 32)
    ]),
    _: 3
  }, 8, ["href", "target", "to", "replace", "exact", "active-class", "exact-active-class", "class", "tabindex"]);
}
var _VaListItem = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { _VaListItem as _ };

import './VaListItem.css';
//# sourceMappingURL=VaListItem.js.map
