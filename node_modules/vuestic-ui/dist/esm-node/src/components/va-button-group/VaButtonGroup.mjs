import { defineComponent, computed, resolveComponent, openBlock, createElementBlock, normalizeClass, createVNode, withCtx, renderSlot } from "vue";
import { e as extractComponentProps } from "../../utils/component-options/extract-component-options.mjs";
import { o as omit_1 } from "../../../vendor.mjs";
import { u as useBem } from "../../composables/useBem.mjs";
import { V as VaConfig } from "../va-config/VaConfig.mjs";

import { u as useComponentPresetProp } from "../../composables/useComponentPreset.mjs";



import { V as VaButton } from "../va-button/index.mjs";
import { _ as _export_sfc } from "../../../plugin-vue_export-helper.mjs";
var VaButtonGroup_vue_vue_type_style_index_0_lang = /* @__PURE__ */ (() => ':root{--va-button-group-display: flex;--va-button-group-justify-content: stretch;--va-button-group-border-radius: 999px;--va-button-group-gap: .25rem;--va-button-group-button-margin: 0;--va-button-group-button-width: auto;--va-button-group-button-padding: .25rem}.va-button-group{display:var(--va-button-group-display);justify-content:var(--va-button-group-justify-content);border-radius:var(--va-button-group-border-radius);font-family:var(--va-font-family);width:-webkit-max-content;width:-moz-max-content;width:max-content}.va-button-group--grow{width:100%;--va-button-group-button-width: 100%}.va-button-group--square{border-radius:var(--va-button-border-radius)}.va-button-group--small.va-button-group--square{border-radius:var(--va-button-sm-border-radius)}.va-button-group--large.va-button-group--square{border-radius:var(--va-button-lg-border-radius)}.va-button-group .va-button{margin:var(--va-button-group-button-margin);width:var(--va-button-group-button-width);box-shadow:none;outline:none}.va-button-group .va-button:focus-visible{outline:none!important}.va-button-group .va-button:focus-visible:before{outline:2px solid var(--va-focus)!important;border-radius:"inherit";outline-offset:-2px}.va-button-group>.va-button:last-child{padding-right:var(--va-button-group-button-padding)}.va-button-group>.va-button:first-child{padding-left:var(--va-button-group-button-padding)}.va-button-group>.va-button:not(:last-child){padding-right:var(--va-button-group-gap);border-top-right-radius:0;border-bottom-right-radius:0;border-right:0}.va-button-group>.va-button:not(:last-child) .va-button__content{margin-right:0}.va-button-group>.va-button+.va-button{padding-left:var(--va-button-group-gap);border-top-left-radius:0;border-bottom-left-radius:0;border-left:0}.va-button-group>.va-button+.va-button .va-button__content{margin-left:0}\n')();
const VaButtonProps = omit_1(extractComponentProps(VaButton), ["block"]);
const _sfc_main = defineComponent({
  name: "VaButtonGroup",
  components: { VaConfig },
  props: {
    ...VaButtonProps,
    ...useComponentPresetProp,
    grow: {
      type: Boolean,
      default: false
    }
  },
  setup: (props) => {
    const buttonConfig = computed(() => ({ VaButton: { ...props } }));
    const computedClass = useBem("va-button-group", () => ({
      square: !props.round,
      grow: props.grow,
      small: props.size === "small",
      large: props.size === "large"
    }));
    return { buttonConfig, computedClass };
  }
});
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_va_config = resolveComponent("va-config");
  return openBlock(), createElementBlock("div", {
    class: normalizeClass(["va-button-group", _ctx.computedClass])
  }, [
    createVNode(_component_va_config, { components: _ctx.buttonConfig }, {
      default: withCtx(() => [
        renderSlot(_ctx.$slots, "default")
      ]),
      _: 3
    }, 8, ["components"])
  ], 2);
}
var _VaButtonGroup = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { _VaButtonGroup as _ };
//# sourceMappingURL=VaButtonGroup.mjs.map
