import { defineComponent, computed, openBlock, createBlock, resolveDynamicComponent, normalizeClass, withCtx, renderSlot, createTextVNode, toDisplayString } from "vue";






import { u as useRouterLinkProps, a as useRouterLink } from "../../../composables/useRouterLink.mjs";
import { _ as _export_sfc } from "../../../../plugin-vue_export-helper.mjs";
var VaBreadcrumbsItem_vue_vue_type_style_index_0_lang = /* @__PURE__ */ (() => ":root{--va-breadcrumb-item-display: inline-flex;--va-breadcrumb-item-color: inherit;--va-breadcrumb-item-hover-opacity: .7;--va-breadcrumb-item-focus-text-decoration: underline}.va-breadcrumb-item{display:var(--va-breadcrumb-item-display);color:var(--va-breadcrumb-item-color)}.va-breadcrumb-item--link{color:inherit}.va-breadcrumb-item--link:hover{opacity:var(--va-breadcrumb-item-hover-opacity)}.va-breadcrumb-item--link:focus{-webkit-text-decoration:var(--va-breadcrumb-item-focus-text-decoration);text-decoration:var(--va-breadcrumb-item-focus-text-decoration)}\n")();
const _sfc_main = defineComponent({
  name: "VaBreadcrumbsItem",
  props: {
    ...useRouterLinkProps,
    disabled: { type: Boolean, default: false },
    label: { type: String, default: "" }
  },
  setup: (props) => {
    const { tagComputed, hrefComputed, isLinkTag } = useRouterLink(props);
    const classComputed = computed(() => ({
      "va-breadcrumb-item--link": isLinkTag.value
    }));
    return { tagComputed, hrefComputed, classComputed };
  }
});
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createBlock(resolveDynamicComponent(_ctx.tagComputed), {
    class: normalizeClass(["va-breadcrumb-item", _ctx.classComputed]),
    "active-class": _ctx.$props.activeClass,
    href: _ctx.hrefComputed,
    to: _ctx.$props.to,
    target: _ctx.$props.target,
    replace: _ctx.$props.replace,
    append: _ctx.$props.append,
    exact: _ctx.$props.exact,
    "exact-active-class": _ctx.$props.exactActiveClass
  }, {
    default: withCtx(() => [
      renderSlot(_ctx.$slots, "default", {}, () => [
        createTextVNode(toDisplayString(_ctx.label), 1)
      ])
    ]),
    _: 3
  }, 8, ["class", "active-class", "href", "to", "target", "replace", "append", "exact", "exact-active-class"]);
}
var _VaBreadcrumbsItem = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { _VaBreadcrumbsItem as _ };
//# sourceMappingURL=VaBreadcrumbsItem.mjs.map
