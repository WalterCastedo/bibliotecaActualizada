import { defineComponent, computed, useCssVars, openBlock, createElementBlock, createElementVNode, renderSlot } from "vue";

import { u as useColors } from "../../composables/useColors.mjs";





import { _ as _export_sfc } from "../../../plugin-vue_export-helper.mjs";
var VaScrollContainer_vue_vue_type_style_index_0_lang = /* @__PURE__ */ (() => ".va-scroll-container{scrollbar-color:var(--3df6be13) transparent;scrollbar-width:thin;overflow-x:var(--95f9955a);overflow-y:var(--95f99558);width:100%;height:100%;scrollbar-width:var(--f572b6ba)}.va-scroll-container::-webkit-scrollbar{width:4px;height:4px}.va-scroll-container::-webkit-scrollbar-track{box-shadow:none;border-radius:10px}.va-scroll-container::-webkit-scrollbar-thumb{background:var(--3df6be13);opacity:.3;border-radius:2px}.va-scroll-container__content{height:-webkit-max-content;height:-moz-max-content;height:max-content;width:-webkit-max-content;width:-moz-max-content;width:max-content}\n")();
const __default__ = defineComponent({
  name: "VaScrollContainer",
  props: {
    vertical: {
      type: Boolean,
      default: false
    },
    horizontal: {
      type: Boolean,
      default: false
    },
    color: {
      type: String,
      default: "secondary"
    },
    size: {
      type: String,
      default: "thin"
    }
  },
  setup(props) {
    const { getColor } = useColors();
    return {
      overflowX: computed(() => props.horizontal ? "auto" : "hidden"),
      overflowY: computed(() => props.vertical ? "auto" : "hidden"),
      scrollColor: computed(() => getColor(props.color)),
      scrollbarWidth: computed(() => props.size === "default" ? "auto" : props.size)
    };
  }
});
const __injectCSSVars__ = () => {
  useCssVars((_ctx) => ({
    "3df6be13": _ctx.scrollColor,
    "95f9955a": _ctx.overflowX,
    "95f99558": _ctx.overflowY,
    "f572b6ba": _ctx.scrollbarWidth
  }));
};
const __setup__ = __default__.setup;
__default__.setup = __setup__ ? (props, ctx) => {
  __injectCSSVars__();
  return __setup__(props, ctx);
} : __injectCSSVars__;
const _sfc_main = __default__;
const _hoisted_1 = { class: "va-scroll-container" };
const _hoisted_2 = { class: "va-scroll-container__content" };
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", _hoisted_1, [
    createElementVNode("div", _hoisted_2, [
      renderSlot(_ctx.$slots, "default")
    ])
  ]);
}
var _VaScrollContainer = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { _VaScrollContainer as _ };
//# sourceMappingURL=VaScrollContainer.mjs.map
