import { u as useComponentPresetProp } from "../../composables/useComponentPreset.mjs";
import { defineComponent, computed, resolveComponent, openBlock, createElementBlock, renderSlot, createVNode, createCommentVNode } from "vue";

import { u as useColors } from "../../composables/useColors.mjs";




import { u as useLoadingProps } from "../../composables/useLoading.mjs";

import { V as VaIcon } from "../va-icon/index.mjs";
import { _ as _export_sfc } from "../../../plugin-vue_export-helper.mjs";
var VaInnerLoading_vue_vue_type_style_index_0_lang = /* @__PURE__ */ (() => ':root{--inner-loading-position: relative;--inner-loading-min-width: fit-content;--inner-loading-width: 100%;--inner-loading-overlay-display: flex;--inner-loading-overlay-align-items: center;--inner-loading-overlay-justify-content: center;--inner-loading-overlay-position: absolute;--inner-loading-overlay-top: 0;--inner-loading-overlay-bottom: 0;--inner-loading-overlay-width: 100%;--inner-loading-overlay-background: var(--va-background-primary)}.inner-loading{position:var(--inner-loading-position);min-width:var(--inner-loading-min-width);width:var(--inner-loading-width);font-family:var(--va-font-family)}.inner-loading__overlay{display:var(--inner-loading-overlay-display);align-items:var(--inner-loading-overlay-align-items);justify-content:var(--inner-loading-overlay-justify-content);position:var(--inner-loading-overlay-position);top:var(--inner-loading-overlay-top);bottom:var(--inner-loading-overlay-bottom);width:var(--inner-loading-overlay-width);z-index:0}.inner-loading__overlay:after{content:"";position:absolute;width:100%;height:100%;top:0;left:0;background:var(--inner-loading-overlay-background);opacity:.3;z-index:-1}\n')();
const _sfc_main = defineComponent({
  name: "VaInnerLoading",
  components: { VaIcon },
  props: {
    ...useLoadingProps,
    ...useComponentPresetProp,
    color: { type: String },
    icon: { type: String, default: "autorenew" },
    size: { type: Number, default: 30 }
  },
  setup(props) {
    const { getColor } = useColors();
    const colorComputed = computed(() => getColor(props.color));
    return { colorComputed };
  }
});
const _hoisted_1 = { class: "inner-loading" };
const _hoisted_2 = {
  key: 0,
  class: "inner-loading__overlay",
  "aria-hidden": "true"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_va_icon = resolveComponent("va-icon");
  return openBlock(), createElementBlock("div", _hoisted_1, [
    renderSlot(_ctx.$slots, "default"),
    _ctx.$props.loading ? (openBlock(), createElementBlock("div", _hoisted_2, [
      createVNode(_component_va_icon, {
        class: "inner-loading__spinner",
        spin: "",
        color: _ctx.colorComputed,
        size: _ctx.$props.size,
        name: _ctx.$props.icon
      }, null, 8, ["color", "size", "name"])
    ])) : createCommentVNode("", true)
  ]);
}
var _VaInnerLoading = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { _VaInnerLoading as _ };
//# sourceMappingURL=VaInnerLoading.mjs.map
