{"version":3,"file":"current-app.mjs","sources":["../../../../src/services/current-app.ts"],"sourcesContent":["import type { App } from 'vue'\nimport { inject as vueInject } from 'vue'\n\n/**\n * Similar to `getCurrentInstance` but for plugins, so we can use inject in plugins.\n */\nlet app: App | null\n\nexport const setCurrentApp = (instance: App | null) => { app = instance }\nexport const getCurrentApp = () => app\n\n/** Wrapper around vue inject, so it can be used in plugins */\nexport const inject = ((key: string, value?: any) => {\n  const app = getCurrentApp()?._context.provides[key]\n\n  return app || vueInject(key, value)\n}) as unknown as typeof vueInject\n"],"names":["vueInject"],"mappings":";AAMA,IAAI;AAES,MAAA,gBAAgB,CAAC,aAAyB;AAAQ,QAAA;AAAS;AACjE,MAAM,gBAAgB,MAAM;AAGtB,MAAA,SAAU,CAAC,KAAa,UAAgB;;AACnD,QAAM,OAAM,oBAAiB,MAAjB,mBAAiB,SAAS,SAAS;AAExC,SAAA,QAAOA,SAAU,KAAK,KAAK;AACpC;;"}